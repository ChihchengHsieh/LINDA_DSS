
net {
  name = unnamedBN;
  software = "aGrUM 0.17.0";
  node_size = (50 50);
}

node radius_mean {
   states = ("(8.0000, 27.2000]" );
   label = "radius_mean";
   ID = "radius_mean";
}

node texture_mean {
   states = ("(14.000, 34.0000]" "(34.000, 38.8000]" );
   label = "texture_mean";
   ID = "texture_mean";
}

node perimeter_mean {
   states = ("(163.00000, 188.4000]" "(62.00000, 163.4000]" );
   label = "perimeter_mean";
   ID = "perimeter_mean";
}

node area_mean {
   states = ("(1835.000000, 2235.5000]" "(197.8900, 1835.3000]" );
   label = "area_mean";
   ID = "area_mean";
}

node smoothness_mean {
   states = ("(0.000, 0.1000]" "(0.0000, 0.1000]" );
   label = "smoothness_mean";
   ID = "smoothness_mean";
}

node compactness_mean {
   states = ("(0.000, 0.3000]" "(0.0000, 0.2000]" );
   label = "compactness_mean";
   ID = "compactness_mean";
}

node concavity_mean {
   states = ("(0.0000, 0.4000]" );
   label = "concavity_mean";
   ID = "concavity_mean";
}

node concave points_mean {
   states = ("(-0.0059, 0.0000]" "(0.0000, 0.0900]" "(0.0000, 0.1000]" );
   label = "concave points_mean";
   ID = "concave points_mean";
}

node symmetry_mean {
   states = ("(0.00, 0.1000]" "(0.000, 0.2000]" );
   label = "symmetry_mean";
   ID = "symmetry_mean";
}

node fractal_dimension_mean {
   states = ("(0.0514, 0.0580]" "(0.0587, 0.0590]" "(0.0591, 0.0960]" );
   label = "fractal_dimension_mean";
   ID = "fractal_dimension_mean";
}

node radius_se {
   states = ("(0.000, 0.5000]" "(0.000, 2.8000]" );
   label = "radius_se";
   ID = "radius_se";
}

node texture_se {
   states = ("(0.000, 1.3000]" "(1.000, 2.2000]" "(2.000, 3.7000]" );
   label = "texture_se";
   ID = "texture_se";
}

node perimeter_se {
   states = ("(2.0100, 3.8000]" "(3.000, 8.3000]" "(8.0000, 21.8000]" );
   label = "perimeter_se";
   ID = "perimeter_se";
}

node area_se {
   states = ("(12.0000, 58.5000]" "(482.00000, 534.1000]" "(58.00000, 482.0000]" );
   label = "area_se";
   ID = "area_se";
}

node smoothness_se {
   states = ("(-0.0062, 0.0200]" "(0.00000, 0.0300]" );
   label = "smoothness_se";
   ID = "smoothness_se";
}

node compactness_se {
   states = ("(0.0000, 0.1000]" "(0.00000, 0.0800]" "(0.0119, 0.0600]" );
   label = "compactness_se";
   ID = "compactness_se";
}

node concavity_se {
   states = ("(0.000, 0.2000]" "(0.0000, 0.1000]" );
   label = "concavity_se";
   ID = "concavity_se";
}

node concave points_se {
   states = ("(0.00, 0.0000]" "(0.0000, 0.0300]" );
   label = "concave points_se";
   ID = "concave points_se";
}

node symmetry_se {
   states = ("(-0.0017, 0.0200]" "(0.00000, 0.0200]" "(0.00000, 0.0500]" );
   label = "symmetry_se";
   ID = "symmetry_se";
}

node fractal_dimension_se {
   states = ("(-0.0088, 0.0050]" "(0.0058, 0.0060]" "(0.0064, 0.0090]" );
   label = "fractal_dimension_se";
   ID = "fractal_dimension_se";
}

node radius_worst {
   states = ("(11.0000, 18.0000]" "(18.0000, 33.4000]" "(33.0000, 35.2000]" );
   label = "radius_worst";
   ID = "radius_worst";
}

node texture_worst {
   states = ("(15.0000, 28.0000]" "(28.000, 31.0000]" "(31.000, 40.7000]" );
   label = "texture_worst";
   ID = "texture_worst";
}

node perimeter_worst {
   states = ("(120.3999, 144.5000]" "(144.00000, 236.5000]" );
   label = "perimeter_worst";
   ID = "perimeter_worst";
}

node area_worst {
   states = ("(1020.000000, 3893.2000]" "(257.000000, 1020.8000]" );
   label = "area_worst";
   ID = "area_worst";
}

node smoothness_worst {
   states = ("(0.000, 0.2000]" "(0.0750, 0.1000]" );
   label = "smoothness_worst";
   ID = "smoothness_worst";
}

node compactness_worst {
   states = ("(0.00, 0.0000]" "(0.00, 0.9000]" );
   label = "compactness_worst";
   ID = "compactness_worst";
}

node concavity_worst {
   states = ("(0.00, 1.1000]" "(0.0029, 0.0000]" );
   label = "concavity_worst";
   ID = "concavity_worst";
}

node concave points_worst {
   states = ("(0.00, 0.0000]" "(0.0009, 0.1000]" );
   label = "concave points_worst";
   ID = "concave points_worst";
}

node symmetry_worst {
   states = ("(0.000, 0.6000]" );
   label = "symmetry_worst";
   ID = "symmetry_worst";
}

node fractal_dimension_worst {
   states = ("(0.0000, 0.1000]" );
   label = "fractal_dimension_worst";
   ID = "fractal_dimension_worst";
}

node diagnosis {
   states = (No Yes );
   label = "diagnosis";
   ID = "diagnosis";
}

potential ( radius_mean | area_worst   ) {
   data = 
   ((   1)   % area_worst="(1020.000000, 3893.2000]"   
   (   1));   % area_worst="(257.000000, 1020.8000]"   
}

potential ( texture_mean | radius_mean   ) {
   data = 
   ((   0.995033   0.00496689));   % radius_mean="(8.0000, 27.2000]"   
}

potential ( perimeter_mean | concave points_mean   ) {
   data = 
   ((   0.0283843   0.971616)   % concave points_mean="(-0.0059, 0.0000]"   
   (   0.000749625   0.99925)   % concave points_mean="(0.0000, 0.0900]"   
   (   0.05   0.95));   % concave points_mean="(0.0000, 0.1000]"   
}

potential ( area_mean | concave points_mean   ) {
   data = 
   ((   0.0414847   0.958515)   % concave points_mean="(-0.0059, 0.0000]"   
   (   0.000749625   0.99925)   % concave points_mean="(0.0000, 0.0900]"   
   (   0.05   0.95));   % concave points_mean="(0.0000, 0.1000]"   
}

potential ( smoothness_mean | concave points_mean   ) {
   data = 
   ((   0.0676856   0.932314)   % concave points_mean="(-0.0059, 0.0000]"   
   (   0.000749625   0.99925)   % concave points_mean="(0.0000, 0.0900]"   
   (   0.05   0.95));   % concave points_mean="(0.0000, 0.1000]"   
}

potential ( compactness_mean | concave points_mean   ) {
   data = 
   ((   0.0545852   0.945415)   % concave points_mean="(-0.0059, 0.0000]"   
   (   0.000749625   0.99925)   % concave points_mean="(0.0000, 0.0900]"   
   (   0.05   0.95));   % concave points_mean="(0.0000, 0.1000]"   
}

potential ( concavity_mean | area_worst   ) {
   data = 
   ((   1)   % area_worst="(1020.000000, 3893.2000]"   
   (   1));   % area_worst="(257.000000, 1020.8000]"   
}

potential ( concave points_mean | fractal_dimension_mean   symmetry_mean   ) {
   data = 
   (((   0.914496   0.0487642   0.0367401)   % fractal_dimension_mean="(0.0514, 0.0580]"   symmetry_mean="(0.00, 0.1000]"   
   (   0.000276167   0.999448   0.000276167)   % fractal_dimension_mean="(0.0587, 0.0590]"   symmetry_mean="(0.00, 0.1000]"   
   (   0.00680272   0.986395   0.00680272))   % fractal_dimension_mean="(0.0591, 0.0960]"   symmetry_mean="(0.00, 0.1000]"   
   ((   0.00606061   0.987879   0.00606061)   % fractal_dimension_mean="(0.0514, 0.0580]"   symmetry_mean="(0.000, 0.2000]"   
   (   0.333333   0.333333   0.333333)   % fractal_dimension_mean="(0.0587, 0.0590]"   symmetry_mean="(0.000, 0.2000]"   
   (   0.333333   0.333333   0.333333)));   % fractal_dimension_mean="(0.0591, 0.0960]"   symmetry_mean="(0.000, 0.2000]"   
}

potential ( symmetry_mean | fractal_dimension_mean   ) {
   data = 
   ((   0.900722   0.099278)   % fractal_dimension_mean="(0.0514, 0.0580]"   
   (   0.999172   0.000827815)   % fractal_dimension_mean="(0.0587, 0.0590]"   
   (   0.98   0.02));   % fractal_dimension_mean="(0.0591, 0.0960]"   
}

potential ( fractal_dimension_mean | radius_se   ) {
   data = 
   ((   0.899187   0.0211382   0.0796748)   % radius_se="(0.000, 0.5000]"   
   (   0.000835422   0.998329   0.000835422));   % radius_se="(0.000, 2.8000]"   
}

potential ( radius_se | texture_se   ) {
   data = 
   ((   0.893586   0.106414)   % texture_se="(0.000, 1.3000]"   
   (   0.000909091   0.999091)   % texture_se="(1.000, 2.2000]"   
   (   0.0384615   0.961538));   % texture_se="(2.000, 3.7000]"   
}

potential ( texture_se | perimeter_se   ) {
   data = 
   ((   0.932788   0.0336058   0.0336058)   % perimeter_se="(2.0100, 3.8000]"   
   (   0.000648508   0.998703   0.000648508)   % perimeter_se="(3.000, 8.3000]"   
   (   0.0133333   0.973333   0.0133333));   % perimeter_se="(8.0000, 21.8000]"   
}

potential ( perimeter_se | compactness_se   ) {
   data = 
   ((   0.025641   0.948718   0.025641)   % compactness_se="(0.0000, 0.1000]"   
   (   0.796377   0.150725   0.0528986)   % compactness_se="(0.00000, 0.0800]"   
   (   0.000769823   0.99846   0.000769823));   % compactness_se="(0.0119, 0.0600]"   
}

potential ( area_se | perimeter_se   compactness_se   ) {
   data = 
   (((   0.333333   0.333333   0.333333)   % perimeter_se="(2.0100, 3.8000]"   compactness_se="(0.0000, 0.1000]"   
   (   0.00900901   0.00900901   0.981982)   % perimeter_se="(3.000, 8.3000]"   compactness_se="(0.0000, 0.1000]"   
   (   0.333333   0.333333   0.333333))   % perimeter_se="(8.0000, 21.8000]"   compactness_se="(0.0000, 0.1000]"   
   ((   0.999393   0.000303306   0.000303306)   % perimeter_se="(2.0100, 3.8000]"   compactness_se="(0.00000, 0.0800]"   
   (   0.088141   0.0448718   0.866987)   % perimeter_se="(3.000, 8.3000]"   compactness_se="(0.00000, 0.0800]"   
   (   0.990868   0.00456621   0.00456621))   % perimeter_se="(8.0000, 21.8000]"   compactness_se="(0.00000, 0.0800]"   
   ((   0.333333   0.333333   0.333333)   % perimeter_se="(2.0100, 3.8000]"   compactness_se="(0.0119, 0.0600]"   
   (   0.000257003   0.000257003   0.999486)   % perimeter_se="(3.000, 8.3000]"   compactness_se="(0.0119, 0.0600]"   
   (   0.333333   0.333333   0.333333)));   % perimeter_se="(8.0000, 21.8000]"   compactness_se="(0.0119, 0.0600]"   
}

potential ( smoothness_se | area_se   compactness_se   ) {
   data = 
   (((   0.5   0.5)   % area_se="(12.0000, 58.5000]"   compactness_se="(0.0000, 0.1000]"   
   (   0.5   0.5)   % area_se="(482.00000, 534.1000]"   compactness_se="(0.0000, 0.1000]"   
   (   0.986486   0.0135135))   % area_se="(58.00000, 482.0000]"   compactness_se="(0.0000, 0.1000]"   
   ((   0.000420521   0.999579)   % area_se="(12.0000, 58.5000]"   compactness_se="(0.00000, 0.0800]"   
   (   0.05   0.95)   % area_se="(482.00000, 534.1000]"   compactness_se="(0.00000, 0.0800]"   
   (   0.549724   0.450276))   % area_se="(58.00000, 482.0000]"   compactness_se="(0.00000, 0.0800]"   
   ((   0.5   0.5)   % area_se="(12.0000, 58.5000]"   compactness_se="(0.0119, 0.0600]"   
   (   0.5   0.5)   % area_se="(482.00000, 534.1000]"   compactness_se="(0.0119, 0.0600]"   
   (   0.999614   0.000385505)));   % area_se="(58.00000, 482.0000]"   compactness_se="(0.0119, 0.0600]"   
}

potential ( compactness_se | concavity_se   ) {
   data = 
   ((   0.00123916   0.00123916   0.997522)   % concavity_se="(0.000, 0.2000]"   
   (   0.0248756   0.914428   0.0606965));   % concavity_se="(0.0000, 0.1000]"   
}

potential ( concavity_se | concave points_se   ) {
   data = 
   ((   0.0734072   0.926593)   % concave points_se="(0.00, 0.0000]"   
   (   0.997942   0.00205761));   % concave points_se="(0.0000, 0.0300]"   
}

potential ( concave points_se | symmetry_se   ) {
   data = 
   ((   0.982727   0.0172727)   % symmetry_se="(-0.0017, 0.0200]"   
   (   0.00149701   0.998503)   % symmetry_se="(0.00000, 0.0200]"   
   (   0.0227273   0.977273));   % symmetry_se="(0.00000, 0.0500]"   
}

potential ( symmetry_se | fractal_dimension_se   ) {
   data = 
   ((   0.932654   0.0311262   0.0362196)   % fractal_dimension_se="(-0.0088, 0.0050]"   
   (   0.00109649   0.997807   0.00109649)   % fractal_dimension_se="(0.0058, 0.0060]"   
   (   0.025641   0.948718   0.025641));   % fractal_dimension_se="(0.0064, 0.0090]"   
}

potential (fractal_dimension_se) {
   data = (  0.65011 0.335541 0.0143488);
}

potential ( radius_worst | fractal_dimension_se   ) {
   data = 
   ((   0.998868   0.000565931   0.000565931)   % fractal_dimension_se="(-0.0088, 0.0050]"   
   (   0.0208333   0.968202   0.0109649)   % fractal_dimension_se="(0.0058, 0.0060]"   
   (   0.948718   0.025641   0.025641));   % fractal_dimension_se="(0.0064, 0.0090]"   
}

potential ( texture_worst | radius_worst   ) {
   data = 
   ((   0.998902   0.000549149   0.000549149)   % radius_worst="(11.0000, 18.0000]"   
   (   0.112994   0.845198   0.0418079)   % radius_worst="(18.0000, 33.4000]"   
   (   0.833333   0.0833333   0.0833333));   % radius_worst="(33.0000, 35.2000]"   
}

potential ( perimeter_worst | texture_worst   area_worst   ) {
   data = 
   (((   0.5   0.5)   % texture_worst="(15.0000, 28.0000]"   area_worst="(1020.000000, 3893.2000]"   
   (   0.998778   0.00122249)   % texture_worst="(28.000, 31.0000]"   area_worst="(1020.000000, 3893.2000]"   
   (   0.5   0.5))   % texture_worst="(31.000, 40.7000]"   area_worst="(1020.000000, 3893.2000]"   
   ((   0.999611   0.000389105)   % texture_worst="(15.0000, 28.0000]"   area_worst="(257.000000, 1020.8000]"   
   (   0.532967   0.467033)   % texture_worst="(28.000, 31.0000]"   area_worst="(257.000000, 1020.8000]"   
   (   0.98   0.02)));   % texture_worst="(31.000, 40.7000]"   area_worst="(257.000000, 1020.8000]"   
}

potential ( area_worst | texture_worst   ) {
   data = 
   ((   0.000777605   0.999222)   % texture_worst="(15.0000, 28.0000]"   
   (   0.818   0.182)   % texture_worst="(28.000, 31.0000]"   
   (   0.0384615   0.961538));   % texture_worst="(31.000, 40.7000]"   
}

potential ( smoothness_worst | area_worst   ) {
   data = 
   ((   0.835766   0.164234)   % area_worst="(1020.000000, 3893.2000]"   
   (   0.00107066   0.998929));   % area_worst="(257.000000, 1020.8000]"   
}

potential ( compactness_worst | smoothness_worst   ) {
   data = 
   ((   0.143478   0.856522)   % smoothness_worst="(0.000, 0.2000]"   
   (   0.998978   0.00102249));   % smoothness_worst="(0.0750, 0.1000]"   
}

potential ( concavity_worst | compactness_worst   ) {
   data = 
   ((   0.000990099   0.99901)   % compactness_worst="(0.00, 0.0000]"   
   (   0.752525   0.247475));   % compactness_worst="(0.00, 0.9000]"   
}

potential ( concave points_worst | concavity_worst   ) {
   data = 
   ((   0.0866667   0.913333)   % concavity_worst="(0.00, 1.1000]"   
   (   0.00094518   0.999055));   % concavity_worst="(0.0029, 0.0000]"   
}

potential ( symmetry_worst | area_worst   ) {
   data = 
   ((   1)   % area_worst="(1020.000000, 3893.2000]"   
   (   1));   % area_worst="(257.000000, 1020.8000]"   
}

potential ( fractal_dimension_worst | area_worst   ) {
   data = 
   ((   1)   % area_worst="(1020.000000, 3893.2000]"   
   (   1));   % area_worst="(257.000000, 1020.8000]"   
}

potential ( diagnosis | concave points_mean   ) {
   data = 
   ((   0.080786   0.919214)   % concave points_mean="(-0.0059, 0.0000]"   
   (   0.000749625   0.99925)   % concave points_mean="(0.0000, 0.0900]"   
   (   0.05   0.95));   % concave points_mean="(0.0000, 0.1000]"   
}


