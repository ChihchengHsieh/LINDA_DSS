
net {
  name = unnamedBN;
  software = "aGrUM 0.18.2";
  node_size = (50 50);
}

node radius_mean {
   states = ("(16.5699, 20.4000]" );
   label = "radius_mean";
   ID = "radius_mean";
}

node texture_mean {
   states = ("(19.0000, 23.8000]" "(23.0000, 24.8000]" );
   label = "texture_mean";
   ID = "texture_mean";
}

node perimeter_mean {
   states = ("(110.2899, 131.1000]" "(131.00000, 136.2000]" );
   label = "perimeter_mean";
   ID = "perimeter_mean";
}

node area_mean {
   states = ("(1195.000000, 1276.0000]" "(863.000000, 1195.1000]" );
   label = "area_mean";
   ID = "area_mean";
}

node smoothness_mean {
   states = ("(0.00, 0.1000]" "(0.0870, 0.0000]" );
   label = "smoothness_mean";
   ID = "smoothness_mean";
}

node compactness_mean {
   states = ("(0.000, 0.1000]" "(0.0900, 0.1000]" );
   label = "compactness_mean";
   ID = "compactness_mean";
}

node concavity_mean {
   states = ("(0.1200, 0.0000]" );
   label = "concavity_mean";
   ID = "concavity_mean";
}

node concave points_mean {
   states = ("(0.000, 0.0000]" "(0.00000, 0.0800]" );
   label = "concave points_mean";
   ID = "concave points_mean";
}

node symmetry_mean {
   states = ("(0.00000, 0.1800]" "(0.00000, 0.1900]" );
   label = "symmetry_mean";
   ID = "symmetry_mean";
}

node fractal_dimension_mean {
   states = ("(0.00000, 0.0500]" "(0.00000, 0.0600]" );
   label = "fractal_dimension_mean";
   ID = "fractal_dimension_mean";
}

node radius_se {
   states = ("(0.000, 0.8000]" "(0.000, 1.0000]" );
   label = "radius_se";
   ID = "radius_se";
}

node texture_se {
   states = ("(1.000, 1.9000]" "(1.000, 2.3000]" );
   label = "texture_se";
   ID = "texture_se";
}

node perimeter_se {
   states = ("(2.6100, 3.0000]" "(3.0, 4.0000]" "(4.0, 6.0000]" );
   label = "perimeter_se";
   ID = "perimeter_se";
}

node area_se {
   states = ("(103.00000, 145.4000]" "(145.00000, 155.8000]" "(51.4400, 103.9000]" );
   label = "area_se";
   ID = "area_se";
}

node smoothness_se {
   states = ("(-0.0046, 0.0080]" "(0.0000, 0.0100]" "(0.0081, 0.0000]" );
   label = "smoothness_se";
   ID = "smoothness_se";
}

node compactness_se {
   states = ("(0.000, 0.0000]" "(0.0000, 0.0000]" "(0.0209, 0.0300]" );
   label = "compactness_se";
   ID = "compactness_se";
}

node concavity_se {
   states = ("(0.00000, 0.0600]" "(0.0070, 0.0400]" );
   label = "concavity_se";
   ID = "concavity_se";
}

node concave points_se {
   states = ("(0.00000, 0.0100]" );
   label = "concave points_se";
   ID = "concave points_se";
}

node symmetry_se {
   states = ("(0.0000, 0.0200]" "(0.00000, 0.0200]" "(0.0070, 0.0000]" );
   label = "symmetry_se";
   ID = "symmetry_se";
}

node fractal_dimension_se {
   states = ("(-0.0084, 0.0030]" "(0.0034, 0.0030]" "(0.0036, 0.0040]" );
   label = "fractal_dimension_se";
   ID = "fractal_dimension_se";
}

node radius_worst {
   states = ("(20.0000, 22.2000]" "(22.0000, 24.5000]" "(24.0000, 24.9000]" );
   label = "radius_worst";
   ID = "radius_worst";
}

node texture_worst {
   states = ("(27.8499, 30.9000]" "(30.0000, 31.1000]" "(31.0000, 32.9000]" );
   label = "texture_worst";
   ID = "texture_worst";
}

node perimeter_worst {
   states = ("(136.6000, 143.0000]" "(143.00000, 160.1000]" );
   label = "perimeter_worst";
   ID = "perimeter_worst";
}

node area_worst {
   states = ("(1177.000000, 1577.5000]" "(1577.000000, 1911.5000]" );
   label = "area_worst";
   ID = "area_worst";
}

node smoothness_worst {
   states = ("(0.000, 0.1000]" );
   label = "smoothness_worst";
   ID = "smoothness_worst";
}

node compactness_worst {
   states = ("(0.000, 0.3000]" "(0.000, 0.4000]" );
   label = "compactness_worst";
   ID = "compactness_worst";
}

node concavity_worst {
   states = ("(0.000, 0.4000]" "(0.000, 0.5000]" );
   label = "concavity_worst";
   ID = "concavity_worst";
}

node concave points_worst {
   states = ("(0.000, 0.1000]" );
   label = "concave points_worst";
   ID = "concave points_worst";
}

node symmetry_worst {
   states = ("(0.00, 0.0000]" "(0.00, 0.3000]" );
   label = "symmetry_worst";
   ID = "symmetry_worst";
}

node fractal_dimension_worst {
   states = ("(0.00000, 0.0900]" "(0.0619, 0.0800]" );
   label = "fractal_dimension_worst";
   ID = "fractal_dimension_worst";
}

node diagnosis {
   states = (Yes );
   label = "diagnosis";
   ID = "diagnosis";
}

potential ( radius_mean | fractal_dimension_se   symmetry_se   fractal_dimension_worst   ) {
   data = 
   ((((   1)   % fractal_dimension_worst="(0.00000, 0.0900]"   symmetry_se="(0.0000, 0.0200]"   fractal_dimension_se="(-0.0084, 0.0030]"   
   (   1))   % fractal_dimension_worst="(0.0619, 0.0800]"   symmetry_se="(0.0000, 0.0200]"   fractal_dimension_se="(-0.0084, 0.0030]"   
   ((   1)   % fractal_dimension_worst="(0.00000, 0.0900]"   symmetry_se="(0.00000, 0.0200]"   fractal_dimension_se="(-0.0084, 0.0030]"   
   (   1))   % fractal_dimension_worst="(0.0619, 0.0800]"   symmetry_se="(0.00000, 0.0200]"   fractal_dimension_se="(-0.0084, 0.0030]"   
   ((   1)   % fractal_dimension_worst="(0.00000, 0.0900]"   symmetry_se="(0.0070, 0.0000]"   fractal_dimension_se="(-0.0084, 0.0030]"   
   (   1)))   % fractal_dimension_worst="(0.0619, 0.0800]"   symmetry_se="(0.0070, 0.0000]"   fractal_dimension_se="(-0.0084, 0.0030]"   
   (((   1)   % fractal_dimension_worst="(0.00000, 0.0900]"   symmetry_se="(0.0000, 0.0200]"   fractal_dimension_se="(0.0034, 0.0030]"   
   (   1))   % fractal_dimension_worst="(0.0619, 0.0800]"   symmetry_se="(0.0000, 0.0200]"   fractal_dimension_se="(0.0034, 0.0030]"   
   ((   1)   % fractal_dimension_worst="(0.00000, 0.0900]"   symmetry_se="(0.00000, 0.0200]"   fractal_dimension_se="(0.0034, 0.0030]"   
   (   1))   % fractal_dimension_worst="(0.0619, 0.0800]"   symmetry_se="(0.00000, 0.0200]"   fractal_dimension_se="(0.0034, 0.0030]"   
   ((   1)   % fractal_dimension_worst="(0.00000, 0.0900]"   symmetry_se="(0.0070, 0.0000]"   fractal_dimension_se="(0.0034, 0.0030]"   
   (   1)))   % fractal_dimension_worst="(0.0619, 0.0800]"   symmetry_se="(0.0070, 0.0000]"   fractal_dimension_se="(0.0034, 0.0030]"   
   (((   1)   % fractal_dimension_worst="(0.00000, 0.0900]"   symmetry_se="(0.0000, 0.0200]"   fractal_dimension_se="(0.0036, 0.0040]"   
   (   1))   % fractal_dimension_worst="(0.0619, 0.0800]"   symmetry_se="(0.0000, 0.0200]"   fractal_dimension_se="(0.0036, 0.0040]"   
   ((   1)   % fractal_dimension_worst="(0.00000, 0.0900]"   symmetry_se="(0.00000, 0.0200]"   fractal_dimension_se="(0.0036, 0.0040]"   
   (   1))   % fractal_dimension_worst="(0.0619, 0.0800]"   symmetry_se="(0.00000, 0.0200]"   fractal_dimension_se="(0.0036, 0.0040]"   
   ((   1)   % fractal_dimension_worst="(0.00000, 0.0900]"   symmetry_se="(0.0070, 0.0000]"   fractal_dimension_se="(0.0036, 0.0040]"   
   (   1))));   % fractal_dimension_worst="(0.0619, 0.0800]"   symmetry_se="(0.0070, 0.0000]"   fractal_dimension_se="(0.0036, 0.0040]"   
}

potential ( texture_mean | concave points_mean   ) {
   data = 
   ((   0.983221   0.0167785)   % concave points_mean="(0.000, 0.0000]"   
   (   0.998901   0.0010989));   % concave points_mean="(0.00000, 0.0800]"   
}

potential ( perimeter_mean | concave points_mean   ) {
   data = 
   ((   0.969799   0.0302013)   % concave points_mean="(0.000, 0.0000]"   
   (   0.998901   0.0010989));   % concave points_mean="(0.00000, 0.0800]"   
}

potential ( area_mean | concave points_mean   ) {
   data = 
   ((   0.0436242   0.956376)   % concave points_mean="(0.000, 0.0000]"   
   (   0.0010989   0.998901));   % concave points_mean="(0.00000, 0.0800]"   
}

potential ( smoothness_mean | concave points_mean   ) {
   data = 
   ((   0.0704698   0.92953)   % concave points_mean="(0.000, 0.0000]"   
   (   0.0010989   0.998901));   % concave points_mean="(0.00000, 0.0800]"   
}

potential ( compactness_mean | concave points_mean   ) {
   data = 
   ((   0.057047   0.942953)   % concave points_mean="(0.000, 0.0000]"   
   (   0.0010989   0.998901));   % concave points_mean="(0.00000, 0.0800]"   
}

potential ( concavity_mean | symmetry_se   fractal_dimension_se   ) {
   data = 
   (((   1)   % fractal_dimension_se="(-0.0084, 0.0030]"   symmetry_se="(0.0000, 0.0200]"   
   (   1)   % fractal_dimension_se="(0.0034, 0.0030]"   symmetry_se="(0.0000, 0.0200]"   
   (   1))   % fractal_dimension_se="(0.0036, 0.0040]"   symmetry_se="(0.0000, 0.0200]"   
   ((   1)   % fractal_dimension_se="(-0.0084, 0.0030]"   symmetry_se="(0.00000, 0.0200]"   
   (   1)   % fractal_dimension_se="(0.0034, 0.0030]"   symmetry_se="(0.00000, 0.0200]"   
   (   1))   % fractal_dimension_se="(0.0036, 0.0040]"   symmetry_se="(0.00000, 0.0200]"   
   ((   1)   % fractal_dimension_se="(-0.0084, 0.0030]"   symmetry_se="(0.0070, 0.0000]"   
   (   1)   % fractal_dimension_se="(0.0034, 0.0030]"   symmetry_se="(0.0070, 0.0000]"   
   (   1)));   % fractal_dimension_se="(0.0036, 0.0040]"   symmetry_se="(0.0070, 0.0000]"   
}

potential ( concave points_mean | fractal_dimension_mean   symmetry_mean   ) {
   data = 
   (((   0.000618047   0.999382)   % symmetry_mean="(0.00000, 0.1800]"   fractal_dimension_mean="(0.00000, 0.0500]"   
   (   0.5   0.5))   % symmetry_mean="(0.00000, 0.1900]"   fractal_dimension_mean="(0.00000, 0.0500]"   
   ((   0.754453   0.245547)   % symmetry_mean="(0.00000, 0.1800]"   fractal_dimension_mean="(0.00000, 0.0600]"   
   (   0.1   0.9)));   % symmetry_mean="(0.00000, 0.1900]"   fractal_dimension_mean="(0.00000, 0.0600]"   
}

potential ( symmetry_mean | concavity_mean   ) {
   data = 
   ((   0.995033   0.00496689));   % concavity_mean="(0.1200, 0.0000]"   
}

potential ( fractal_dimension_mean | perimeter_se   ) {
   data = 
   ((   0.999033   0.000967118)   % perimeter_se="(2.6100, 3.0000]"   
   (   0.189373   0.810627)   % perimeter_se="(3.0, 4.0000]"   
   (   0.977273   0.0227273));   % perimeter_se="(4.0, 6.0000]"   
}

potential ( radius_se | perimeter_se   fractal_dimension_mean   ) {
   data = 
   (((   0.000484027   0.999516)   % fractal_dimension_mean="(0.00000, 0.0500]"   perimeter_se="(2.6100, 3.0000]"   
   (   0.5   0.5))   % fractal_dimension_mean="(0.00000, 0.0600]"   perimeter_se="(2.6100, 3.0000]"   
   ((   0.133094   0.866906)   % fractal_dimension_mean="(0.00000, 0.0500]"   perimeter_se="(3.0, 4.0000]"   
   (   0.99916   0.000840336))   % fractal_dimension_mean="(0.00000, 0.0600]"   perimeter_se="(3.0, 4.0000]"   
   ((   0.0116279   0.988372)   % fractal_dimension_mean="(0.00000, 0.0500]"   perimeter_se="(4.0, 6.0000]"   
   (   0.5   0.5)));   % fractal_dimension_mean="(0.00000, 0.0600]"   perimeter_se="(4.0, 6.0000]"   
}

potential ( texture_se | radius_se   perimeter_se   ) {
   data = 
   (((   0.5   0.5)   % perimeter_se="(2.6100, 3.0000]"   radius_se="(0.000, 0.8000]"   
   (   0.999184   0.000815661)   % perimeter_se="(3.0, 4.0000]"   radius_se="(0.000, 0.8000]"   
   (   0.5   0.5))   % perimeter_se="(4.0, 6.0000]"   radius_se="(0.000, 0.8000]"   
   ((   0.999516   0.000484027)   % perimeter_se="(2.6100, 3.0000]"   radius_se="(0.000, 1.0000]"   
   (   0.797521   0.202479)   % perimeter_se="(3.0, 4.0000]"   radius_se="(0.000, 1.0000]"   
   (   0.988372   0.0116279)));   % perimeter_se="(4.0, 6.0000]"   radius_se="(0.000, 1.0000]"   
}

potential ( perimeter_se | area_se   ) {
   data = 
   ((   0.998672   0.000664011   0.000664011)   % area_se="(103.00000, 145.4000]"   
   (   0.833333   0.0833333   0.0833333)   % area_se="(145.00000, 155.8000]"   
   (   0.0308333   0.915833   0.0533333));   % area_se="(51.4400, 103.9000]"   
}

potential ( area_se | smoothness_se   ) {
   data = 
   ((   0.0827639   0.00759301   0.909643)   % smoothness_se="(-0.0046, 0.0080]"   
   (   0.833333   0.0833333   0.0833333)   % smoothness_se="(0.0000, 0.0100]"   
   (   0.99856   0.000719942   0.000719942));   % smoothness_se="(0.0081, 0.0000]"   
}

potential (smoothness_se) {
   data = (  0.484547 0.00441501 0.511038);
}

potential ( compactness_se | smoothness_se   ) {
   data = 
   ((   0.000759301   0.998481   0.000759301)   % smoothness_se="(-0.0046, 0.0080]"   
   (   0.0833333   0.833333   0.0833333)   % smoothness_se="(0.0000, 0.0100]"   
   (   0.0331174   0.0331174   0.933765));   % smoothness_se="(0.0081, 0.0000]"   
}

potential ( concavity_se | compactness_se   ) {
   data = 
   ((   0.03125   0.96875)   % compactness_se="(0.000, 0.0000]"   
   (   0.00109409   0.998906)   % compactness_se="(0.0000, 0.0000]"   
   (   0.929561   0.0704388));   % compactness_se="(0.0209, 0.0300]"   
}

potential ( concave points_se | symmetry_se   fractal_dimension_worst   fractal_dimension_se   ) {
   data = 
   ((((   1)   % fractal_dimension_se="(-0.0084, 0.0030]"   fractal_dimension_worst="(0.00000, 0.0900]"   symmetry_se="(0.0000, 0.0200]"   
   (   1)   % fractal_dimension_se="(0.0034, 0.0030]"   fractal_dimension_worst="(0.00000, 0.0900]"   symmetry_se="(0.0000, 0.0200]"   
   (   1))   % fractal_dimension_se="(0.0036, 0.0040]"   fractal_dimension_worst="(0.00000, 0.0900]"   symmetry_se="(0.0000, 0.0200]"   
   ((   1)   % fractal_dimension_se="(-0.0084, 0.0030]"   fractal_dimension_worst="(0.0619, 0.0800]"   symmetry_se="(0.0000, 0.0200]"   
   (   1)   % fractal_dimension_se="(0.0034, 0.0030]"   fractal_dimension_worst="(0.0619, 0.0800]"   symmetry_se="(0.0000, 0.0200]"   
   (   1)))   % fractal_dimension_se="(0.0036, 0.0040]"   fractal_dimension_worst="(0.0619, 0.0800]"   symmetry_se="(0.0000, 0.0200]"   
   (((   1)   % fractal_dimension_se="(-0.0084, 0.0030]"   fractal_dimension_worst="(0.00000, 0.0900]"   symmetry_se="(0.00000, 0.0200]"   
   (   1)   % fractal_dimension_se="(0.0034, 0.0030]"   fractal_dimension_worst="(0.00000, 0.0900]"   symmetry_se="(0.00000, 0.0200]"   
   (   1))   % fractal_dimension_se="(0.0036, 0.0040]"   fractal_dimension_worst="(0.00000, 0.0900]"   symmetry_se="(0.00000, 0.0200]"   
   ((   1)   % fractal_dimension_se="(-0.0084, 0.0030]"   fractal_dimension_worst="(0.0619, 0.0800]"   symmetry_se="(0.00000, 0.0200]"   
   (   1)   % fractal_dimension_se="(0.0034, 0.0030]"   fractal_dimension_worst="(0.0619, 0.0800]"   symmetry_se="(0.00000, 0.0200]"   
   (   1)))   % fractal_dimension_se="(0.0036, 0.0040]"   fractal_dimension_worst="(0.0619, 0.0800]"   symmetry_se="(0.00000, 0.0200]"   
   (((   1)   % fractal_dimension_se="(-0.0084, 0.0030]"   fractal_dimension_worst="(0.00000, 0.0900]"   symmetry_se="(0.0070, 0.0000]"   
   (   1)   % fractal_dimension_se="(0.0034, 0.0030]"   fractal_dimension_worst="(0.00000, 0.0900]"   symmetry_se="(0.0070, 0.0000]"   
   (   1))   % fractal_dimension_se="(0.0036, 0.0040]"   fractal_dimension_worst="(0.00000, 0.0900]"   symmetry_se="(0.0070, 0.0000]"   
   ((   1)   % fractal_dimension_se="(-0.0084, 0.0030]"   fractal_dimension_worst="(0.0619, 0.0800]"   symmetry_se="(0.0070, 0.0000]"   
   (   1)   % fractal_dimension_se="(0.0034, 0.0030]"   fractal_dimension_worst="(0.0619, 0.0800]"   symmetry_se="(0.0070, 0.0000]"   
   (   1))));   % fractal_dimension_se="(0.0036, 0.0040]"   fractal_dimension_worst="(0.0619, 0.0800]"   symmetry_se="(0.0070, 0.0000]"   
}

potential ( symmetry_se | concavity_se   ) {
   data = 
   ((   0.135068   0.023544   0.841388)   % concavity_se="(0.00000, 0.0600]"   
   (   0.99801   0.000995025   0.000995025));   % concavity_se="(0.0070, 0.0400]"   
}

potential ( fractal_dimension_se | symmetry_se   ) {
   data = 
   ((   0.00059952   0.998801   0.00059952)   % symmetry_se="(0.0000, 0.0200]"   
   (   0.0333333   0.933333   0.0333333)   % symmetry_se="(0.00000, 0.0200]"   
   (   0.936275   0.0362745   0.027451));   % symmetry_se="(0.0070, 0.0000]"   
}

potential ( radius_worst | fractal_dimension_se   concavity_mean   ) {
   data = 
   (((   0.0856844   0.903866   0.0104493))   % concavity_mean="(0.1200, 0.0000]"   fractal_dimension_se="(-0.0084, 0.0030]"   
   ((   0.998845   0.000577701   0.000577701))   % concavity_mean="(0.1200, 0.0000]"   fractal_dimension_se="(0.0034, 0.0030]"   
   ((   0.933333   0.0333333   0.0333333)));   % concavity_mean="(0.1200, 0.0000]"   fractal_dimension_se="(0.0036, 0.0040]"   
}

potential ( texture_worst | radius_worst   concavity_mean   ) {
   data = 
   (((   0.998912   0.000543774   0.000543774))   % concavity_mean="(0.1200, 0.0000]"   radius_worst="(20.0000, 22.2000]"   
   ((   0.10496   0.852364   0.0426759))   % concavity_mean="(0.1200, 0.0000]"   radius_worst="(22.0000, 24.5000]"   
   ((   0.833333   0.0833333   0.0833333)));   % concavity_mean="(0.1200, 0.0000]"   radius_worst="(24.0000, 24.9000]"   
}

potential ( perimeter_worst | texture_worst   area_worst   ) {
   data = 
   (((   0.999613   0.000387297)   % area_worst="(1177.000000, 1577.5000]"   texture_worst="(27.8499, 30.9000]"   
   (   0.5   0.5))   % area_worst="(1577.000000, 1911.5000]"   texture_worst="(27.8499, 30.9000]"   
   ((   0.645631   0.354369)   % area_worst="(1177.000000, 1577.5000]"   texture_worst="(30.0000, 31.1000]"   
   (   0.998721   0.00127877))   % area_worst="(1577.000000, 1911.5000]"   texture_worst="(30.0000, 31.1000]"   
   ((   0.98   0.02)   % area_worst="(1177.000000, 1577.5000]"   texture_worst="(31.0000, 32.9000]"   
   (   0.5   0.5)));   % area_worst="(1577.000000, 1911.5000]"   texture_worst="(31.0000, 32.9000]"   
}

potential ( area_worst | texture_worst   ) {
   data = 
   ((   0.999226   0.000773994)   % texture_worst="(27.8499, 30.9000]"   
   (   0.208502   0.791498)   % texture_worst="(30.0000, 31.1000]"   
   (   0.961538   0.0384615));   % texture_worst="(31.0000, 32.9000]"   
}

potential ( smoothness_worst | fractal_dimension_se   symmetry_se   fractal_dimension_worst   ) {
   data = 
   ((((   1)   % fractal_dimension_worst="(0.00000, 0.0900]"   symmetry_se="(0.0000, 0.0200]"   fractal_dimension_se="(-0.0084, 0.0030]"   
   (   1))   % fractal_dimension_worst="(0.0619, 0.0800]"   symmetry_se="(0.0000, 0.0200]"   fractal_dimension_se="(-0.0084, 0.0030]"   
   ((   1)   % fractal_dimension_worst="(0.00000, 0.0900]"   symmetry_se="(0.00000, 0.0200]"   fractal_dimension_se="(-0.0084, 0.0030]"   
   (   1))   % fractal_dimension_worst="(0.0619, 0.0800]"   symmetry_se="(0.00000, 0.0200]"   fractal_dimension_se="(-0.0084, 0.0030]"   
   ((   1)   % fractal_dimension_worst="(0.00000, 0.0900]"   symmetry_se="(0.0070, 0.0000]"   fractal_dimension_se="(-0.0084, 0.0030]"   
   (   1)))   % fractal_dimension_worst="(0.0619, 0.0800]"   symmetry_se="(0.0070, 0.0000]"   fractal_dimension_se="(-0.0084, 0.0030]"   
   (((   1)   % fractal_dimension_worst="(0.00000, 0.0900]"   symmetry_se="(0.0000, 0.0200]"   fractal_dimension_se="(0.0034, 0.0030]"   
   (   1))   % fractal_dimension_worst="(0.0619, 0.0800]"   symmetry_se="(0.0000, 0.0200]"   fractal_dimension_se="(0.0034, 0.0030]"   
   ((   1)   % fractal_dimension_worst="(0.00000, 0.0900]"   symmetry_se="(0.00000, 0.0200]"   fractal_dimension_se="(0.0034, 0.0030]"   
   (   1))   % fractal_dimension_worst="(0.0619, 0.0800]"   symmetry_se="(0.00000, 0.0200]"   fractal_dimension_se="(0.0034, 0.0030]"   
   ((   1)   % fractal_dimension_worst="(0.00000, 0.0900]"   symmetry_se="(0.0070, 0.0000]"   fractal_dimension_se="(0.0034, 0.0030]"   
   (   1)))   % fractal_dimension_worst="(0.0619, 0.0800]"   symmetry_se="(0.0070, 0.0000]"   fractal_dimension_se="(0.0034, 0.0030]"   
   (((   1)   % fractal_dimension_worst="(0.00000, 0.0900]"   symmetry_se="(0.0000, 0.0200]"   fractal_dimension_se="(0.0036, 0.0040]"   
   (   1))   % fractal_dimension_worst="(0.0619, 0.0800]"   symmetry_se="(0.0000, 0.0200]"   fractal_dimension_se="(0.0036, 0.0040]"   
   ((   1)   % fractal_dimension_worst="(0.00000, 0.0900]"   symmetry_se="(0.00000, 0.0200]"   fractal_dimension_se="(0.0036, 0.0040]"   
   (   1))   % fractal_dimension_worst="(0.0619, 0.0800]"   symmetry_se="(0.00000, 0.0200]"   fractal_dimension_se="(0.0036, 0.0040]"   
   ((   1)   % fractal_dimension_worst="(0.00000, 0.0900]"   symmetry_se="(0.0070, 0.0000]"   fractal_dimension_se="(0.0036, 0.0040]"   
   (   1))));   % fractal_dimension_worst="(0.0619, 0.0800]"   symmetry_se="(0.0070, 0.0000]"   fractal_dimension_se="(0.0036, 0.0040]"   
}

potential ( compactness_worst | area_worst   ) {
   data = 
   ((   0.998943   0.00105708)   % area_worst="(1177.000000, 1577.5000]"   
   (   0.293893   0.706107));   % area_worst="(1577.000000, 1911.5000]"   
}

potential ( concavity_worst | compactness_worst   ) {
   data = 
   ((   0.999022   0.000978474)   % compactness_worst="(0.000, 0.3000]"   
   (   0.284946   0.715054));   % compactness_worst="(0.000, 0.4000]"   
}

potential ( concave points_worst | fractal_dimension_se   symmetry_se   fractal_dimension_worst   ) {
   data = 
   ((((   1)   % fractal_dimension_worst="(0.00000, 0.0900]"   symmetry_se="(0.0000, 0.0200]"   fractal_dimension_se="(-0.0084, 0.0030]"   
   (   1))   % fractal_dimension_worst="(0.0619, 0.0800]"   symmetry_se="(0.0000, 0.0200]"   fractal_dimension_se="(-0.0084, 0.0030]"   
   ((   1)   % fractal_dimension_worst="(0.00000, 0.0900]"   symmetry_se="(0.00000, 0.0200]"   fractal_dimension_se="(-0.0084, 0.0030]"   
   (   1))   % fractal_dimension_worst="(0.0619, 0.0800]"   symmetry_se="(0.00000, 0.0200]"   fractal_dimension_se="(-0.0084, 0.0030]"   
   ((   1)   % fractal_dimension_worst="(0.00000, 0.0900]"   symmetry_se="(0.0070, 0.0000]"   fractal_dimension_se="(-0.0084, 0.0030]"   
   (   1)))   % fractal_dimension_worst="(0.0619, 0.0800]"   symmetry_se="(0.0070, 0.0000]"   fractal_dimension_se="(-0.0084, 0.0030]"   
   (((   1)   % fractal_dimension_worst="(0.00000, 0.0900]"   symmetry_se="(0.0000, 0.0200]"   fractal_dimension_se="(0.0034, 0.0030]"   
   (   1))   % fractal_dimension_worst="(0.0619, 0.0800]"   symmetry_se="(0.0000, 0.0200]"   fractal_dimension_se="(0.0034, 0.0030]"   
   ((   1)   % fractal_dimension_worst="(0.00000, 0.0900]"   symmetry_se="(0.00000, 0.0200]"   fractal_dimension_se="(0.0034, 0.0030]"   
   (   1))   % fractal_dimension_worst="(0.0619, 0.0800]"   symmetry_se="(0.00000, 0.0200]"   fractal_dimension_se="(0.0034, 0.0030]"   
   ((   1)   % fractal_dimension_worst="(0.00000, 0.0900]"   symmetry_se="(0.0070, 0.0000]"   fractal_dimension_se="(0.0034, 0.0030]"   
   (   1)))   % fractal_dimension_worst="(0.0619, 0.0800]"   symmetry_se="(0.0070, 0.0000]"   fractal_dimension_se="(0.0034, 0.0030]"   
   (((   1)   % fractal_dimension_worst="(0.00000, 0.0900]"   symmetry_se="(0.0000, 0.0200]"   fractal_dimension_se="(0.0036, 0.0040]"   
   (   1))   % fractal_dimension_worst="(0.0619, 0.0800]"   symmetry_se="(0.0000, 0.0200]"   fractal_dimension_se="(0.0036, 0.0040]"   
   ((   1)   % fractal_dimension_worst="(0.00000, 0.0900]"   symmetry_se="(0.00000, 0.0200]"   fractal_dimension_se="(0.0036, 0.0040]"   
   (   1))   % fractal_dimension_worst="(0.0619, 0.0800]"   symmetry_se="(0.00000, 0.0200]"   fractal_dimension_se="(0.0036, 0.0040]"   
   ((   1)   % fractal_dimension_worst="(0.00000, 0.0900]"   symmetry_se="(0.0070, 0.0000]"   fractal_dimension_se="(0.0036, 0.0040]"   
   (   1))));   % fractal_dimension_worst="(0.0619, 0.0800]"   symmetry_se="(0.0070, 0.0000]"   fractal_dimension_se="(0.0036, 0.0040]"   
}

potential ( symmetry_worst | fractal_dimension_worst   concavity_worst   ) {
   data = 
   (((   0.5   0.5)   % concavity_worst="(0.000, 0.4000]"   fractal_dimension_worst="(0.00000, 0.0900]"   
   (   0.97619   0.0238095))   % concavity_worst="(0.000, 0.5000]"   fractal_dimension_worst="(0.00000, 0.0900]"   
   ((   0.999534   0.000465983)   % concavity_worst="(0.000, 0.4000]"   fractal_dimension_worst="(0.0619, 0.0800]"   
   (   0.853982   0.146018)));   % concavity_worst="(0.000, 0.5000]"   fractal_dimension_worst="(0.0619, 0.0800]"   
}

potential ( fractal_dimension_worst | concavity_worst   ) {
   data = 
   ((   0.000931099   0.999069)   % concavity_worst="(0.000, 0.4000]"   
   (   0.156716   0.843284));   % concavity_worst="(0.000, 0.5000]"   
}

potential ( diagnosis | symmetry_se   fractal_dimension_worst   fractal_dimension_se   ) {
   data = 
   ((((   1)   % fractal_dimension_se="(-0.0084, 0.0030]"   fractal_dimension_worst="(0.00000, 0.0900]"   symmetry_se="(0.0000, 0.0200]"   
   (   1)   % fractal_dimension_se="(0.0034, 0.0030]"   fractal_dimension_worst="(0.00000, 0.0900]"   symmetry_se="(0.0000, 0.0200]"   
   (   1))   % fractal_dimension_se="(0.0036, 0.0040]"   fractal_dimension_worst="(0.00000, 0.0900]"   symmetry_se="(0.0000, 0.0200]"   
   ((   1)   % fractal_dimension_se="(-0.0084, 0.0030]"   fractal_dimension_worst="(0.0619, 0.0800]"   symmetry_se="(0.0000, 0.0200]"   
   (   1)   % fractal_dimension_se="(0.0034, 0.0030]"   fractal_dimension_worst="(0.0619, 0.0800]"   symmetry_se="(0.0000, 0.0200]"   
   (   1)))   % fractal_dimension_se="(0.0036, 0.0040]"   fractal_dimension_worst="(0.0619, 0.0800]"   symmetry_se="(0.0000, 0.0200]"   
   (((   1)   % fractal_dimension_se="(-0.0084, 0.0030]"   fractal_dimension_worst="(0.00000, 0.0900]"   symmetry_se="(0.00000, 0.0200]"   
   (   1)   % fractal_dimension_se="(0.0034, 0.0030]"   fractal_dimension_worst="(0.00000, 0.0900]"   symmetry_se="(0.00000, 0.0200]"   
   (   1))   % fractal_dimension_se="(0.0036, 0.0040]"   fractal_dimension_worst="(0.00000, 0.0900]"   symmetry_se="(0.00000, 0.0200]"   
   ((   1)   % fractal_dimension_se="(-0.0084, 0.0030]"   fractal_dimension_worst="(0.0619, 0.0800]"   symmetry_se="(0.00000, 0.0200]"   
   (   1)   % fractal_dimension_se="(0.0034, 0.0030]"   fractal_dimension_worst="(0.0619, 0.0800]"   symmetry_se="(0.00000, 0.0200]"   
   (   1)))   % fractal_dimension_se="(0.0036, 0.0040]"   fractal_dimension_worst="(0.0619, 0.0800]"   symmetry_se="(0.00000, 0.0200]"   
   (((   1)   % fractal_dimension_se="(-0.0084, 0.0030]"   fractal_dimension_worst="(0.00000, 0.0900]"   symmetry_se="(0.0070, 0.0000]"   
   (   1)   % fractal_dimension_se="(0.0034, 0.0030]"   fractal_dimension_worst="(0.00000, 0.0900]"   symmetry_se="(0.0070, 0.0000]"   
   (   1))   % fractal_dimension_se="(0.0036, 0.0040]"   fractal_dimension_worst="(0.00000, 0.0900]"   symmetry_se="(0.0070, 0.0000]"   
   ((   1)   % fractal_dimension_se="(-0.0084, 0.0030]"   fractal_dimension_worst="(0.0619, 0.0800]"   symmetry_se="(0.0070, 0.0000]"   
   (   1)   % fractal_dimension_se="(0.0034, 0.0030]"   fractal_dimension_worst="(0.0619, 0.0800]"   symmetry_se="(0.0070, 0.0000]"   
   (   1))));   % fractal_dimension_se="(0.0036, 0.0040]"   fractal_dimension_worst="(0.0619, 0.0800]"   symmetry_se="(0.0070, 0.0000]"   
}


