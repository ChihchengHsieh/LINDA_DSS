
net {
  name = unnamedBN;
  software = "aGrUM 0.17.0";
  node_size = (50 50);
}

node radius_mean {
   states = ("(8.0000, 27.2000]" );
   label = "radius_mean";
   ID = "radius_mean";
}

node texture_mean {
   states = ("(14.000, 34.0000]" "(34.000, 38.8000]" );
   label = "texture_mean";
   ID = "texture_mean";
}

node perimeter_mean {
   states = ("(163.00000, 188.4000]" "(62.00000, 163.4000]" );
   label = "perimeter_mean";
   ID = "perimeter_mean";
}

node area_mean {
   states = ("(1835.000000, 2235.5000]" "(197.8900, 1835.3000]" );
   label = "area_mean";
   ID = "area_mean";
}

node smoothness_mean {
   states = ("(0.000, 0.1000]" "(0.0730, 0.1000]" );
   label = "smoothness_mean";
   ID = "smoothness_mean";
}

node compactness_mean {
   states = ("(0.000, 0.3000]" "(0.0000, 0.2000]" );
   label = "compactness_mean";
   ID = "compactness_mean";
}

node concavity_mean {
   states = ("(0.0000, 0.4000]" );
   label = "concavity_mean";
   ID = "concavity_mean";
}

node concave points_mean {
   states = ("(-0.0059, 0.0000]" "(0.0000, 0.0900]" "(0.0000, 0.1000]" );
   label = "concave points_mean";
   ID = "concave points_mean";
}

node symmetry_mean {
   states = ("(0.00, 0.1000]" "(0.000, 0.2000]" );
   label = "symmetry_mean";
   ID = "symmetry_mean";
}

node fractal_dimension_mean {
   states = ("(0.0000, 0.0000]" "(0.0000, 0.0900]" "(0.0419, 0.0500]" );
   label = "fractal_dimension_mean";
   ID = "fractal_dimension_mean";
}

node radius_se {
   states = ("(0.000, 0.2000]" "(0.000, 2.8000]" );
   label = "radius_se";
   ID = "radius_se";
}

node texture_se {
   states = ("(0.000, 2.2000]" "(2.000, 3.7000]" );
   label = "texture_se";
   ID = "texture_se";
}

node perimeter_se {
   states = ("(2.000, 8.3000]" "(2.0100, 2.0000]" "(8.0000, 21.8000]" );
   label = "perimeter_se";
   ID = "perimeter_se";
}

node area_se {
   states = ("(12.0000, 26.4000]" "(26.00000, 482.0000]" "(482.00000, 534.1000]" );
   label = "area_se";
   ID = "area_se";
}

node smoothness_se {
   states = ("(-0.0062, 0.0060]" "(0.0000, 0.0000]" "(0.0063, 0.0200]" );
   label = "smoothness_se";
   ID = "smoothness_se";
}

node compactness_se {
   states = ("(0.0000, 0.0600]" "(0.0000, 0.1000]" );
   label = "compactness_se";
   ID = "compactness_se";
}

node concavity_se {
   states = ("(0.0000, 0.2000]" );
   label = "concavity_se";
   ID = "concavity_se";
}

node concave points_se {
   states = ("(-0.0036, 0.0300]" );
   label = "concave points_se";
   ID = "concave points_se";
}

node symmetry_se {
   states = ("(-0.0017, 0.0100]" "(0.00000, 0.0200]" "(0.00000, 0.0500]" );
   label = "symmetry_se";
   ID = "symmetry_se";
}

node fractal_dimension_se {
   states = ("(-0.0088, 0.0010]" "(0.0017, 0.0060]" "(0.0064, 0.0090]" );
   label = "fractal_dimension_se";
   ID = "fractal_dimension_se";
}

node radius_worst {
   states = ("(11.0000, 17.7000]" "(17.0000, 33.4000]" "(33.0000, 35.2000]" );
   label = "radius_worst";
   ID = "radius_worst";
}

node texture_worst {
   states = ("(15.0000, 20.2000]" "(20.000, 31.0000]" "(31.000, 40.7000]" );
   label = "texture_worst";
   ID = "texture_worst";
}

node perimeter_worst {
   states = ("(117.6799, 144.5000]" "(144.00000, 236.5000]" );
   label = "perimeter_worst";
   ID = "perimeter_worst";
}

node area_worst {
   states = ("(257.00000, 989.3000]" "(989.000000, 3893.2000]" );
   label = "area_worst";
   ID = "area_worst";
}

node smoothness_worst {
   states = ("(0.000, 0.2000]" "(0.0750, 0.1000]" );
   label = "smoothness_worst";
   ID = "smoothness_worst";
}

node compactness_worst {
   states = ("(0.000, 0.3000]" "(0.000, 0.9000]" );
   label = "compactness_worst";
   ID = "compactness_worst";
}

node concavity_worst {
   states = ("(0.000, 1.1000]" "(0.0029, 0.3000]" );
   label = "concavity_worst";
   ID = "concavity_worst";
}

node concave points_worst {
   states = ("(0.00, 0.0000]" "(0.0009, 0.1000]" );
   label = "concave points_worst";
   ID = "concave points_worst";
}

node symmetry_worst {
   states = ("(0.000, 0.3000]" "(0.000, 0.6000]" );
   label = "symmetry_worst";
   ID = "symmetry_worst";
}

node fractal_dimension_worst {
   states = ("(0.0000, 0.1000]" "(0.00000, 0.0900]" );
   label = "fractal_dimension_worst";
   ID = "fractal_dimension_worst";
}

node diagnosis {
   states = (No Yes );
   label = "diagnosis";
   ID = "diagnosis";
}

potential ( radius_mean | fractal_dimension_mean   symmetry_worst   ) {
   data = 
   (((   1)   % fractal_dimension_mean="(0.0000, 0.0000]"   symmetry_worst="(0.000, 0.3000]"   
   (   1)   % fractal_dimension_mean="(0.0000, 0.0900]"   symmetry_worst="(0.000, 0.3000]"   
   (   1))   % fractal_dimension_mean="(0.0419, 0.0500]"   symmetry_worst="(0.000, 0.3000]"   
   ((   1)   % fractal_dimension_mean="(0.0000, 0.0000]"   symmetry_worst="(0.000, 0.6000]"   
   (   1)   % fractal_dimension_mean="(0.0000, 0.0900]"   symmetry_worst="(0.000, 0.6000]"   
   (   1)));   % fractal_dimension_mean="(0.0419, 0.0500]"   symmetry_worst="(0.000, 0.6000]"   
}

potential ( texture_mean | radius_mean   ) {
   data = 
   ((   0.995033   0.00496689));   % radius_mean="(8.0000, 27.2000]"   
}

potential ( perimeter_mean | concave points_mean   ) {
   data = 
   ((   0.0283843   0.971616)   % concave points_mean="(-0.0059, 0.0000]"   
   (   0.000749625   0.99925)   % concave points_mean="(0.0000, 0.0900]"   
   (   0.05   0.95));   % concave points_mean="(0.0000, 0.1000]"   
}

potential ( area_mean | concave points_mean   ) {
   data = 
   ((   0.0414847   0.958515)   % concave points_mean="(-0.0059, 0.0000]"   
   (   0.000749625   0.99925)   % concave points_mean="(0.0000, 0.0900]"   
   (   0.05   0.95));   % concave points_mean="(0.0000, 0.1000]"   
}

potential ( smoothness_mean | concave points_mean   ) {
   data = 
   ((   0.0676856   0.932314)   % concave points_mean="(-0.0059, 0.0000]"   
   (   0.000749625   0.99925)   % concave points_mean="(0.0000, 0.0900]"   
   (   0.05   0.95));   % concave points_mean="(0.0000, 0.1000]"   
}

potential ( compactness_mean | concave points_mean   ) {
   data = 
   ((   0.0545852   0.945415)   % concave points_mean="(-0.0059, 0.0000]"   
   (   0.000749625   0.99925)   % concave points_mean="(0.0000, 0.0900]"   
   (   0.05   0.95));   % concave points_mean="(0.0000, 0.1000]"   
}

potential ( concavity_mean | fractal_dimension_mean   symmetry_worst   ) {
   data = 
   (((   1)   % fractal_dimension_mean="(0.0000, 0.0000]"   symmetry_worst="(0.000, 0.3000]"   
   (   1)   % fractal_dimension_mean="(0.0000, 0.0900]"   symmetry_worst="(0.000, 0.3000]"   
   (   1))   % fractal_dimension_mean="(0.0419, 0.0500]"   symmetry_worst="(0.000, 0.3000]"   
   ((   1)   % fractal_dimension_mean="(0.0000, 0.0000]"   symmetry_worst="(0.000, 0.6000]"   
   (   1)   % fractal_dimension_mean="(0.0000, 0.0900]"   symmetry_worst="(0.000, 0.6000]"   
   (   1)));   % fractal_dimension_mean="(0.0419, 0.0500]"   symmetry_worst="(0.000, 0.6000]"   
}

potential ( concave points_mean | fractal_dimension_mean   ) {
   data = 
   ((   0.833333   0.132603   0.0340633)   % fractal_dimension_mean="(0.0000, 0.0000]"   
   (   0.0133333   0.973333   0.0133333)   % fractal_dimension_mean="(0.0000, 0.0900]"   
   (   0.000549149   0.998902   0.000549149));   % fractal_dimension_mean="(0.0419, 0.0500]"   
}

potential ( symmetry_mean | concave points_mean   fractal_dimension_mean   ) {
   data = 
   (((   0.99927   0.000729927)   % concave points_mean="(-0.0059, 0.0000]"   fractal_dimension_mean="(0.0000, 0.0000]"   
   (   0.417431   0.582569)   % concave points_mean="(0.0000, 0.0900]"   fractal_dimension_mean="(0.0000, 0.0000]"   
   (   0.982143   0.0178571))   % concave points_mean="(0.0000, 0.1000]"   fractal_dimension_mean="(0.0000, 0.0000]"   
   ((   0.5   0.5)   % concave points_mean="(-0.0059, 0.0000]"   fractal_dimension_mean="(0.0000, 0.0900]"   
   (   0.993151   0.00684932)   % concave points_mean="(0.0000, 0.0900]"   fractal_dimension_mean="(0.0000, 0.0900]"   
   (   0.5   0.5))   % concave points_mean="(0.0000, 0.1000]"   fractal_dimension_mean="(0.0000, 0.0900]"   
   ((   0.5   0.5)   % concave points_mean="(-0.0059, 0.0000]"   fractal_dimension_mean="(0.0419, 0.0500]"   
   (   0.999725   0.000274876)   % concave points_mean="(0.0000, 0.0900]"   fractal_dimension_mean="(0.0419, 0.0500]"   
   (   0.5   0.5)));   % concave points_mean="(0.0000, 0.1000]"   fractal_dimension_mean="(0.0419, 0.0500]"   
}

potential ( fractal_dimension_mean | radius_se   ) {
   data = 
   ((   0.889431   0.0796748   0.0308943)   % radius_se="(0.000, 0.2000]"   
   (   0.000835422   0.000835422   0.998329));   % radius_se="(0.000, 2.8000]"   
}

potential (radius_se) {
   data = (  0.339404 0.660596);
}

potential ( texture_se | radius_se   perimeter_se   ) {
   data = 
   (((   0.5   0.5)   % radius_se="(0.000, 0.2000]"   perimeter_se="(2.000, 8.3000]"   
   (   0.999513   0.000486855))   % radius_se="(0.000, 2.8000]"   perimeter_se="(2.000, 8.3000]"   
   ((   0.999184   0.000815661)   % radius_se="(0.000, 0.2000]"   perimeter_se="(2.0100, 2.0000]"   
   (   0.797521   0.202479))   % radius_se="(0.000, 2.8000]"   perimeter_se="(2.0100, 2.0000]"   
   ((   0.5   0.5)   % radius_se="(0.000, 0.2000]"   perimeter_se="(8.0000, 21.8000]"   
   (   0.989796   0.0102041)));   % radius_se="(0.000, 2.8000]"   perimeter_se="(8.0000, 21.8000]"   
}

potential ( perimeter_se | radius_se   ) {
   data = 
   ((   0.00162602   0.996748   0.00162602)   % radius_se="(0.000, 0.2000]"   
   (   0.857978   0.101086   0.0409357));   % radius_se="(0.000, 2.8000]"   
}

potential ( area_se | perimeter_se   ) {
   data = 
   ((   0.0123217   0.981193   0.00648508)   % perimeter_se="(2.000, 8.3000]"   
   (   0.998183   0.000908265   0.000908265)   % perimeter_se="(2.0100, 2.0000]"   
   (   0.973333   0.0133333   0.0133333));   % perimeter_se="(8.0000, 21.8000]"   
}

potential ( smoothness_se | area_se   ) {
   data = 
   ((   0.998321   0.000839631   0.000839631)   % area_se="(12.0000, 26.4000]"   
   (   0.0660066   0.00660066   0.927393)   % area_se="(26.00000, 482.0000]"   
   (   0.833333   0.0833333   0.0833333));   % area_se="(482.00000, 534.1000]"   
}

potential ( compactness_se | smoothness_se   ) {
   data = 
   ((   0.998845   0.00115473)   % smoothness_se="(-0.0062, 0.0060]"   
   (   0.875   0.125)   % smoothness_se="(0.0000, 0.0000]"   
   (   0.960554   0.0394456));   % smoothness_se="(0.0063, 0.0200]"   
}

potential ( concavity_se | fractal_dimension_mean   symmetry_worst   ) {
   data = 
   (((   1)   % fractal_dimension_mean="(0.0000, 0.0000]"   symmetry_worst="(0.000, 0.3000]"   
   (   1)   % fractal_dimension_mean="(0.0000, 0.0900]"   symmetry_worst="(0.000, 0.3000]"   
   (   1))   % fractal_dimension_mean="(0.0419, 0.0500]"   symmetry_worst="(0.000, 0.3000]"   
   ((   1)   % fractal_dimension_mean="(0.0000, 0.0000]"   symmetry_worst="(0.000, 0.6000]"   
   (   1)   % fractal_dimension_mean="(0.0000, 0.0900]"   symmetry_worst="(0.000, 0.6000]"   
   (   1)));   % fractal_dimension_mean="(0.0419, 0.0500]"   symmetry_worst="(0.000, 0.6000]"   
}

potential ( concave points_se | fractal_dimension_mean   symmetry_worst   ) {
   data = 
   (((   1)   % fractal_dimension_mean="(0.0000, 0.0000]"   symmetry_worst="(0.000, 0.3000]"   
   (   1)   % fractal_dimension_mean="(0.0000, 0.0900]"   symmetry_worst="(0.000, 0.3000]"   
   (   1))   % fractal_dimension_mean="(0.0419, 0.0500]"   symmetry_worst="(0.000, 0.3000]"   
   ((   1)   % fractal_dimension_mean="(0.0000, 0.0000]"   symmetry_worst="(0.000, 0.6000]"   
   (   1)   % fractal_dimension_mean="(0.0000, 0.0900]"   symmetry_worst="(0.000, 0.6000]"   
   (   1)));   % fractal_dimension_mean="(0.0419, 0.0500]"   symmetry_worst="(0.000, 0.6000]"   
}

potential ( symmetry_se | compactness_se   smoothness_se   ) {
   data = 
   (((   0.999229   0.000385356   0.000385356)   % compactness_se="(0.0000, 0.0600]"   smoothness_se="(-0.0062, 0.0060]"   
   (   0.333333   0.333333   0.333333))   % compactness_se="(0.0000, 0.1000]"   smoothness_se="(-0.0062, 0.0060]"   
   ((   0.904762   0.047619   0.047619)   % compactness_se="(0.0000, 0.0600]"   smoothness_se="(0.0000, 0.0000]"   
   (   0.333333   0.333333   0.333333))   % compactness_se="(0.0000, 0.1000]"   smoothness_se="(0.0000, 0.0000]"   
   ((   0.206807   0.746208   0.0469848)   % compactness_se="(0.0000, 0.0600]"   smoothness_se="(0.0063, 0.0200]"   
   (   0.981982   0.00900901   0.00900901)));   % compactness_se="(0.0000, 0.1000]"   smoothness_se="(0.0063, 0.0200]"   
}

potential ( fractal_dimension_se | symmetry_se   ) {
   data = 
   ((   0.998781   0.000609385   0.000609385)   % symmetry_se="(-0.0017, 0.0100]"   
   (   0.0276954   0.935707   0.0365974)   % symmetry_se="(0.00000, 0.0200]"   
   (   0.969697   0.0151515   0.0151515));   % symmetry_se="(0.00000, 0.0500]"   
}

potential ( radius_worst | fractal_dimension_se   ) {
   data = 
   ((   0.998845   0.000577701   0.000577701)   % fractal_dimension_se="(-0.0088, 0.0010]"   
   (   0.0580169   0.931435   0.0105485)   % fractal_dimension_se="(0.0017, 0.0060]"   
   (   0.948718   0.025641   0.025641));   % fractal_dimension_se="(0.0064, 0.0090]"   
}

potential ( texture_worst | radius_worst   ) {
   data = 
   ((   0.998902   0.000549149   0.000549149)   % radius_worst="(11.0000, 17.7000]"   
   (   0.0926554   0.865537   0.0418079)   % radius_worst="(17.0000, 33.4000]"   
   (   0.833333   0.0833333   0.0833333));   % radius_worst="(33.0000, 35.2000]"   
}

potential ( perimeter_worst | texture_worst   area_worst   ) {
   data = 
   (((   0.999607   0.000392773)   % texture_worst="(15.0000, 20.2000]"   area_worst="(257.00000, 989.3000]"   
   (   0.587379   0.412621)   % texture_worst="(20.000, 31.0000]"   area_worst="(257.00000, 989.3000]"   
   (   0.98   0.02))   % texture_worst="(31.000, 40.7000]"   area_worst="(257.00000, 989.3000]"   
   ((   0.5   0.5)   % texture_worst="(15.0000, 20.2000]"   area_worst="(989.000000, 3893.2000]"   
   (   0.998778   0.00122249)   % texture_worst="(20.000, 31.0000]"   area_worst="(989.000000, 3893.2000]"   
   (   0.5   0.5)));   % texture_worst="(31.000, 40.7000]"   area_worst="(989.000000, 3893.2000]"   
}

potential ( area_worst | texture_worst   ) {
   data = 
   ((   0.999215   0.000784929)   % texture_worst="(15.0000, 20.2000]"   
   (   0.201172   0.798828)   % texture_worst="(20.000, 31.0000]"   
   (   0.961538   0.0384615));   % texture_worst="(31.000, 40.7000]"   
}

potential ( smoothness_worst | area_worst   ) {
   data = 
   ((   0.00107066   0.998929)   % area_worst="(257.00000, 989.3000]"   
   (   0.821168   0.178832));   % area_worst="(989.000000, 3893.2000]"   
}

potential ( compactness_worst | smoothness_worst   ) {
   data = 
   ((   0.128319   0.871681)   % smoothness_worst="(0.000, 0.2000]"   
   (   0.998982   0.00101833));   % smoothness_worst="(0.0750, 0.1000]"   
}

potential ( concavity_worst | compactness_worst   ) {
   data = 
   ((   0.000990099   0.99901)   % compactness_worst="(0.000, 0.3000]"   
   (   0.732323   0.267677));   % compactness_worst="(0.000, 0.9000]"   
}

potential ( concave points_worst | concavity_worst   fractal_dimension_worst   ) {
   data = 
   (((   0.0135135   0.986486)   % concavity_worst="(0.000, 1.1000]"   fractal_dimension_worst="(0.0000, 0.1000]"   
   (   0.5   0.5))   % concavity_worst="(0.0029, 0.3000]"   fractal_dimension_worst="(0.0000, 0.1000]"   
   ((   0.0779817   0.922018)   % concavity_worst="(0.000, 1.1000]"   fractal_dimension_worst="(0.00000, 0.0900]"   
   (   0.000471254   0.999529)));   % concavity_worst="(0.0029, 0.3000]"   fractal_dimension_worst="(0.00000, 0.0900]"   
}

potential ( symmetry_worst | concavity_worst   ) {
   data = 
   ((   0.856164   0.143836)   % concavity_worst="(0.000, 1.1000]"   
   (   0.999058   0.00094162));   % concavity_worst="(0.0029, 0.3000]"   
}

potential ( fractal_dimension_worst | symmetry_worst   concavity_worst   ) {
   data = 
   (((   0.292   0.708)   % symmetry_worst="(0.000, 0.3000]"   concavity_worst="(0.000, 1.1000]"   
   (   0.0238095   0.97619))   % symmetry_worst="(0.000, 0.6000]"   concavity_worst="(0.000, 1.1000]"   
   ((   0.000471254   0.999529)   % symmetry_worst="(0.000, 0.3000]"   concavity_worst="(0.0029, 0.3000]"   
   (   0.5   0.5)));   % symmetry_worst="(0.000, 0.6000]"   concavity_worst="(0.0029, 0.3000]"   
}

potential ( diagnosis | concave points_mean   ) {
   data = 
   ((   0.120087   0.879913)   % concave points_mean="(-0.0059, 0.0000]"   
   (   0.000749625   0.99925)   % concave points_mean="(0.0000, 0.0900]"   
   (   0.05   0.95));   % concave points_mean="(0.0000, 0.1000]"   
}


