
net {
  name = unnamedBN;
  software = "aGrUM 0.18.2";
  node_size = (50 50);
}

node radius_mean {
   states = ("(12.0000, 16.7000]" );
   label = "radius_mean";
   ID = "radius_mean";
}

node texture_mean {
   states = ("(23.0000, 27.1000]" "(27.0000, 28.1000]" );
   label = "texture_mean";
   ID = "texture_mean";
}

node perimeter_mean {
   states = ("(109.00000, 114.3000]" "(88.00000, 109.1000]" );
   label = "perimeter_mean";
   ID = "perimeter_mean";
}

node area_mean {
   states = ("(481.00000, 813.0000]" "(813.00000, 893.8000]" );
   label = "area_mean";
   ID = "area_mean";
}

node smoothness_mean {
   states = ("(0.00000, 0.1100]" "(0.1009, 0.1000]" );
   label = "smoothness_mean";
   ID = "smoothness_mean";
}

node compactness_mean {
   states = ("(0.00, 0.0000]" "(0.000, 0.1000]" );
   label = "compactness_mean";
   ID = "compactness_mean";
}

node concavity_mean {
   states = ("(0.000, 0.2000]" );
   label = "concavity_mean";
   ID = "concavity_mean";
}

node concave points_mean {
   states = ("(0.000, 0.0000]" "(0.00000, 0.0800]" );
   label = "concave points_mean";
   ID = "concave points_mean";
}

node symmetry_mean {
   states = ("(0.00000, 0.1800]" );
   label = "symmetry_mean";
   ID = "symmetry_mean";
}

node fractal_dimension_mean {
   states = ("(0.0000, 0.0000]" "(0.00000, 0.0600]" );
   label = "fractal_dimension_mean";
   ID = "fractal_dimension_mean";
}

node radius_se {
   states = ("(0.000, 0.4000]" "(0.000, 0.7000]" );
   label = "radius_se";
   ID = "radius_se";
}

node texture_se {
   states = ("(0.000, 1.0000]" "(1.000, 1.0000]" "(1.000, 1.4000]" );
   label = "texture_se";
   ID = "texture_se";
}

node perimeter_se {
   states = ("(1.6199, 2.0000]" "(2.00, 3.5000]" "(3.00, 5.0000]" );
   label = "perimeter_se";
   ID = "perimeter_se";
}

node area_se {
   states = ("(43.000, 86.0000]" "(7.000, 43.4000]" "(86.000, 95.6000]" );
   label = "area_se";
   ID = "area_se";
}

node smoothness_se {
   states = ("(-0.0075, 0.0050]" "(0.0052, 0.0070]" "(0.0072, 0.0070]" );
   label = "smoothness_se";
   ID = "smoothness_se";
}

node compactness_se {
   states = ("(0.000, 0.0000]" "(0.0000, 0.0000]" "(0.0000, 0.0200]" );
   label = "compactness_se";
   ID = "compactness_se";
}

node concavity_se {
   states = ("(-0.0037, 0.0200]" "(0.00000, 0.0500]" );
   label = "concavity_se";
   ID = "concavity_se";
}

node concave points_se {
   states = ("(-0.0036, 0.0080]" "(0.0084, 0.0100]" );
   label = "concave points_se";
   ID = "concave points_se";
}

node symmetry_se {
   states = ("(0.00000, 0.0100]" "(0.00000, 0.0200]" "(0.0009, 0.0100]" );
   label = "symmetry_se";
   ID = "symmetry_se";
}

node fractal_dimension_se {
   states = ("(-0.0089, 0.0020]" "(0.0025, 0.0020]" "(0.0026, 0.0030]" );
   label = "fractal_dimension_se";
   ID = "fractal_dimension_se";
}

node radius_worst {
   states = ("(17.5699, 19.8000]" "(19.0000, 22.1000]" "(22.0000, 22.4000]" );
   label = "radius_worst";
   ID = "radius_worst";
}

node texture_worst {
   states = ("(33.0000, 36.7000]" "(36.000, 38.0000]" "(36.0000, 36.9000]" );
   label = "texture_worst";
   ID = "texture_worst";
}

node perimeter_worst {
   states = ("(140.7000, 147.1000]" "(147.00000, 164.2000]" );
   label = "perimeter_worst";
   ID = "perimeter_worst";
}

node area_worst {
   states = ("(1240.00000, 1574.0000]" "(840.000000, 1240.6000]" );
   label = "area_worst";
   ID = "area_worst";
}

node smoothness_worst {
   states = ("(0.000, 0.1000]" "(0.1399, 0.1000]" );
   label = "smoothness_worst";
   ID = "smoothness_worst";
}

node compactness_worst {
   states = ("(0.000, 0.6000]" );
   label = "compactness_worst";
   ID = "compactness_worst";
}

node concavity_worst {
   states = ("(0.000, 0.6000]" "(0.000, 0.7000]" );
   label = "concavity_worst";
   ID = "concavity_worst";
}

node concave points_worst {
   states = ("(0.00, 0.2000]" "(0.1699, 0.0000]" );
   label = "concave points_worst";
   ID = "concave points_worst";
}

node symmetry_worst {
   states = ("(0.00, 0.0000]" "(0.00, 0.4000]" );
   label = "symmetry_worst";
   ID = "symmetry_worst";
}

node fractal_dimension_worst {
   states = ("(0.0000, 0.1000]" "(0.00000, 0.0900]" );
   label = "fractal_dimension_worst";
   ID = "fractal_dimension_worst";
}

node diagnosis {
   states = (Yes );
   label = "diagnosis";
   ID = "diagnosis";
}

potential ( radius_mean | symmetry_se   ) {
   data = 
   ((   1)   % symmetry_se="(0.00000, 0.0100]"   
   (   1)   % symmetry_se="(0.00000, 0.0200]"   
   (   1));   % symmetry_se="(0.0009, 0.0100]"   
}

potential ( texture_mean | concave points_mean   ) {
   data = 
   ((   0.983221   0.0167785)   % concave points_mean="(0.000, 0.0000]"   
   (   0.998901   0.0010989));   % concave points_mean="(0.00000, 0.0800]"   
}

potential ( perimeter_mean | concave points_mean   ) {
   data = 
   ((   0.0302013   0.969799)   % concave points_mean="(0.000, 0.0000]"   
   (   0.0010989   0.998901));   % concave points_mean="(0.00000, 0.0800]"   
}

potential ( area_mean | concave points_mean   ) {
   data = 
   ((   0.956376   0.0436242)   % concave points_mean="(0.000, 0.0000]"   
   (   0.998901   0.0010989));   % concave points_mean="(0.00000, 0.0800]"   
}

potential ( smoothness_mean | concave points_mean   ) {
   data = 
   ((   0.0704698   0.92953)   % concave points_mean="(0.000, 0.0000]"   
   (   0.0010989   0.998901));   % concave points_mean="(0.00000, 0.0800]"   
}

potential ( compactness_mean | concave points_mean   ) {
   data = 
   ((   0.057047   0.942953)   % concave points_mean="(0.000, 0.0000]"   
   (   0.0010989   0.998901));   % concave points_mean="(0.00000, 0.0800]"   
}

potential ( concavity_mean | symmetry_se   ) {
   data = 
   ((   1)   % symmetry_se="(0.00000, 0.0100]"   
   (   1)   % symmetry_se="(0.00000, 0.0200]"   
   (   1));   % symmetry_se="(0.0009, 0.0100]"   
}

potential ( concave points_mean | fractal_dimension_mean   radius_se   ) {
   data = 
   (((   0.0172414   0.982759)   % radius_se="(0.000, 0.4000]"   fractal_dimension_mean="(0.0000, 0.0000]"   
   (   0.5   0.5))   % radius_se="(0.000, 0.7000]"   fractal_dimension_mean="(0.0000, 0.0000]"   
   ((   0.778215   0.221785)   % radius_se="(0.000, 0.4000]"   fractal_dimension_mean="(0.00000, 0.0600]"   
   (   0.000627353   0.999373)));   % radius_se="(0.000, 0.7000]"   fractal_dimension_mean="(0.00000, 0.0600]"   
}

potential ( symmetry_mean | symmetry_se   ) {
   data = 
   ((   1)   % symmetry_se="(0.00000, 0.0100]"   
   (   1)   % symmetry_se="(0.00000, 0.0200]"   
   (   1));   % symmetry_se="(0.0009, 0.0100]"   
}

potential ( fractal_dimension_mean | radius_se   ) {
   data = 
   ((   0.0707317   0.929268)   % radius_se="(0.000, 0.4000]"   
   (   0.00125313   0.998747));   % radius_se="(0.000, 0.7000]"   
}

potential ( radius_se | texture_se   ) {
   data = 
   ((   0.878223   0.121777)   % texture_se="(0.000, 1.0000]"   
   (   0.000919118   0.999081)   % texture_se="(1.000, 1.0000]"   
   (   0.0384615   0.961538));   % texture_se="(1.000, 1.4000]"   
}

potential ( texture_se | smoothness_se   ) {
   data = 
   ((   0.79347   0.178436   0.0280942)   % smoothness_se="(-0.0075, 0.0050]"   
   (   0.000719942   0.99856   0.000719942)   % smoothness_se="(0.0052, 0.0070]"   
   (   0.0833333   0.833333   0.0833333));   % smoothness_se="(0.0072, 0.0070]"   
}

potential ( perimeter_se | texture_se   smoothness_se   ) {
   data = 
   (((   0.000318979   0.999362   0.000318979)   % smoothness_se="(-0.0075, 0.0050]"   texture_se="(0.000, 1.0000]"   
   (   0.333333   0.333333   0.333333)   % smoothness_se="(0.0052, 0.0070]"   texture_se="(0.000, 1.0000]"   
   (   0.333333   0.333333   0.333333))   % smoothness_se="(0.0072, 0.0070]"   texture_se="(0.000, 1.0000]"   
   ((   0.652482   0.0780142   0.269504)   % smoothness_se="(-0.0075, 0.0050]"   texture_se="(1.000, 1.0000]"   
   (   0.999519   0.000240327   0.000240327)   % smoothness_se="(0.0052, 0.0070]"   texture_se="(1.000, 1.0000]"   
   (   0.933333   0.0333333   0.0333333))   % smoothness_se="(0.0072, 0.0070]"   texture_se="(1.000, 1.0000]"   
   ((   0.00900901   0.981982   0.00900901)   % smoothness_se="(-0.0075, 0.0050]"   texture_se="(1.000, 1.4000]"   
   (   0.333333   0.333333   0.333333)   % smoothness_se="(0.0052, 0.0070]"   texture_se="(1.000, 1.4000]"   
   (   0.333333   0.333333   0.333333)));   % smoothness_se="(0.0072, 0.0070]"   texture_se="(1.000, 1.4000]"   
}

potential ( area_se | perimeter_se   smoothness_se   ) {
   data = 
   (((   0.703463   0.235931   0.0606061)   % smoothness_se="(-0.0075, 0.0050]"   perimeter_se="(1.6199, 2.0000]"   
   (   0.999519   0.000240327   0.000240327)   % smoothness_se="(0.0052, 0.0070]"   perimeter_se="(1.6199, 2.0000]"   
   (   0.933333   0.0333333   0.0333333))   % smoothness_se="(0.0072, 0.0070]"   perimeter_se="(1.6199, 2.0000]"   
   ((   0.000303306   0.999393   0.000303306)   % smoothness_se="(-0.0075, 0.0050]"   perimeter_se="(2.00, 3.5000]"   
   (   0.333333   0.333333   0.333333)   % smoothness_se="(0.0052, 0.0070]"   perimeter_se="(2.00, 3.5000]"   
   (   0.333333   0.333333   0.333333))   % smoothness_se="(0.0072, 0.0070]"   perimeter_se="(2.00, 3.5000]"   
   ((   0.00520833   0.989583   0.00520833)   % smoothness_se="(-0.0075, 0.0050]"   perimeter_se="(3.00, 5.0000]"   
   (   0.333333   0.333333   0.333333)   % smoothness_se="(0.0052, 0.0070]"   perimeter_se="(3.00, 5.0000]"   
   (   0.333333   0.333333   0.333333)));   % smoothness_se="(0.0072, 0.0070]"   perimeter_se="(3.00, 5.0000]"   
}

potential (smoothness_se) {
   data = (  0.484547 0.511038 0.00441501);
}

potential ( compactness_se | smoothness_se   ) {
   data = 
   ((   0.000759301   0.998481   0.000759301)   % smoothness_se="(-0.0075, 0.0050]"   
   (   0.0331174   0.0331174   0.933765)   % smoothness_se="(0.0052, 0.0070]"   
   (   0.0833333   0.833333   0.0833333));   % smoothness_se="(0.0072, 0.0070]"   
}

potential ( concavity_se | compactness_se   ) {
   data = 
   ((   0.96875   0.03125)   % compactness_se="(0.000, 0.0000]"   
   (   0.998906   0.00109409)   % compactness_se="(0.0000, 0.0000]"   
   (   0.0704388   0.929561));   % compactness_se="(0.0000, 0.0200]"   
}

potential ( concave points_se | concavity_se   ) {
   data = 
   ((   0.998507   0.00149254)   % concavity_se="(-0.0037, 0.0200]"   
   (   0.0687732   0.931227));   % concavity_se="(0.00000, 0.0500]"   
}

potential ( symmetry_se | concave points_se   ) {
   data = 
   ((   0.998111   0.000944287   0.000944287)   % concave points_se="(-0.0036, 0.0080]"   
   (   0.0730412   0.0252324   0.901726));   % concave points_se="(0.0084, 0.0100]"   
}

potential ( fractal_dimension_se | symmetry_se   ) {
   data = 
   ((   0.998801   0.00059952   0.00059952)   % symmetry_se="(0.00000, 0.0100]"   
   (   0.933333   0.0333333   0.0333333)   % symmetry_se="(0.00000, 0.0200]"   
   (   0.0715686   0.892157   0.0362745));   % symmetry_se="(0.0009, 0.0100]"   
}

potential ( radius_worst | fractal_dimension_se   ) {
   data = 
   ((   0.998868   0.000565931   0.000565931)   % fractal_dimension_se="(-0.0089, 0.0020]"   
   (   0.0405702   0.948465   0.0109649)   % fractal_dimension_se="(0.0025, 0.0020]"   
   (   0.948718   0.025641   0.025641));   % fractal_dimension_se="(0.0026, 0.0030]"   
}

potential ( texture_worst | radius_worst   ) {
   data = 
   ((   0.998912   0.000543774   0.000543774)   % radius_worst="(17.5699, 19.8000]"   
   (   0.10496   0.0426759   0.852364)   % radius_worst="(19.0000, 22.1000]"   
   (   0.833333   0.0833333   0.0833333));   % radius_worst="(22.0000, 22.4000]"   
}

potential ( perimeter_worst | texture_worst   area_worst   ) {
   data = 
   (((   0.5   0.5)   % area_worst="(1240.00000, 1574.0000]"   texture_worst="(33.0000, 36.7000]"   
   (   0.999613   0.000387297))   % area_worst="(840.000000, 1240.6000]"   texture_worst="(33.0000, 36.7000]"   
   ((   0.5   0.5)   % area_worst="(1240.00000, 1574.0000]"   texture_worst="(36.000, 38.0000]"   
   (   0.98   0.02))   % area_worst="(840.000000, 1240.6000]"   texture_worst="(36.000, 38.0000]"   
   ((   0.998721   0.00127877)   % area_worst="(1240.00000, 1574.0000]"   texture_worst="(36.0000, 36.9000]"   
   (   0.645631   0.354369)));   % area_worst="(840.000000, 1240.6000]"   texture_worst="(36.0000, 36.9000]"   
}

potential ( area_worst | texture_worst   ) {
   data = 
   ((   0.000773994   0.999226)   % texture_worst="(33.0000, 36.7000]"   
   (   0.0384615   0.961538)   % texture_worst="(36.000, 38.0000]"   
   (   0.791498   0.208502));   % texture_worst="(36.0000, 36.9000]"   
}

potential ( smoothness_worst | area_worst   ) {
   data = 
   ((   0.858779   0.141221)   % area_worst="(1240.00000, 1574.0000]"   
   (   0.00105708   0.998943));   % area_worst="(840.000000, 1240.6000]"   
}

potential ( compactness_worst | symmetry_se   ) {
   data = 
   ((   1)   % symmetry_se="(0.00000, 0.0100]"   
   (   1)   % symmetry_se="(0.00000, 0.0200]"   
   (   1));   % symmetry_se="(0.0009, 0.0100]"   
}

potential ( concavity_worst | smoothness_worst   ) {
   data = 
   ((   0.411504   0.588496)   % smoothness_worst="(0.000, 0.1000]"   
   (   0.998982   0.00101833));   % smoothness_worst="(0.1399, 0.1000]"   
}

potential ( concave points_worst | concavity_worst   ) {
   data = 
   ((   0.000931099   0.999069)   % concavity_worst="(0.000, 0.6000]"   
   (   0.0671642   0.932836));   % concavity_worst="(0.000, 0.7000]"   
}

potential ( symmetry_worst | fractal_dimension_worst   concavity_worst   ) {
   data = 
   (((   0.5   0.5)   % concavity_worst="(0.000, 0.6000]"   fractal_dimension_worst="(0.0000, 0.1000]"   
   (   0.97619   0.0238095))   % concavity_worst="(0.000, 0.7000]"   fractal_dimension_worst="(0.0000, 0.1000]"   
   ((   0.999534   0.000465983)   % concavity_worst="(0.000, 0.6000]"   fractal_dimension_worst="(0.00000, 0.0900]"   
   (   0.853982   0.146018)));   % concavity_worst="(0.000, 0.7000]"   fractal_dimension_worst="(0.00000, 0.0900]"   
}

potential ( fractal_dimension_worst | concavity_worst   ) {
   data = 
   ((   0.000931099   0.999069)   % concavity_worst="(0.000, 0.6000]"   
   (   0.156716   0.843284));   % concavity_worst="(0.000, 0.7000]"   
}

potential ( diagnosis | symmetry_se   ) {
   data = 
   ((   1)   % symmetry_se="(0.00000, 0.0100]"   
   (   1)   % symmetry_se="(0.00000, 0.0200]"   
   (   1));   % symmetry_se="(0.0009, 0.0100]"   
}


