
net {
  name = unnamedBN;
  software = "aGrUM 0.18.2";
  node_size = (50 50);
}

node radius_mean {
   states = ("(11.0000, 15.4000]" );
   label = "radius_mean";
   ID = "radius_mean";
}

node texture_mean {
   states = ("(17.6399, 21.5000]" "(21.0000, 22.4000]" );
   label = "texture_mean";
   ID = "texture_mean";
}

node perimeter_mean {
   states = ("(76.0000, 97.5000]" "(97.00000, 102.7000]" );
   label = "perimeter_mean";
   ID = "perimeter_mean";
}

node area_mean {
   states = ("(347.00000, 678.6000]" "(678.00000, 759.5000]" );
   label = "area_mean";
   ID = "area_mean";
}

node smoothness_mean {
   states = ("(0.0000, 0.1000]" "(0.00000, 0.1000]" );
   label = "smoothness_mean";
   ID = "smoothness_mean";
}

node compactness_mean {
   states = ("(0.000, 0.1000]" "(0.0000, 0.1000]" );
   label = "compactness_mean";
   ID = "compactness_mean";
}

node concavity_mean {
   states = ("(0.000, 0.1000]" );
   label = "concavity_mean";
   ID = "concavity_mean";
}

node concave points_mean {
   states = ("(0.00000, 0.0700]" "(0.0349, 0.0600]" );
   label = "concave points_mean";
   ID = "concave points_mean";
}

node symmetry_mean {
   states = ("(0.00000, 0.1500]" "(0.00000, 0.1600]" );
   label = "symmetry_mean";
   ID = "symmetry_mean";
}

node fractal_dimension_mean {
   states = ("(0.0000, 0.0000]" "(0.00000, 0.0600]" );
   label = "fractal_dimension_mean";
   ID = "fractal_dimension_mean";
}

node radius_se {
   states = ("(0.00, 0.0000]" "(0.000, 0.2000]" );
   label = "radius_se";
   ID = "radius_se";
}

node texture_se {
   states = ("(0.000, 0.9000]" "(0.000, 1.3000]" );
   label = "texture_se";
   ID = "texture_se";
}

node perimeter_se {
   states = ("(0.9299, 1.6000]" "(1.000, 1.8000]" "(1.000, 3.7000]" );
   label = "perimeter_se";
   ID = "perimeter_se";
}

node area_se {
   states = ("(18.000, 65.0000]" "(65.000, 71.4000]" "(7.0000, 18.8000]" );
   label = "area_se";
   ID = "area_se";
}

node smoothness_se {
   states = ("(-0.0074, 0.0050]" "(0.0053, 0.0070]" "(0.0073, 0.0000]" );
   label = "smoothness_se";
   ID = "smoothness_se";
}

node compactness_se {
   states = ("(-0.0024, 0.0100]" "(0.00000, 0.0100]" "(0.00000, 0.0200]" );
   label = "compactness_se";
   ID = "compactness_se";
}

node concavity_se {
   states = ("(-0.0049, 0.0100]" "(0.00000, 0.0400]" );
   label = "concavity_se";
   ID = "concavity_se";
}

node concave points_se {
   states = ("(-0.0046, 0.0070]" "(0.0074, 0.0100]" );
   label = "concave points_se";
   ID = "concave points_se";
}

node symmetry_se {
   states = ("(-0.0020, 0.0100]" "(0.00000, 0.0100]" );
   label = "symmetry_se";
   ID = "symmetry_se";
}

node fractal_dimension_se {
   states = ("(-0.0089, 0.0020]" "(0.0024, 0.0020]" "(0.0026, 0.0030]" );
   label = "fractal_dimension_se";
   ID = "fractal_dimension_se";
}

node radius_worst {
   states = ("(14.0000, 16.5000]" "(16.0000, 18.7000]" "(18.0000, 19.1000]" );
   label = "radius_worst";
   ID = "radius_worst";
}

node texture_worst {
   states = ("(27.000, 30.0000]" "(30.00, 31.0000]" "(31.000, 32.7000]" );
   label = "texture_worst";
   ID = "texture_worst";
}

node perimeter_worst {
   states = ("(104.00000, 111.0000]" "(111.00000, 128.1000]" );
   label = "perimeter_worst";
   ID = "perimeter_worst";
}

node area_worst {
   states = ("(437.00000, 837.0000]" "(837.000000, 1171.0000]" );
   label = "area_worst";
   ID = "area_worst";
}

node smoothness_worst {
   states = ("(0.000, 0.1000]" "(0.1399, 0.1000]" );
   label = "smoothness_worst";
   ID = "smoothness_worst";
}

node compactness_worst {
   states = ("(0.000, 0.3000]" "(0.000, 0.4000]" );
   label = "compactness_worst";
   ID = "compactness_worst";
}

node concavity_worst {
   states = ("(0.00, 0.4000]" "(0.000, 0.5000]" );
   label = "concavity_worst";
   ID = "concavity_worst";
}

node concave points_worst {
   states = ("(0.000, 0.1000]" );
   label = "concave points_worst";
   ID = "concave points_worst";
}

node symmetry_worst {
   states = ("(0.000, 0.3000]" );
   label = "symmetry_worst";
   ID = "symmetry_worst";
}

node fractal_dimension_worst {
   states = ("(0.000, 0.1000]" "(0.0000, 0.1000]" );
   label = "fractal_dimension_worst";
   ID = "fractal_dimension_worst";
}

node diagnosis {
   states = (Yes );
   label = "diagnosis";
   ID = "diagnosis";
}

potential ( radius_mean | smoothness_se   perimeter_worst   ) {
   data = 
   (((   1)   % perimeter_worst="(104.00000, 111.0000]"   smoothness_se="(-0.0074, 0.0050]"   
   (   1))   % perimeter_worst="(111.00000, 128.1000]"   smoothness_se="(-0.0074, 0.0050]"   
   ((   1)   % perimeter_worst="(104.00000, 111.0000]"   smoothness_se="(0.0053, 0.0070]"   
   (   1))   % perimeter_worst="(111.00000, 128.1000]"   smoothness_se="(0.0053, 0.0070]"   
   ((   1)   % perimeter_worst="(104.00000, 111.0000]"   smoothness_se="(0.0073, 0.0000]"   
   (   1)));   % perimeter_worst="(111.00000, 128.1000]"   smoothness_se="(0.0073, 0.0000]"   
}

potential ( texture_mean | concave points_mean   ) {
   data = 
   ((   0.983221   0.0167785)   % concave points_mean="(0.00000, 0.0700]"   
   (   0.998901   0.0010989));   % concave points_mean="(0.0349, 0.0600]"   
}

potential ( perimeter_mean | concave points_mean   ) {
   data = 
   ((   0.969799   0.0302013)   % concave points_mean="(0.00000, 0.0700]"   
   (   0.998901   0.0010989));   % concave points_mean="(0.0349, 0.0600]"   
}

potential ( area_mean | concave points_mean   ) {
   data = 
   ((   0.956376   0.0436242)   % concave points_mean="(0.00000, 0.0700]"   
   (   0.998901   0.0010989));   % concave points_mean="(0.0349, 0.0600]"   
}

potential ( smoothness_mean | concave points_mean   ) {
   data = 
   ((   0.0704698   0.92953)   % concave points_mean="(0.00000, 0.0700]"   
   (   0.0010989   0.998901));   % concave points_mean="(0.0349, 0.0600]"   
}

potential ( compactness_mean | concave points_mean   ) {
   data = 
   ((   0.057047   0.942953)   % concave points_mean="(0.00000, 0.0700]"   
   (   0.0010989   0.998901));   % concave points_mean="(0.0349, 0.0600]"   
}

potential ( concavity_mean | smoothness_se   perimeter_worst   ) {
   data = 
   (((   1)   % perimeter_worst="(104.00000, 111.0000]"   smoothness_se="(-0.0074, 0.0050]"   
   (   1))   % perimeter_worst="(111.00000, 128.1000]"   smoothness_se="(-0.0074, 0.0050]"   
   ((   1)   % perimeter_worst="(104.00000, 111.0000]"   smoothness_se="(0.0053, 0.0070]"   
   (   1))   % perimeter_worst="(111.00000, 128.1000]"   smoothness_se="(0.0053, 0.0070]"   
   ((   1)   % perimeter_worst="(104.00000, 111.0000]"   smoothness_se="(0.0073, 0.0000]"   
   (   1)));   % perimeter_worst="(111.00000, 128.1000]"   smoothness_se="(0.0073, 0.0000]"   
}

potential ( concave points_mean | symmetry_mean   radius_se   ) {
   data = 
   (((   0.000627353   0.999373)   % radius_se="(0.00, 0.0000]"   symmetry_mean="(0.00000, 0.1500]"   
   (   0.732099   0.267901))   % radius_se="(0.000, 0.2000]"   symmetry_mean="(0.00000, 0.1500]"   
   ((   0.5   0.5)   % radius_se="(0.00, 0.0000]"   symmetry_mean="(0.00000, 0.1600]"   
   (   0.1   0.9)));   % radius_se="(0.000, 0.2000]"   symmetry_mean="(0.00000, 0.1600]"   
}

potential ( symmetry_mean | concavity_mean   ) {
   data = 
   ((   0.995033   0.00496689));   % concavity_mean="(0.000, 0.1000]"   
}

potential ( fractal_dimension_mean | radius_se   concave points_mean   ) {
   data = 
   (((   0.5   0.5)   % concave points_mean="(0.00000, 0.0700]"   radius_se="(0.00, 0.0000]"   
   (   0.000627353   0.999373))   % concave points_mean="(0.0349, 0.0600]"   radius_se="(0.00, 0.0000]"   
   ((   0.0016835   0.998316)   % concave points_mean="(0.00000, 0.0700]"   radius_se="(0.000, 0.2000]"   
   (   0.252212   0.747788)));   % concave points_mean="(0.0349, 0.0600]"   radius_se="(0.000, 0.2000]"   
}

potential ( radius_se | perimeter_se   texture_se   ) {
   data = 
   (((   0.136107   0.863893)   % texture_se="(0.000, 0.9000]"   perimeter_se="(0.9299, 1.6000]"   
   (   0.98   0.02))   % texture_se="(0.000, 1.3000]"   perimeter_se="(0.9299, 1.6000]"   
   ((   0.999513   0.000486855)   % texture_se="(0.000, 0.9000]"   perimeter_se="(1.000, 1.8000]"   
   (   0.5   0.5))   % texture_se="(0.000, 1.3000]"   perimeter_se="(1.000, 1.8000]"   
   ((   0.989796   0.0102041)   % texture_se="(0.000, 0.9000]"   perimeter_se="(1.000, 3.7000]"   
   (   0.5   0.5)));   % texture_se="(0.000, 1.3000]"   perimeter_se="(1.000, 3.7000]"   
}

potential ( texture_se | area_se   ) {
   data = 
   ((   0.99901   0.000990099)   % area_se="(18.000, 65.0000]"   
   (   0.875   0.125)   % area_se="(65.000, 71.4000]"   
   (   0.968514   0.0314861));   % area_se="(7.0000, 18.8000]"   
}

potential (perimeter_se) {
   data = (  0.405077 0.567329 0.0275938);
}

potential ( area_se | perimeter_se   smoothness_se   ) {
   data = 
   (((   0.000303306   0.000303306   0.999393)   % smoothness_se="(-0.0074, 0.0050]"   perimeter_se="(0.9299, 1.6000]"   
   (   0.333333   0.333333   0.333333)   % smoothness_se="(0.0053, 0.0070]"   perimeter_se="(0.9299, 1.6000]"   
   (   0.333333   0.333333   0.333333))   % smoothness_se="(0.0073, 0.0000]"   perimeter_se="(0.9299, 1.6000]"   
   ((   0.809195   0.0643678   0.126437)   % smoothness_se="(-0.0074, 0.0050]"   perimeter_se="(1.000, 1.8000]"   
   (   0.999519   0.000240327   0.000240327)   % smoothness_se="(0.0053, 0.0070]"   perimeter_se="(1.000, 1.8000]"   
   (   0.933333   0.0333333   0.0333333))   % smoothness_se="(0.0073, 0.0000]"   perimeter_se="(1.000, 1.8000]"   
   ((   0.00456621   0.00456621   0.990868)   % smoothness_se="(-0.0074, 0.0050]"   perimeter_se="(1.000, 3.7000]"   
   (   0.333333   0.333333   0.333333)   % smoothness_se="(0.0053, 0.0070]"   perimeter_se="(1.000, 3.7000]"   
   (   0.333333   0.333333   0.333333)));   % smoothness_se="(0.0073, 0.0000]"   perimeter_se="(1.000, 3.7000]"   
}

potential ( smoothness_se | perimeter_se   ) {
   data = 
   ((   0.998183   0.000908265   0.000908265)   % perimeter_se="(0.9299, 1.6000]"   
   (   0.0940337   0.899481   0.00648508)   % perimeter_se="(1.000, 1.8000]"   
   (   0.973333   0.0133333   0.0133333));   % perimeter_se="(1.000, 3.7000]"   
}

potential ( compactness_se | smoothness_se   ) {
   data = 
   ((   0.000759301   0.998481   0.000759301)   % smoothness_se="(-0.0074, 0.0050]"   
   (   0.933765   0.0331174   0.0331174)   % smoothness_se="(0.0053, 0.0070]"   
   (   0.0833333   0.833333   0.0833333));   % smoothness_se="(0.0073, 0.0000]"   
}

potential ( concavity_se | compactness_se   ) {
   data = 
   ((   0.0704388   0.929561)   % compactness_se="(-0.0024, 0.0100]"   
   (   0.998906   0.00109409)   % compactness_se="(0.00000, 0.0100]"   
   (   0.96875   0.03125));   % compactness_se="(0.00000, 0.0200]"   
}

potential ( concave points_se | concavity_se   ) {
   data = 
   ((   0.998507   0.00149254)   % concavity_se="(-0.0049, 0.0100]"   
   (   0.0687732   0.931227));   % concavity_se="(0.00000, 0.0400]"   
}

potential ( symmetry_se | fractal_dimension_se   concave points_se   ) {
   data = 
   (((   0.000473037   0.999527)   % concave points_se="(-0.0046, 0.0070]"   fractal_dimension_se="(-0.0089, 0.0020]"   
   (   0.400826   0.599174))   % concave points_se="(0.0074, 0.0100]"   fractal_dimension_se="(-0.0089, 0.0020]"   
   ((   0.5   0.5)   % concave points_se="(-0.0046, 0.0070]"   fractal_dimension_se="(0.0024, 0.0020]"   
   (   0.999176   0.000823723))   % concave points_se="(0.0074, 0.0100]"   fractal_dimension_se="(0.0024, 0.0020]"   
   ((   0.5   0.5)   % concave points_se="(-0.0046, 0.0070]"   fractal_dimension_se="(0.0026, 0.0030]"   
   (   0.98   0.02)));   % concave points_se="(0.0074, 0.0100]"   fractal_dimension_se="(0.0026, 0.0030]"   
}

potential ( fractal_dimension_se | concave points_se   ) {
   data = 
   ((   0.998111   0.000944287   0.000944287)   % concave points_se="(-0.0046, 0.0070]"   
   (   0.160691   0.806109   0.0332005));   % concave points_se="(0.0074, 0.0100]"   
}

potential ( radius_worst | fractal_dimension_se   ) {
   data = 
   ((   0.998868   0.000565931   0.000565931)   % fractal_dimension_se="(-0.0089, 0.0020]"   
   (   0.0405702   0.948465   0.0109649)   % fractal_dimension_se="(0.0024, 0.0020]"   
   (   0.948718   0.025641   0.025641));   % fractal_dimension_se="(0.0026, 0.0030]"   
}

potential ( texture_worst | radius_worst   ) {
   data = 
   ((   0.998912   0.000543774   0.000543774)   % radius_worst="(14.0000, 16.5000]"   
   (   0.10496   0.852364   0.0426759)   % radius_worst="(16.0000, 18.7000]"   
   (   0.833333   0.0833333   0.0833333));   % radius_worst="(18.0000, 19.1000]"   
}

potential ( perimeter_worst | texture_worst   area_worst   ) {
   data = 
   (((   0.999613   0.000387297)   % area_worst="(437.00000, 837.0000]"   texture_worst="(27.000, 30.0000]"   
   (   0.5   0.5))   % area_worst="(837.000000, 1171.0000]"   texture_worst="(27.000, 30.0000]"   
   ((   0.645631   0.354369)   % area_worst="(437.00000, 837.0000]"   texture_worst="(30.00, 31.0000]"   
   (   0.998721   0.00127877))   % area_worst="(837.000000, 1171.0000]"   texture_worst="(30.00, 31.0000]"   
   ((   0.98   0.02)   % area_worst="(437.00000, 837.0000]"   texture_worst="(31.000, 32.7000]"   
   (   0.5   0.5)));   % area_worst="(837.000000, 1171.0000]"   texture_worst="(31.000, 32.7000]"   
}

potential ( area_worst | texture_worst   ) {
   data = 
   ((   0.999226   0.000773994)   % texture_worst="(27.000, 30.0000]"   
   (   0.208502   0.791498)   % texture_worst="(30.00, 31.0000]"   
   (   0.961538   0.0384615));   % texture_worst="(31.000, 32.7000]"   
}

potential ( smoothness_worst | area_worst   ) {
   data = 
   ((   0.00105708   0.998943)   % area_worst="(437.00000, 837.0000]"   
   (   0.858779   0.141221));   % area_worst="(837.000000, 1171.0000]"   
}

potential ( compactness_worst | smoothness_worst   ) {
   data = 
   ((   0.181416   0.818584)   % smoothness_worst="(0.000, 0.1000]"   
   (   0.998982   0.00101833));   % smoothness_worst="(0.1399, 0.1000]"   
}

potential ( concavity_worst | compactness_worst   ) {
   data = 
   ((   0.999022   0.000978474)   % compactness_worst="(0.000, 0.3000]"   
   (   0.284946   0.715054));   % compactness_worst="(0.000, 0.4000]"   
}

potential ( concave points_worst | smoothness_se   perimeter_worst   ) {
   data = 
   (((   1)   % perimeter_worst="(104.00000, 111.0000]"   smoothness_se="(-0.0074, 0.0050]"   
   (   1))   % perimeter_worst="(111.00000, 128.1000]"   smoothness_se="(-0.0074, 0.0050]"   
   ((   1)   % perimeter_worst="(104.00000, 111.0000]"   smoothness_se="(0.0053, 0.0070]"   
   (   1))   % perimeter_worst="(111.00000, 128.1000]"   smoothness_se="(0.0053, 0.0070]"   
   ((   1)   % perimeter_worst="(104.00000, 111.0000]"   smoothness_se="(0.0073, 0.0000]"   
   (   1)));   % perimeter_worst="(111.00000, 128.1000]"   smoothness_se="(0.0073, 0.0000]"   
}

potential ( symmetry_worst | smoothness_se   perimeter_worst   ) {
   data = 
   (((   1)   % perimeter_worst="(104.00000, 111.0000]"   smoothness_se="(-0.0074, 0.0050]"   
   (   1))   % perimeter_worst="(111.00000, 128.1000]"   smoothness_se="(-0.0074, 0.0050]"   
   ((   1)   % perimeter_worst="(104.00000, 111.0000]"   smoothness_se="(0.0053, 0.0070]"   
   (   1))   % perimeter_worst="(111.00000, 128.1000]"   smoothness_se="(0.0053, 0.0070]"   
   ((   1)   % perimeter_worst="(104.00000, 111.0000]"   smoothness_se="(0.0073, 0.0000]"   
   (   1)));   % perimeter_worst="(111.00000, 128.1000]"   smoothness_se="(0.0073, 0.0000]"   
}

potential ( fractal_dimension_worst | concavity_worst   ) {
   data = 
   ((   0.000931099   0.999069)   % concavity_worst="(0.00, 0.4000]"   
   (   0.156716   0.843284));   % concavity_worst="(0.000, 0.5000]"   
}

potential ( diagnosis | smoothness_se   perimeter_worst   ) {
   data = 
   (((   1)   % perimeter_worst="(104.00000, 111.0000]"   smoothness_se="(-0.0074, 0.0050]"   
   (   1))   % perimeter_worst="(111.00000, 128.1000]"   smoothness_se="(-0.0074, 0.0050]"   
   ((   1)   % perimeter_worst="(104.00000, 111.0000]"   smoothness_se="(0.0053, 0.0070]"   
   (   1))   % perimeter_worst="(111.00000, 128.1000]"   smoothness_se="(0.0053, 0.0070]"   
   ((   1)   % perimeter_worst="(104.00000, 111.0000]"   smoothness_se="(0.0073, 0.0000]"   
   (   1)));   % perimeter_worst="(111.00000, 128.1000]"   smoothness_se="(0.0073, 0.0000]"   
}


