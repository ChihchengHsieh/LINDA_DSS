
net {
  name = unnamedBN;
  software = "aGrUM 0.18.2";
  node_size = (50 50);
}

node radius_mean {
   states = ("(14.0000, 18.5000]" );
   label = "radius_mean";
   ID = "radius_mean";
}

node texture_mean {
   states = ("(18.2799, 22.1000]" "(22.0000, 23.1000]" );
   label = "texture_mean";
   ID = "texture_mean";
}

node perimeter_mean {
   states = ("(116.00000, 121.8000]" "(95.00000, 116.6000]" );
   label = "perimeter_mean";
   ID = "perimeter_mean";
}

node area_mean {
   states = ("(655.00000, 987.0000]" "(987.000000, 1067.8000]" );
   label = "area_mean";
   ID = "area_mean";
}

node smoothness_mean {
   states = ("(0.0000, 0.0000]" "(0.0000, 0.0900]" );
   label = "smoothness_mean";
   ID = "smoothness_mean";
}

node compactness_mean {
   states = ("(0.00, 0.0000]" "(0.0279, 0.0000]" );
   label = "compactness_mean";
   ID = "compactness_mean";
}

node concavity_mean {
   states = ("(0.0269, 0.1000]" );
   label = "concavity_mean";
   ID = "concavity_mean";
}

node concave points_mean {
   states = ("(0.00000, 0.0500]" "(0.00000, 0.0600]" );
   label = "concave points_mean";
   ID = "concave points_mean";
}

node symmetry_mean {
   states = ("(0.00000, 0.1900]" );
   label = "symmetry_mean";
   ID = "symmetry_mean";
}

node fractal_dimension_mean {
   states = ("(0.0000, 0.0500]" "(0.00000, 0.0500]" );
   label = "fractal_dimension_mean";
   ID = "fractal_dimension_mean";
}

node radius_se {
   states = ("(0.000, 0.5000]" "(0.000, 0.8000]" );
   label = "radius_se";
   ID = "radius_se";
}

node texture_se {
   states = ("(0.000, 0.8000]" "(0.000, 1.2000]" );
   label = "texture_se";
   ID = "texture_se";
}

node perimeter_se {
   states = ("(2.000, 3.5000]" "(3.000, 4.1000]" "(4.000, 6.2000]" );
   label = "perimeter_se";
   ID = "perimeter_se";
}

node area_se {
   states = ("(109.00000, 120.4000]" "(16.000, 68.4000]" "(68.00000, 109.9000]" );
   label = "area_se";
   ID = "area_se";
}

node smoothness_se {
   states = ("(-0.0077, 0.0000]" "(0.00000, 0.0000]" "(0.000000, 0.0070]" );
   label = "smoothness_se";
   ID = "smoothness_se";
}

node compactness_se {
   states = ("(0.000000, 0.0140]" "(0.0047, 0.0100]" "(0.0143, 0.0240]" );
   label = "compactness_se";
   ID = "compactness_se";
}

node concavity_se {
   states = ("(-0.0051, 0.0100]" "(0.00000, 0.0400]" );
   label = "concavity_se";
   ID = "concavity_se";
}

node concave points_se {
   states = ("(-0.0033, 0.0080]" "(0.0087, 0.0100]" );
   label = "concave points_se";
   ID = "concave points_se";
}

node symmetry_se {
   states = ("(0.0000, 0.0000]" "(0.0000, 0.0200]" "(0.00000, 0.0200]" );
   label = "symmetry_se";
   ID = "symmetry_se";
}

node fractal_dimension_se {
   states = ("(-0.0089, 0.0020]" "(0.0022, 0.0020]" "(0.0025, 0.0030]" );
   label = "fractal_dimension_se";
   ID = "fractal_dimension_se";
}

node radius_worst {
   states = ("(17.0000, 19.3000]" "(19.0000, 21.6000]" "(21.0000, 22.0000]" );
   label = "radius_worst";
   ID = "radius_worst";
}

node texture_worst {
   states = ("(21.0000, 25.0000]" "(25.0000, 25.2000]" "(25.0000, 27.0000]" );
   label = "texture_worst";
   ID = "texture_worst";
}

node perimeter_worst {
   states = ("(121.0000, 127.4000]" "(127.00000, 144.5000]" );
   label = "perimeter_worst";
   ID = "perimeter_worst";
}

node area_worst {
   states = ("(1180.000000, 1514.8000]" "(780.000000, 1180.8000]" );
   label = "area_worst";
   ID = "area_worst";
}

node smoothness_worst {
   states = ("(0.000, 0.1000]" "(0.0860, 0.1000]" );
   label = "smoothness_worst";
   ID = "smoothness_worst";
}

node compactness_worst {
   states = ("(0.000, 0.2000]" "(0.0000, 0.1000]" );
   label = "compactness_worst";
   ID = "compactness_worst";
}

node concavity_worst {
   states = ("(0.000, 0.3000]" "(0.0740, 0.2000]" );
   label = "concavity_worst";
   ID = "concavity_worst";
}

node concave points_worst {
   states = ("(0.000, 0.1000]" "(0.0730, 0.1000]" );
   label = "concave points_worst";
   ID = "concave points_worst";
}

node symmetry_worst {
   states = ("(0.000, 0.3000]" );
   label = "symmetry_worst";
   ID = "symmetry_worst";
}

node fractal_dimension_worst {
   states = ("(0.00000, 0.0600]" "(0.00000, 0.0700]" );
   label = "fractal_dimension_worst";
   ID = "fractal_dimension_worst";
}

node diagnosis {
   states = (Yes );
   label = "diagnosis";
   ID = "diagnosis";
}

potential ( radius_mean | smoothness_se   perimeter_mean   ) {
   data = 
   (((   1)   % perimeter_mean="(116.00000, 121.8000]"   smoothness_se="(-0.0077, 0.0000]"   
   (   1))   % perimeter_mean="(95.00000, 116.6000]"   smoothness_se="(-0.0077, 0.0000]"   
   ((   1)   % perimeter_mean="(116.00000, 121.8000]"   smoothness_se="(0.00000, 0.0000]"   
   (   1))   % perimeter_mean="(95.00000, 116.6000]"   smoothness_se="(0.00000, 0.0000]"   
   ((   1)   % perimeter_mean="(116.00000, 121.8000]"   smoothness_se="(0.000000, 0.0070]"   
   (   1)));   % perimeter_mean="(95.00000, 116.6000]"   smoothness_se="(0.000000, 0.0070]"   
}

potential ( texture_mean | concave points_mean   ) {
   data = 
   ((   0.998901   0.0010989)   % concave points_mean="(0.00000, 0.0500]"   
   (   0.983221   0.0167785));   % concave points_mean="(0.00000, 0.0600]"   
}

potential ( perimeter_mean | concave points_mean   ) {
   data = 
   ((   0.0010989   0.998901)   % concave points_mean="(0.00000, 0.0500]"   
   (   0.0302013   0.969799));   % concave points_mean="(0.00000, 0.0600]"   
}

potential ( area_mean | concave points_mean   ) {
   data = 
   ((   0.998901   0.0010989)   % concave points_mean="(0.00000, 0.0500]"   
   (   0.956376   0.0436242));   % concave points_mean="(0.00000, 0.0600]"   
}

potential ( smoothness_mean | concave points_mean   ) {
   data = 
   ((   0.998901   0.0010989)   % concave points_mean="(0.00000, 0.0500]"   
   (   0.92953   0.0704698));   % concave points_mean="(0.00000, 0.0600]"   
}

potential ( compactness_mean | concave points_mean   ) {
   data = 
   ((   0.0010989   0.998901)   % concave points_mean="(0.00000, 0.0500]"   
   (   0.057047   0.942953));   % concave points_mean="(0.00000, 0.0600]"   
}

potential ( concavity_mean | smoothness_se   perimeter_mean   ) {
   data = 
   (((   1)   % perimeter_mean="(116.00000, 121.8000]"   smoothness_se="(-0.0077, 0.0000]"   
   (   1))   % perimeter_mean="(95.00000, 116.6000]"   smoothness_se="(-0.0077, 0.0000]"   
   ((   1)   % perimeter_mean="(116.00000, 121.8000]"   smoothness_se="(0.00000, 0.0000]"   
   (   1))   % perimeter_mean="(95.00000, 116.6000]"   smoothness_se="(0.00000, 0.0000]"   
   ((   1)   % perimeter_mean="(116.00000, 121.8000]"   smoothness_se="(0.000000, 0.0070]"   
   (   1)));   % perimeter_mean="(95.00000, 116.6000]"   smoothness_se="(0.000000, 0.0070]"   
}

potential ( concave points_mean | fractal_dimension_mean   ) {
   data = 
   ((   0.998765   0.00123457)   % fractal_dimension_mean="(0.0000, 0.0500]"   
   (   0.253769   0.746231));   % fractal_dimension_mean="(0.00000, 0.0500]"   
}

potential ( symmetry_mean | smoothness_se   perimeter_mean   ) {
   data = 
   (((   1)   % perimeter_mean="(116.00000, 121.8000]"   smoothness_se="(-0.0077, 0.0000]"   
   (   1))   % perimeter_mean="(95.00000, 116.6000]"   smoothness_se="(-0.0077, 0.0000]"   
   ((   1)   % perimeter_mean="(116.00000, 121.8000]"   smoothness_se="(0.00000, 0.0000]"   
   (   1))   % perimeter_mean="(95.00000, 116.6000]"   smoothness_se="(0.00000, 0.0000]"   
   ((   1)   % perimeter_mean="(116.00000, 121.8000]"   smoothness_se="(0.000000, 0.0070]"   
   (   1)));   % perimeter_mean="(95.00000, 116.6000]"   smoothness_se="(0.000000, 0.0070]"   
}

potential ( fractal_dimension_mean | perimeter_se   ) {
   data = 
   ((   0.999033   0.000967118)   % perimeter_se="(2.000, 3.5000]"   
   (   0.189373   0.810627)   % perimeter_se="(3.000, 4.1000]"   
   (   0.977273   0.0227273));   % perimeter_se="(4.000, 6.2000]"   
}

potential ( radius_se | perimeter_se   fractal_dimension_mean   ) {
   data = 
   (((   0.000484027   0.999516)   % fractal_dimension_mean="(0.0000, 0.0500]"   perimeter_se="(2.000, 3.5000]"   
   (   0.5   0.5))   % fractal_dimension_mean="(0.00000, 0.0500]"   perimeter_se="(2.000, 3.5000]"   
   ((   0.133094   0.866906)   % fractal_dimension_mean="(0.0000, 0.0500]"   perimeter_se="(3.000, 4.1000]"   
   (   0.99916   0.000840336))   % fractal_dimension_mean="(0.00000, 0.0500]"   perimeter_se="(3.000, 4.1000]"   
   ((   0.0116279   0.988372)   % fractal_dimension_mean="(0.0000, 0.0500]"   perimeter_se="(4.000, 6.2000]"   
   (   0.5   0.5)));   % fractal_dimension_mean="(0.00000, 0.0500]"   perimeter_se="(4.000, 6.2000]"   
}

potential ( texture_se | radius_se   perimeter_se   ) {
   data = 
   (((   0.5   0.5)   % perimeter_se="(2.000, 3.5000]"   radius_se="(0.000, 0.5000]"   
   (   0.999184   0.000815661)   % perimeter_se="(3.000, 4.1000]"   radius_se="(0.000, 0.5000]"   
   (   0.5   0.5))   % perimeter_se="(4.000, 6.2000]"   radius_se="(0.000, 0.5000]"   
   ((   0.999516   0.000484027)   % perimeter_se="(2.000, 3.5000]"   radius_se="(0.000, 0.8000]"   
   (   0.797521   0.202479)   % perimeter_se="(3.000, 4.1000]"   radius_se="(0.000, 0.8000]"   
   (   0.988372   0.0116279)));   % perimeter_se="(4.000, 6.2000]"   radius_se="(0.000, 0.8000]"   
}

potential ( perimeter_se | area_se   ) {
   data = 
   ((   0.833333   0.0833333   0.0833333)   % area_se="(109.00000, 120.4000]"   
   (   0.0308333   0.915833   0.0533333)   % area_se="(16.000, 68.4000]"   
   (   0.998672   0.000664011   0.000664011));   % area_se="(68.00000, 109.9000]"   
}

potential (area_se) {
   data = (  0.00441501 0.441501 0.554084);
}

potential ( smoothness_se | area_se   compactness_se   ) {
   data = 
   (((   0.933333   0.0333333   0.0333333)   % compactness_se="(0.000000, 0.0140]"   area_se="(109.00000, 120.4000]"   
   (   0.333333   0.333333   0.333333)   % compactness_se="(0.0047, 0.0100]"   area_se="(109.00000, 120.4000]"   
   (   0.333333   0.333333   0.333333))   % compactness_se="(0.0143, 0.0240]"   area_se="(109.00000, 120.4000]"   
   ((   0.999444   0.000278242   0.000278242)   % compactness_se="(0.000000, 0.0140]"   area_se="(16.000, 68.4000]"   
   (   0.333333   0.333333   0.333333)   % compactness_se="(0.0047, 0.0100]"   area_se="(16.000, 68.4000]"   
   (   0.333333   0.333333   0.333333))   % compactness_se="(0.0143, 0.0240]"   area_se="(16.000, 68.4000]"   
   ((   0.703463   0.235931   0.0606061)   % compactness_se="(0.000000, 0.0140]"   area_se="(68.00000, 109.9000]"   
   (   0.000257003   0.999486   0.000257003)   % compactness_se="(0.0047, 0.0100]"   area_se="(68.00000, 109.9000]"   
   (   0.00606061   0.987879   0.00606061)));   % compactness_se="(0.0143, 0.0240]"   area_se="(68.00000, 109.9000]"   
}

potential ( compactness_se | area_se   ) {
   data = 
   ((   0.833333   0.0833333   0.0833333)   % area_se="(109.00000, 120.4000]"   
   (   0.998333   0.000833333   0.000833333)   % area_se="(16.000, 68.4000]"   
   (   0.102258   0.861222   0.0365206));   % area_se="(68.00000, 109.9000]"   
}

potential ( concavity_se | compactness_se   ) {
   data = 
   ((   0.998899   0.00110132)   % compactness_se="(0.000000, 0.0140]"   
   (   0.0635104   0.93649)   % compactness_se="(0.0047, 0.0100]"   
   (   0.973684   0.0263158));   % compactness_se="(0.0143, 0.0240]"   
}

potential ( concave points_se | concavity_se   ) {
   data = 
   ((   0.998498   0.0015015)   % concavity_se="(-0.0051, 0.0100]"   
   (   0.0756458   0.924354));   % concavity_se="(0.00000, 0.0400]"   
}

potential ( symmetry_se | concave points_se   ) {
   data = 
   ((   0.000944287   0.998111   0.000944287)   % concave points_se="(-0.0033, 0.0080]"   
   (   0.901726   0.0730412   0.0252324));   % concave points_se="(0.0087, 0.0100]"   
}

potential ( fractal_dimension_se | symmetry_se   concavity_mean   ) {
   data = 
   (((   0.0715686   0.892157   0.0362745))   % concavity_mean="(0.0269, 0.1000]"   symmetry_se="(0.0000, 0.0000]"   
   ((   0.998801   0.00059952   0.00059952))   % concavity_mean="(0.0269, 0.1000]"   symmetry_se="(0.0000, 0.0200]"   
   ((   0.933333   0.0333333   0.0333333)));   % concavity_mean="(0.0269, 0.1000]"   symmetry_se="(0.00000, 0.0200]"   
}

potential ( radius_worst | fractal_dimension_se   ) {
   data = 
   ((   0.998868   0.000565931   0.000565931)   % fractal_dimension_se="(-0.0089, 0.0020]"   
   (   0.0405702   0.948465   0.0109649)   % fractal_dimension_se="(0.0022, 0.0020]"   
   (   0.948718   0.025641   0.025641));   % fractal_dimension_se="(0.0025, 0.0030]"   
}

potential ( texture_worst | radius_worst   symmetry_mean   ) {
   data = 
   (((   0.998912   0.000543774   0.000543774))   % symmetry_mean="(0.00000, 0.1900]"   radius_worst="(17.0000, 19.3000]"   
   ((   0.10496   0.852364   0.0426759))   % symmetry_mean="(0.00000, 0.1900]"   radius_worst="(19.0000, 21.6000]"   
   ((   0.833333   0.0833333   0.0833333)));   % symmetry_mean="(0.00000, 0.1900]"   radius_worst="(21.0000, 22.0000]"   
}

potential ( perimeter_worst | texture_worst   area_worst   ) {
   data = 
   (((   0.5   0.5)   % area_worst="(1180.000000, 1514.8000]"   texture_worst="(21.0000, 25.0000]"   
   (   0.999613   0.000387297))   % area_worst="(780.000000, 1180.8000]"   texture_worst="(21.0000, 25.0000]"   
   ((   0.998721   0.00127877)   % area_worst="(1180.000000, 1514.8000]"   texture_worst="(25.0000, 25.2000]"   
   (   0.645631   0.354369))   % area_worst="(780.000000, 1180.8000]"   texture_worst="(25.0000, 25.2000]"   
   ((   0.5   0.5)   % area_worst="(1180.000000, 1514.8000]"   texture_worst="(25.0000, 27.0000]"   
   (   0.98   0.02)));   % area_worst="(780.000000, 1180.8000]"   texture_worst="(25.0000, 27.0000]"   
}

potential ( area_worst | texture_worst   ) {
   data = 
   ((   0.000773994   0.999226)   % texture_worst="(21.0000, 25.0000]"   
   (   0.791498   0.208502)   % texture_worst="(25.0000, 25.2000]"   
   (   0.0384615   0.961538));   % texture_worst="(25.0000, 27.0000]"   
}

potential ( smoothness_worst | area_worst   ) {
   data = 
   ((   0.858779   0.141221)   % area_worst="(1180.000000, 1514.8000]"   
   (   0.00105708   0.998943));   % area_worst="(780.000000, 1180.8000]"   
}

potential ( compactness_worst | smoothness_worst   ) {
   data = 
   ((   0.818584   0.181416)   % smoothness_worst="(0.000, 0.1000]"   
   (   0.00101833   0.998982));   % smoothness_worst="(0.0860, 0.1000]"   
}

potential ( concavity_worst | compactness_worst   ) {
   data = 
   ((   0.715054   0.284946)   % compactness_worst="(0.000, 0.2000]"   
   (   0.000978474   0.999022));   % compactness_worst="(0.0000, 0.1000]"   
}

potential ( concave points_worst | concavity_worst   fractal_dimension_worst   ) {
   data = 
   (((   0.0779817   0.922018)   % fractal_dimension_worst="(0.00000, 0.0600]"   concavity_worst="(0.000, 0.3000]"   
   (   0.02   0.98))   % fractal_dimension_worst="(0.00000, 0.0700]"   concavity_worst="(0.000, 0.3000]"   
   ((   0.000465983   0.999534)   % fractal_dimension_worst="(0.00000, 0.0600]"   concavity_worst="(0.0740, 0.2000]"   
   (   0.5   0.5)));   % fractal_dimension_worst="(0.00000, 0.0700]"   concavity_worst="(0.0740, 0.2000]"   
}

potential ( symmetry_worst | smoothness_se   perimeter_mean   ) {
   data = 
   (((   1)   % perimeter_mean="(116.00000, 121.8000]"   smoothness_se="(-0.0077, 0.0000]"   
   (   1))   % perimeter_mean="(95.00000, 116.6000]"   smoothness_se="(-0.0077, 0.0000]"   
   ((   1)   % perimeter_mean="(116.00000, 121.8000]"   smoothness_se="(0.00000, 0.0000]"   
   (   1))   % perimeter_mean="(95.00000, 116.6000]"   smoothness_se="(0.00000, 0.0000]"   
   ((   1)   % perimeter_mean="(116.00000, 121.8000]"   smoothness_se="(0.000000, 0.0070]"   
   (   1)));   % perimeter_mean="(95.00000, 116.6000]"   smoothness_se="(0.000000, 0.0070]"   
}

potential ( fractal_dimension_worst | concavity_worst   ) {
   data = 
   ((   0.813433   0.186567)   % concavity_worst="(0.000, 0.3000]"   
   (   0.999069   0.000931099));   % concavity_worst="(0.0740, 0.2000]"   
}

potential ( diagnosis | smoothness_se   perimeter_mean   ) {
   data = 
   (((   1)   % perimeter_mean="(116.00000, 121.8000]"   smoothness_se="(-0.0077, 0.0000]"   
   (   1))   % perimeter_mean="(95.00000, 116.6000]"   smoothness_se="(-0.0077, 0.0000]"   
   ((   1)   % perimeter_mean="(116.00000, 121.8000]"   smoothness_se="(0.00000, 0.0000]"   
   (   1))   % perimeter_mean="(95.00000, 116.6000]"   smoothness_se="(0.00000, 0.0000]"   
   ((   1)   % perimeter_mean="(116.00000, 121.8000]"   smoothness_se="(0.000000, 0.0070]"   
   (   1)));   % perimeter_mean="(95.00000, 116.6000]"   smoothness_se="(0.000000, 0.0070]"   
}


