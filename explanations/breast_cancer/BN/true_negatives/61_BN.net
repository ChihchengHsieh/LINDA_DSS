
net {
  name = unnamedBN;
  software = "aGrUM 0.18.2";
  node_size = (50 50);
}

node radius_mean {
   states = ("(7.000, 10.0000]" );
   label = "radius_mean";
   ID = "radius_mean";
}

node texture_mean {
   states = ("(12.0000, 16.3000]" "(16.0000, 17.2000]" );
   label = "texture_mean";
   ID = "texture_mean";
}

node perimeter_mean {
   states = ("(46.0000, 62.8000]" "(62.0000, 66.9000]" );
   label = "perimeter_mean";
   ID = "perimeter_mean";
}

node area_mean {
   states = ("(147.2600, 366.7000]" "(366.00000, 420.5000]" );
   label = "area_mean";
   ID = "area_mean";
}

node smoothness_mean {
   states = ("(0.00000, 0.0700]" "(0.00000, 0.0800]" );
   label = "smoothness_mean";
   ID = "smoothness_mean";
}

node compactness_mean {
   states = ("(0.0000, 0.0400]" "(0.00000, 0.0500]" );
   label = "compactness_mean";
   ID = "compactness_mean";
}

node concavity_mean {
   states = ("(-0.0063, 0.0400]" );
   label = "concavity_mean";
   ID = "concavity_mean";
}

node concave points_mean {
   states = ("(-0.0095, 0.0080]" "(0.00000, 0.0100]" "(0.0082, 0.0100]" );
   label = "concave points_mean";
   ID = "concave points_mean";
}

node symmetry_mean {
   states = ("(0.00000, 0.1700]" );
   label = "symmetry_mean";
   ID = "symmetry_mean";
}

node fractal_dimension_mean {
   states = ("(0.00000, 0.0600]" "(0.00000, 0.0700]" );
   label = "fractal_dimension_mean";
   ID = "fractal_dimension_mean";
}

node radius_se {
   states = ("(0.000, 0.1000]" "(0.000, 0.4000]" );
   label = "radius_se";
   ID = "radius_se";
}

node texture_se {
   states = ("(0.000, 1.3000]" "(1.000, 1.3000]" "(1.000, 1.7000]" );
   label = "texture_se";
   ID = "texture_se";
}

node perimeter_se {
   states = ("(0.00, 1.1000]" "(1.000, 1.6000]" "(1.000, 3.2000]" );
   label = "perimeter_se";
   ID = "perimeter_se";
}

node area_se {
   states = ("(56.0000, 62.4000]" "(7.00, 9.0000]" "(9.000, 56.9000]" );
   label = "area_se";
   ID = "area_se";
}

node smoothness_se {
   states = ("(-0.0053, 0.0070]" "(0.0074, 0.0090]" "(0.0093, 0.0000]" );
   label = "smoothness_se";
   ID = "smoothness_se";
}

node compactness_se {
   states = ("(-0.0059, 0.0090]" "(0.0093, 0.0100]" );
   label = "compactness_se";
   ID = "compactness_se";
}

node concavity_se {
   states = ("(-0.0072, 0.0000]" );
   label = "concavity_se";
   ID = "concavity_se";
}

node concave points_se {
   states = ("(-0.0083, 0.0020]" "(0.0027, 0.0000]" );
   label = "concave points_se";
   ID = "concave points_se";
}

node symmetry_se {
   states = ("(0.0000, 0.0000]" "(0.0000, 0.0200]" "(0.00000, 0.0200]" );
   label = "symmetry_se";
   ID = "symmetry_se";
}

node fractal_dimension_se {
   states = ("(-0.0089, 0.0010]" "(0.0019, 0.0020]" "(0.0023, 0.0000]" );
   label = "fractal_dimension_se";
   ID = "fractal_dimension_se";
}

node radius_worst {
   states = ("(11.0000, 11.6000]" "(8.00, 8.9000]" "(8.0000, 11.4000]" );
   label = "radius_worst";
   ID = "radius_worst";
}

node texture_worst {
   states = ("(16.0000, 20.0000]" "(20.0000, 20.2000]" "(20.0000, 22.0000]" );
   label = "texture_worst";
   ID = "texture_worst";
}

node perimeter_worst {
   states = ("(56.000, 62.0000]" "(62.000, 75.0000]" );
   label = "perimeter_worst";
   ID = "perimeter_worst";
}

node area_worst {
   states = ("(189.2600, 247.8000]" "(247.00000, 612.8000]" );
   label = "area_worst";
   ID = "area_worst";
}

node smoothness_worst {
   states = ("(0.0000, 0.1000]" "(0.0740, 0.0900]" );
   label = "smoothness_worst";
   ID = "smoothness_worst";
}

node compactness_worst {
   states = ("(0.0000, 0.1000]" "(0.0289, 0.0500]" );
   label = "compactness_worst";
   ID = "compactness_worst";
}

node concavity_worst {
   states = ("(-0.0085, 0.0100]" "(0.0000, 0.1000]" );
   label = "concavity_worst";
   ID = "concavity_worst";
}

node concave points_worst {
   states = ("(-0.0084, 0.0100]" "(0.0000, 0.0000]" );
   label = "concave points_worst";
   ID = "concave points_worst";
}

node symmetry_worst {
   states = ("(0.00, 0.0000]" "(0.00, 0.3000]" );
   label = "symmetry_worst";
   ID = "symmetry_worst";
}

node fractal_dimension_worst {
   states = ("(0.00000, 0.0700]" "(0.00000, 0.0800]" );
   label = "fractal_dimension_worst";
   ID = "fractal_dimension_worst";
}

node diagnosis {
   states = (No );
   label = "diagnosis";
   ID = "diagnosis";
}

potential ( radius_mean | compactness_worst   ) {
   data = 
   ((   1)   % compactness_worst="(0.0000, 0.1000]"   
   (   1));   % compactness_worst="(0.0289, 0.0500]"   
}

potential ( texture_mean | radius_mean   ) {
   data = 
   ((   0.995033   0.00496689));   % radius_mean="(7.000, 10.0000]"   
}

potential ( perimeter_mean | concave points_mean   ) {
   data = 
   ((   0.971616   0.0283843)   % concave points_mean="(-0.0095, 0.0080]"   
   (   0.95   0.05)   % concave points_mean="(0.00000, 0.0100]"   
   (   0.99925   0.000749625));   % concave points_mean="(0.0082, 0.0100]"   
}

potential ( area_mean | concave points_mean   ) {
   data = 
   ((   0.958515   0.0414847)   % concave points_mean="(-0.0095, 0.0080]"   
   (   0.95   0.05)   % concave points_mean="(0.00000, 0.0100]"   
   (   0.99925   0.000749625));   % concave points_mean="(0.0082, 0.0100]"   
}

potential ( smoothness_mean | concave points_mean   ) {
   data = 
   ((   0.932314   0.0676856)   % concave points_mean="(-0.0095, 0.0080]"   
   (   0.95   0.05)   % concave points_mean="(0.00000, 0.0100]"   
   (   0.99925   0.000749625));   % concave points_mean="(0.0082, 0.0100]"   
}

potential ( compactness_mean | concave points_mean   ) {
   data = 
   ((   0.945415   0.0545852)   % concave points_mean="(-0.0095, 0.0080]"   
   (   0.95   0.05)   % concave points_mean="(0.00000, 0.0100]"   
   (   0.99925   0.000749625));   % concave points_mean="(0.0082, 0.0100]"   
}

potential ( concavity_mean | compactness_worst   ) {
   data = 
   ((   1)   % compactness_worst="(0.0000, 0.1000]"   
   (   1));   % compactness_worst="(0.0289, 0.0500]"   
}

potential ( concave points_mean | radius_se   ) {
   data = 
   ((   0.743089   0.0308943   0.226016)   % radius_se="(0.000, 0.1000]"   
   (   0.000835422   0.000835422   0.998329));   % radius_se="(0.000, 0.4000]"   
}

potential ( symmetry_mean | compactness_worst   ) {
   data = 
   ((   1)   % compactness_worst="(0.0000, 0.1000]"   
   (   1));   % compactness_worst="(0.0289, 0.0500]"   
}

potential ( fractal_dimension_mean | radius_se   concave points_mean   ) {
   data = 
   (((   0.998906   0.00109409)   % concave points_mean="(-0.0095, 0.0080]"   radius_se="(0.000, 0.1000]"   
   (   0.973684   0.0263158)   % concave points_mean="(0.00000, 0.0100]"   radius_se="(0.000, 0.1000]"   
   (   0.694245   0.305755))   % concave points_mean="(0.0082, 0.0100]"   radius_se="(0.000, 0.1000]"   
   ((   0.5   0.5)   % concave points_mean="(-0.0095, 0.0080]"   radius_se="(0.000, 0.4000]"   
   (   0.5   0.5)   % concave points_mean="(0.00000, 0.0100]"   radius_se="(0.000, 0.4000]"   
   (   0.999582   0.00041841)));   % concave points_mean="(0.0082, 0.0100]"   radius_se="(0.000, 0.4000]"   
}

potential ( radius_se | texture_se   ) {
   data = 
   ((   0.878223   0.121777)   % texture_se="(0.000, 1.3000]"   
   (   0.000919118   0.999081)   % texture_se="(1.000, 1.3000]"   
   (   0.0384615   0.961538));   % texture_se="(1.000, 1.7000]"   
}

potential ( texture_se | perimeter_se   ) {
   data = 
   ((   0.949137   0.017257   0.0336058)   % perimeter_se="(0.00, 1.1000]"   
   (   0.000648508   0.998703   0.000648508)   % perimeter_se="(1.000, 1.6000]"   
   (   0.0133333   0.973333   0.0133333));   % perimeter_se="(1.000, 3.2000]"   
}

potential ( perimeter_se | concave points_se   ) {
   data = 
   ((   0.696106   0.25736   0.0465337)   % concave points_se="(-0.0083, 0.0020]"   
   (   0.00131752   0.997365   0.00131752));   % concave points_se="(0.0027, 0.0000]"   
}

potential ( area_se | perimeter_se   concave points_se   ) {
   data = 
   (((   0.000454752   0.99909   0.000454752)   % concave points_se="(-0.0083, 0.0020]"   perimeter_se="(0.00, 1.1000]"   
   (   0.333333   0.333333   0.333333))   % concave points_se="(0.0027, 0.0000]"   perimeter_se="(0.00, 1.1000]"   
   ((   0.0233702   0.0455105   0.931119)   % concave points_se="(-0.0083, 0.0020]"   perimeter_se="(1.000, 1.6000]"   
   (   0.000440335   0.000440335   0.999119))   % concave points_se="(0.0027, 0.0000]"   perimeter_se="(1.000, 1.6000]"   
   ((   0.00680272   0.986395   0.00680272)   % concave points_se="(-0.0083, 0.0020]"   perimeter_se="(1.000, 3.2000]"   
   (   0.333333   0.333333   0.333333)));   % concave points_se="(0.0027, 0.0000]"   perimeter_se="(1.000, 3.2000]"   
}

potential ( smoothness_se | area_se   concave points_se   ) {
   data = 
   (((   0.904762   0.047619   0.047619)   % concave points_se="(-0.0083, 0.0020]"   area_se="(56.0000, 62.4000]"   
   (   0.333333   0.333333   0.333333))   % concave points_se="(0.0027, 0.0000]"   area_se="(56.0000, 62.4000]"   
   ((   0.999159   0.000420345   0.000420345)   % concave points_se="(-0.0083, 0.0020]"   area_se="(7.00, 9.0000]"   
   (   0.333333   0.333333   0.333333))   % concave points_se="(0.0027, 0.0000]"   area_se="(7.00, 9.0000]"   
   ((   0.309618   0.665349   0.0250329)   % concave points_se="(-0.0083, 0.0020]"   area_se="(9.000, 56.9000]"   
   (   0.000440335   0.999119   0.000440335)));   % concave points_se="(0.0027, 0.0000]"   area_se="(9.000, 56.9000]"   
}

potential ( compactness_se | concave points_se   smoothness_se   ) {
   data = 
   (((   0.99943   0.000570125)   % smoothness_se="(-0.0053, 0.0070]"   concave points_se="(-0.0083, 0.0020]"   
   (   0.784024   0.215976)   % smoothness_se="(0.0074, 0.0090]"   concave points_se="(-0.0083, 0.0020]"   
   (   0.928571   0.0714286))   % smoothness_se="(0.0093, 0.0000]"   concave points_se="(-0.0083, 0.0020]"   
   ((   0.5   0.5)   % smoothness_se="(-0.0053, 0.0070]"   concave points_se="(0.0027, 0.0000]"   
   (   0.999339   0.000660502)   % smoothness_se="(0.0074, 0.0090]"   concave points_se="(0.0027, 0.0000]"   
   (   0.5   0.5)));   % smoothness_se="(0.0093, 0.0000]"   concave points_se="(0.0027, 0.0000]"   
}

potential ( concavity_se | compactness_worst   ) {
   data = 
   ((   1)   % compactness_worst="(0.0000, 0.1000]"   
   (   1));   % compactness_worst="(0.0289, 0.0500]"   
}

potential ( concave points_se | symmetry_se   ) {
   data = 
   ((   0.05   0.95)   % symmetry_se="(0.0000, 0.0000]"   
   (   0.00147059   0.998529)   % symmetry_se="(0.0000, 0.0200]"   
   (   0.945144   0.0548561));   % symmetry_se="(0.00000, 0.0200]"   
}

potential ( symmetry_se | fractal_dimension_se   ) {
   data = 
   ((   0.0159272   0.036405   0.947668)   % fractal_dimension_se="(-0.0089, 0.0010]"   
   (   0.00108578   0.997828   0.00108578)   % fractal_dimension_se="(0.0019, 0.0020]"   
   (   0.025641   0.948718   0.025641));   % fractal_dimension_se="(0.0023, 0.0000]"   
}

potential (fractal_dimension_se) {
   data = (  0.646799 0.338852 0.0143488);
}

potential ( radius_worst | fractal_dimension_se   ) {
   data = 
   ((   0.000568828   0.998862   0.000568828)   % fractal_dimension_se="(-0.0089, 0.0010]"   
   (   0.0108578   0.0304017   0.95874)   % fractal_dimension_se="(0.0019, 0.0020]"   
   (   0.025641   0.948718   0.025641));   % fractal_dimension_se="(0.0023, 0.0000]"   
}

potential ( texture_worst | radius_worst   ) {
   data = 
   ((   0.833333   0.0833333   0.0833333)   % radius_worst="(11.0000, 11.6000]"   
   (   0.998902   0.000549149   0.000549149)   % radius_worst="(8.00, 8.9000]"   
   (   0.123164   0.835028   0.0418079));   % radius_worst="(8.0000, 11.4000]"   
}

potential ( perimeter_worst | texture_worst   ) {
   data = 
   ((   0.999226   0.000773994)   % texture_worst="(16.0000, 20.0000]"   
   (   0.912955   0.0870445)   % texture_worst="(20.0000, 20.2000]"   
   (   0.961538   0.0384615));   % texture_worst="(20.0000, 22.0000]"   
}

potential ( area_worst | texture_worst   perimeter_worst   ) {
   data = 
   (((   0.999613   0.000387297)   % perimeter_worst="(56.000, 62.0000]"   texture_worst="(16.0000, 20.0000]"   
   (   0.5   0.5))   % perimeter_worst="(62.000, 75.0000]"   texture_worst="(16.0000, 20.0000]"   
   ((   0.094235   0.905765)   % perimeter_worst="(56.000, 62.0000]"   texture_worst="(20.0000, 20.2000]"   
   (   0.988372   0.0116279))   % perimeter_worst="(62.000, 75.0000]"   texture_worst="(20.0000, 20.2000]"   
   ((   0.98   0.02)   % perimeter_worst="(56.000, 62.0000]"   texture_worst="(20.0000, 22.0000]"   
   (   0.5   0.5)));   % perimeter_worst="(62.000, 75.0000]"   texture_worst="(20.0000, 22.0000]"   
}

potential ( smoothness_worst | area_worst   ) {
   data = 
   ((   0.00107066   0.998929)   % area_worst="(189.2600, 247.8000]"   
   (   0.821168   0.178832));   % area_worst="(247.00000, 612.8000]"   
}

potential ( compactness_worst | smoothness_worst   ) {
   data = 
   ((   0.871681   0.128319)   % smoothness_worst="(0.0000, 0.1000]"   
   (   0.00101833   0.998982));   % smoothness_worst="(0.0740, 0.0900]"   
}

potential ( concavity_worst | compactness_worst   ) {
   data = 
   ((   0.227273   0.772727)   % compactness_worst="(0.0000, 0.1000]"   
   (   0.99901   0.000990099));   % compactness_worst="(0.0289, 0.0500]"   
}

potential ( concave points_worst | concavity_worst   ) {
   data = 
   ((   0.999051   0.000948767)   % concavity_worst="(-0.0085, 0.0100]"   
   (   0.88961   0.11039));   % concavity_worst="(0.0000, 0.1000]"   
}

potential ( symmetry_worst | fractal_dimension_worst   concavity_worst   ) {
   data = 
   (((   0.999525   0.000474834)   % concavity_worst="(-0.0085, 0.0100]"   fractal_dimension_worst="(0.00000, 0.0700]"   
   (   0.87594   0.12406))   % concavity_worst="(0.0000, 0.1000]"   fractal_dimension_worst="(0.00000, 0.0700]"   
   ((   0.5   0.5)   % concavity_worst="(-0.0085, 0.0100]"   fractal_dimension_worst="(0.00000, 0.0800]"   
   (   0.97619   0.0238095)));   % concavity_worst="(0.0000, 0.1000]"   fractal_dimension_worst="(0.00000, 0.0800]"   
}

potential ( fractal_dimension_worst | concave points_worst   concavity_worst   ) {
   data = 
   (((   0.999525   0.000474834)   % concavity_worst="(-0.0085, 0.0100]"   concave points_worst="(-0.0084, 0.0100]"   
   (   0.850365   0.149635))   % concavity_worst="(0.0000, 0.1000]"   concave points_worst="(-0.0084, 0.0100]"   
   ((   0.5   0.5)   % concavity_worst="(-0.0085, 0.0100]"   concave points_worst="(0.0000, 0.0000]"   
   (   0.970588   0.0294118)));   % concavity_worst="(0.0000, 0.1000]"   concave points_worst="(0.0000, 0.0000]"   
}

potential ( diagnosis | compactness_worst   ) {
   data = 
   ((   1)   % compactness_worst="(0.0000, 0.1000]"   
   (   1));   % compactness_worst="(0.0289, 0.0500]"   
}


