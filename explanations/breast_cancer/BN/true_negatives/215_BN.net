
net {
  name = unnamedBN;
  software = "aGrUM 0.17.0";
  node_size = (50 50);
}

node radius_mean {
   states = ("(8.0000, 27.2000]" );
   label = "radius_mean";
   ID = "radius_mean";
}

node texture_mean {
   states = ("(14.000, 34.0000]" "(34.000, 38.8000]" );
   label = "texture_mean";
   ID = "texture_mean";
}

node perimeter_mean {
   states = ("(163.00000, 188.4000]" "(62.00000, 163.4000]" );
   label = "perimeter_mean";
   ID = "perimeter_mean";
}

node area_mean {
   states = ("(1835.000000, 2235.5000]" "(197.8900, 1835.3000]" );
   label = "area_mean";
   ID = "area_mean";
}

node smoothness_mean {
   states = ("(0.000, 0.1000]" "(0.0750, 0.1000]" );
   label = "smoothness_mean";
   ID = "smoothness_mean";
}

node compactness_mean {
   states = ("(0.000, 0.3000]" "(0.0000, 0.2000]" );
   label = "compactness_mean";
   ID = "compactness_mean";
}

node concavity_mean {
   states = ("(0.0000, 0.4000]" );
   label = "concavity_mean";
   ID = "concavity_mean";
}

node concave points_mean {
   states = ("(-0.0059, 0.0000]" "(0.0000, 0.0900]" "(0.0000, 0.1000]" );
   label = "concave points_mean";
   ID = "concave points_mean";
}

node symmetry_mean {
   states = ("(0.00, 0.1000]" "(0.000, 0.2000]" );
   label = "symmetry_mean";
   ID = "symmetry_mean";
}

node fractal_dimension_mean {
   states = ("(0.0514, 0.0580]" "(0.0589, 0.0590]" "(0.0591, 0.0960]" );
   label = "fractal_dimension_mean";
   ID = "fractal_dimension_mean";
}

node radius_se {
   states = ("(0.000, 0.2000]" "(0.000, 2.8000]" );
   label = "radius_se";
   ID = "radius_se";
}

node texture_se {
   states = ("(0.000, 0.5000]" "(0.000, 2.2000]" "(2.000, 3.7000]" );
   label = "texture_se";
   ID = "texture_se";
}

node perimeter_se {
   states = ("(1.000, 8.3000]" "(8.0000, 21.8000]" );
   label = "perimeter_se";
   ID = "perimeter_se";
}

node area_se {
   states = ("(12.0000, 19.7000]" "(19.00000, 482.0000]" "(482.00000, 534.1000]" );
   label = "area_se";
   ID = "area_se";
}

node smoothness_se {
   states = ("(-0.0062, 0.0050]" "(0.0000, 0.0000]" "(0.0056, 0.0200]" );
   label = "smoothness_se";
   ID = "smoothness_se";
}

node compactness_se {
   states = ("(0.0000, 0.1000]" "(0.00000, 0.0600]" );
   label = "compactness_se";
   ID = "compactness_se";
}

node concavity_se {
   states = ("(0.0029, 0.2000]" );
   label = "concavity_se";
   ID = "concavity_se";
}

node concave points_se {
   states = ("(-0.0047, 0.0300]" );
   label = "concave points_se";
   ID = "concave points_se";
}

node symmetry_se {
   states = ("(-0.0017, 0.0200]" "(0.00000, 0.0200]" "(0.00000, 0.0500]" );
   label = "symmetry_se";
   ID = "symmetry_se";
}

node fractal_dimension_se {
   states = ("(-0.0088, 0.0010]" "(0.0013, 0.0060]" "(0.0064, 0.0090]" );
   label = "fractal_dimension_se";
   ID = "fractal_dimension_se";
}

node radius_worst {
   states = ("(11.0000, 16.4000]" "(16.0000, 33.4000]" "(33.0000, 35.2000]" );
   label = "radius_worst";
   ID = "radius_worst";
}

node texture_worst {
   states = ("(15.0000, 22.7000]" "(22.000, 31.0000]" "(31.000, 40.7000]" );
   label = "texture_worst";
   ID = "texture_worst";
}

node perimeter_worst {
   states = ("(105.00000, 144.5000]" "(144.00000, 236.5000]" );
   label = "perimeter_worst";
   ID = "perimeter_worst";
}

node area_worst {
   states = ("(257.00000, 829.3000]" "(829.000000, 3893.2000]" );
   label = "area_worst";
   ID = "area_worst";
}

node smoothness_worst {
   states = ("(0.000, 0.2000]" "(0.0750, 0.1000]" );
   label = "smoothness_worst";
   ID = "smoothness_worst";
}

node compactness_worst {
   states = ("(0.00, 0.0000]" "(0.00, 0.9000]" );
   label = "compactness_worst";
   ID = "compactness_worst";
}

node concavity_worst {
   states = ("(0.000, 1.1000]" "(0.0029, 0.2000]" );
   label = "concavity_worst";
   ID = "concavity_worst";
}

node concave points_worst {
   states = ("(0.000, 0.0000]" "(0.0009, 0.0800]" );
   label = "concave points_worst";
   ID = "concave points_worst";
}

node symmetry_worst {
   states = ("(0.000, 0.3000]" "(0.000, 0.6000]" );
   label = "symmetry_worst";
   ID = "symmetry_worst";
}

node fractal_dimension_worst {
   states = ("(0.0000, 0.1000]" );
   label = "fractal_dimension_worst";
   ID = "fractal_dimension_worst";
}

node diagnosis {
   states = (No Yes );
   label = "diagnosis";
   ID = "diagnosis";
}

potential ( radius_mean | diagnosis   ) {
   data = 
   ((   1)   % diagnosis=No   
   (   1));   % diagnosis=Yes   
}

potential ( texture_mean | diagnosis   ) {
   data = 
   ((   0.984848   0.0151515)   % diagnosis=No   
   (   0.998861   0.00113895));   % diagnosis=Yes   
}

potential ( perimeter_mean | diagnosis   ) {
   data = 
   ((   0.0272727   0.972727)   % diagnosis=No   
   (   0.00113895   0.998861));   % diagnosis=Yes   
}

potential ( area_mean | diagnosis   ) {
   data = 
   ((   0.0393939   0.960606)   % diagnosis=No   
   (   0.00113895   0.998861));   % diagnosis=Yes   
}

potential ( smoothness_mean | diagnosis   ) {
   data = 
   ((   0.0636364   0.936364)   % diagnosis=No   
   (   0.00113895   0.998861));   % diagnosis=Yes   
}

potential ( compactness_mean | diagnosis   ) {
   data = 
   ((   0.0515152   0.948485)   % diagnosis=No   
   (   0.00113895   0.998861));   % diagnosis=Yes   
}

potential ( concavity_mean | diagnosis   ) {
   data = 
   ((   1)   % diagnosis=No   
   (   1));   % diagnosis=Yes   
}

potential (concave points_mean) {
   data = (  0.252759 0.736203 0.0110375);
}

potential (symmetry_mean) {
   data = (  0.988411 0.0115894);
}

potential ( fractal_dimension_mean | radius_se   diagnosis   concave points_mean   ) {
   data = 
   ((((   0.99926   0.000369959   0.000369959)   % radius_se="(0.000, 0.2000]"   diagnosis=No   concave points_mean="(-0.0059, 0.0000]"   
   (   0.333333   0.333333   0.333333))   % radius_se="(0.000, 2.8000]"   diagnosis=No   concave points_mean="(-0.0059, 0.0000]"   
   ((   0.948718   0.025641   0.025641)   % radius_se="(0.000, 0.2000]"   diagnosis=Yes   concave points_mean="(-0.0059, 0.0000]"   
   (   0.333333   0.333333   0.333333)))   % radius_se="(0.000, 2.8000]"   diagnosis=Yes   concave points_mean="(-0.0059, 0.0000]"   
   (((   0.00392157   0.00392157   0.992157)   % radius_se="(0.000, 0.2000]"   diagnosis=No   concave points_mean="(0.0000, 0.0900]"   
   (   0.333333   0.333333   0.333333))   % radius_se="(0.000, 2.8000]"   diagnosis=No   concave points_mean="(0.0000, 0.0900]"   
   ((   0.810017   0.126079   0.0639033)   % radius_se="(0.000, 0.2000]"   diagnosis=Yes   concave points_mean="(0.0000, 0.0900]"   
   (   0.000139528   0.999721   0.000139528)))   % radius_se="(0.000, 2.8000]"   diagnosis=Yes   concave points_mean="(0.0000, 0.0900]"   
   (((   0.333333   0.333333   0.333333)   % radius_se="(0.000, 0.2000]"   diagnosis=No   concave points_mean="(0.0000, 0.1000]"   
   (   0.333333   0.333333   0.333333))   % radius_se="(0.000, 2.8000]"   diagnosis=No   concave points_mean="(0.0000, 0.1000]"   
   ((   0.981982   0.00900901   0.00900901)   % radius_se="(0.000, 0.2000]"   diagnosis=Yes   concave points_mean="(0.0000, 0.1000]"   
   (   0.333333   0.333333   0.333333))));   % radius_se="(0.000, 2.8000]"   diagnosis=Yes   concave points_mean="(0.0000, 0.1000]"   
}

potential ( radius_se | symmetry_mean   concave points_mean   diagnosis   ) {
   data = 
   ((((   0.999445   0.000554939)   % symmetry_mean="(0.00, 0.1000]"   concave points_mean="(-0.0059, 0.0000]"   diagnosis=No   
   (   0.5   0.5))   % symmetry_mean="(0.000, 0.2000]"   concave points_mean="(-0.0059, 0.0000]"   diagnosis=No   
   ((   0.994118   0.00588235)   % symmetry_mean="(0.00, 0.1000]"   concave points_mean="(0.0000, 0.0900]"   diagnosis=No   
   (   0.5   0.5))   % symmetry_mean="(0.000, 0.2000]"   concave points_mean="(0.0000, 0.0900]"   diagnosis=No   
   ((   0.5   0.5)   % symmetry_mean="(0.00, 0.1000]"   concave points_mean="(0.0000, 0.1000]"   diagnosis=No   
   (   0.5   0.5)))   % symmetry_mean="(0.000, 0.2000]"   concave points_mean="(0.0000, 0.1000]"   diagnosis=No   
   (((   0.961538   0.0384615)   % symmetry_mean="(0.00, 0.1000]"   concave points_mean="(-0.0059, 0.0000]"   diagnosis=Yes   
   (   0.5   0.5))   % symmetry_mean="(0.000, 0.2000]"   concave points_mean="(-0.0059, 0.0000]"   diagnosis=Yes   
   ((   0.0614931   0.938507)   % symmetry_mean="(0.00, 0.1000]"   concave points_mean="(0.0000, 0.0900]"   diagnosis=Yes   
   (   0.986486   0.0135135))   % symmetry_mean="(0.000, 0.2000]"   concave points_mean="(0.0000, 0.0900]"   diagnosis=Yes   
   ((   0.986486   0.0135135)   % symmetry_mean="(0.00, 0.1000]"   concave points_mean="(0.0000, 0.1000]"   diagnosis=Yes   
   (   0.5   0.5))));   % symmetry_mean="(0.000, 0.2000]"   concave points_mean="(0.0000, 0.1000]"   diagnosis=Yes   
}

potential ( texture_se | radius_se   ) {
   data = 
   ((   0.996748   0.00162602   0.00162602)   % radius_se="(0.000, 0.2000]"   
   (   0.0509607   0.928154   0.0208855));   % radius_se="(0.000, 2.8000]"   
}

potential ( perimeter_se | texture_se   ) {
   data = 
   ((   0.998516   0.00148368)   % texture_se="(0.000, 0.5000]"   
   (   0.955935   0.0440647)   % texture_se="(0.000, 2.2000]"   
   (   0.961538   0.0384615));   % texture_se="(2.000, 3.7000]"   
}

potential ( area_se | perimeter_se   texture_se   ) {
   data = 
   (((   0.999009   0.000495295   0.000495295)   % perimeter_se="(1.000, 8.3000]"   texture_se="(0.000, 0.5000]"   
   (   0.333333   0.333333   0.333333))   % perimeter_se="(8.0000, 21.8000]"   texture_se="(0.000, 0.5000]"   
   ((   0.0454688   0.948573   0.00595798)   % perimeter_se="(1.000, 8.3000]"   texture_se="(0.000, 2.2000]"   
   (   0.986395   0.00680272   0.00680272))   % perimeter_se="(8.0000, 21.8000]"   texture_se="(0.000, 2.2000]"   
   ((   0.973333   0.0133333   0.0133333)   % perimeter_se="(1.000, 8.3000]"   texture_se="(2.000, 3.7000]"   
   (   0.333333   0.333333   0.333333)));   % perimeter_se="(8.0000, 21.8000]"   texture_se="(2.000, 3.7000]"   
}

potential ( smoothness_se | area_se   ) {
   data = 
   ((   0.998321   0.000839631   0.000839631)   % area_se="(12.0000, 19.7000]"   
   (   0.060066   0.00660066   0.933333)   % area_se="(19.00000, 482.0000]"   
   (   0.833333   0.0833333   0.0833333));   % area_se="(482.00000, 534.1000]"   
}

potential ( compactness_se | smoothness_se   symmetry_se   ) {
   data = 
   (((   0.000388199   0.999612)   % smoothness_se="(-0.0062, 0.0050]"   symmetry_se="(-0.0017, 0.0200]"   
   (   0.05   0.95)   % smoothness_se="(0.0000, 0.0000]"   symmetry_se="(-0.0017, 0.0200]"   
   (   0.15483   0.84517))   % smoothness_se="(0.0056, 0.0200]"   symmetry_se="(-0.0017, 0.0200]"   
   ((   0.5   0.5)   % smoothness_se="(-0.0062, 0.0050]"   symmetry_se="(0.00000, 0.0200]"   
   (   0.5   0.5)   % smoothness_se="(0.0000, 0.0000]"   symmetry_se="(0.00000, 0.0200]"   
   (   0.0005   0.9995))   % smoothness_se="(0.0056, 0.0200]"   symmetry_se="(0.00000, 0.0200]"   
   ((   0.5   0.5)   % smoothness_se="(-0.0062, 0.0050]"   symmetry_se="(0.00000, 0.0500]"   
   (   0.5   0.5)   % smoothness_se="(0.0000, 0.0000]"   symmetry_se="(0.00000, 0.0500]"   
   (   0.0078125   0.992188)));   % smoothness_se="(0.0056, 0.0200]"   symmetry_se="(0.00000, 0.0500]"   
}

potential ( concavity_se | diagnosis   ) {
   data = 
   ((   1)   % diagnosis=No   
   (   1));   % diagnosis=Yes   
}

potential ( concave points_se | diagnosis   ) {
   data = 
   ((   1)   % diagnosis=No   
   (   1));   % diagnosis=Yes   
}

potential ( symmetry_se | fractal_dimension_se   smoothness_se   ) {
   data = 
   (((   0.999482   0.000258799   0.000258799)   % fractal_dimension_se="(-0.0088, 0.0010]"   smoothness_se="(-0.0062, 0.0050]"   
   (   0.333333   0.333333   0.333333)   % fractal_dimension_se="(0.0013, 0.0060]"   smoothness_se="(-0.0062, 0.0050]"   
   (   0.333333   0.333333   0.333333))   % fractal_dimension_se="(0.0064, 0.0090]"   smoothness_se="(-0.0062, 0.0050]"   
   ((   0.933333   0.0333333   0.0333333)   % fractal_dimension_se="(-0.0088, 0.0010]"   smoothness_se="(0.0000, 0.0000]"   
   (   0.333333   0.333333   0.333333)   % fractal_dimension_se="(0.0013, 0.0060]"   smoothness_se="(0.0000, 0.0000]"   
   (   0.333333   0.333333   0.333333))   % fractal_dimension_se="(0.0064, 0.0090]"   smoothness_se="(0.0000, 0.0000]"   
   ((   0.811393   0.0423403   0.146266)   % fractal_dimension_se="(-0.0088, 0.0010]"   smoothness_se="(0.0056, 0.0200]"   
   (   0.000352361   0.999295   0.000352361)   % fractal_dimension_se="(0.0013, 0.0060]"   smoothness_se="(0.0056, 0.0200]"   
   (   0.00900901   0.981982   0.00900901)));   % fractal_dimension_se="(0.0064, 0.0090]"   smoothness_se="(0.0056, 0.0200]"   
}

potential ( fractal_dimension_se | smoothness_se   ) {
   data = 
   ((   0.99845   0.000775194   0.000775194)   % smoothness_se="(-0.0062, 0.0050]"   
   (   0.833333   0.0833333   0.0833333)   % smoothness_se="(0.0000, 0.0000]"   
   (   0.305791   0.668079   0.0261299));   % smoothness_se="(0.0056, 0.0200]"   
}

potential ( radius_worst | fractal_dimension_se   ) {
   data = 
   ((   0.998845   0.000577701   0.000577701)   % fractal_dimension_se="(-0.0088, 0.0010]"   
   (   0.0580169   0.931435   0.0105485)   % fractal_dimension_se="(0.0013, 0.0060]"   
   (   0.948718   0.025641   0.025641));   % fractal_dimension_se="(0.0064, 0.0090]"   
}

potential ( texture_worst | radius_worst   radius_mean   ) {
   data = 
   (((   0.998902   0.000549149   0.000549149)   % radius_worst="(11.0000, 16.4000]"   radius_mean="(8.0000, 27.2000]"   
   (   0.112994   0.845198   0.0418079)   % radius_worst="(16.0000, 33.4000]"   radius_mean="(8.0000, 27.2000]"   
   (   0.833333   0.0833333   0.0833333)));   % radius_worst="(33.0000, 35.2000]"   radius_mean="(8.0000, 27.2000]"   
}

potential ( perimeter_worst | texture_worst   area_worst   ) {
   data = 
   (((   0.999611   0.000389105)   % texture_worst="(15.0000, 22.7000]"   area_worst="(257.00000, 829.3000]"   
   (   0.532967   0.467033)   % texture_worst="(22.000, 31.0000]"   area_worst="(257.00000, 829.3000]"   
   (   0.98   0.02))   % texture_worst="(31.000, 40.7000]"   area_worst="(257.00000, 829.3000]"   
   ((   0.5   0.5)   % texture_worst="(15.0000, 22.7000]"   area_worst="(829.000000, 3893.2000]"   
   (   0.998778   0.00122249)   % texture_worst="(22.000, 31.0000]"   area_worst="(829.000000, 3893.2000]"   
   (   0.5   0.5)));   % texture_worst="(31.000, 40.7000]"   area_worst="(829.000000, 3893.2000]"   
}

potential ( area_worst | texture_worst   ) {
   data = 
   ((   0.999222   0.000777605)   % texture_worst="(15.0000, 22.7000]"   
   (   0.182   0.818)   % texture_worst="(22.000, 31.0000]"   
   (   0.961538   0.0384615));   % texture_worst="(31.000, 40.7000]"   
}

potential ( smoothness_worst | area_worst   fractal_dimension_worst   ) {
   data = 
   (((   0.00107066   0.998929)   % area_worst="(257.00000, 829.3000]"   fractal_dimension_worst="(0.0000, 0.1000]"   
   (   0.835766   0.164234)));   % area_worst="(829.000000, 3893.2000]"   fractal_dimension_worst="(0.0000, 0.1000]"   
}

potential ( compactness_worst | smoothness_worst   ) {
   data = 
   ((   0.143478   0.856522)   % smoothness_worst="(0.000, 0.2000]"   
   (   0.998978   0.00102249));   % smoothness_worst="(0.0750, 0.1000]"   
}

potential ( concavity_worst | compactness_worst   ) {
   data = 
   ((   0.000990099   0.99901)   % compactness_worst="(0.00, 0.0000]"   
   (   0.752525   0.247475));   % compactness_worst="(0.00, 0.9000]"   
}

potential ( concave points_worst | concavity_worst   symmetry_worst   ) {
   data = 
   (((   0.127907   0.872093)   % concavity_worst="(0.000, 1.1000]"   symmetry_worst="(0.000, 0.3000]"   
   (   0.000473037   0.999527))   % concavity_worst="(0.0029, 0.2000]"   symmetry_worst="(0.000, 0.3000]"   
   ((   0.0238095   0.97619)   % concavity_worst="(0.000, 1.1000]"   symmetry_worst="(0.000, 0.6000]"   
   (   0.5   0.5)));   % concavity_worst="(0.0029, 0.2000]"   symmetry_worst="(0.000, 0.6000]"   
}

potential ( symmetry_worst | concavity_worst   ) {
   data = 
   ((   0.86   0.14)   % concavity_worst="(0.000, 1.1000]"   
   (   0.999055   0.00094518));   % concavity_worst="(0.0029, 0.2000]"   
}

potential ( fractal_dimension_worst | diagnosis   ) {
   data = 
   ((   1)   % diagnosis=No   
   (   1));   % diagnosis=Yes   
}

potential ( diagnosis | concave points_mean   ) {
   data = 
   ((   0.984716   0.0152838)   % concave points_mean="(-0.0059, 0.0000]"   
   (   0.0322339   0.967766)   % concave points_mean="(0.0000, 0.0900]"   
   (   0.05   0.95));   % concave points_mean="(0.0000, 0.1000]"   
}


