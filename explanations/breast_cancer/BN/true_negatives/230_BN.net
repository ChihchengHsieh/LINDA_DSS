
net {
  name = unnamedBN;
  software = "aGrUM 0.17.0";
  node_size = (50 50);
}

node radius_mean {
   states = ("(8.0000, 27.2000]" );
   label = "radius_mean";
   ID = "radius_mean";
}

node texture_mean {
   states = ("(14.000, 34.0000]" "(34.000, 38.8000]" );
   label = "texture_mean";
   ID = "texture_mean";
}

node perimeter_mean {
   states = ("(163.00000, 188.4000]" "(62.00000, 163.4000]" );
   label = "perimeter_mean";
   ID = "perimeter_mean";
}

node area_mean {
   states = ("(1835.000000, 2235.5000]" "(197.8900, 1835.3000]" );
   label = "area_mean";
   ID = "area_mean";
}

node smoothness_mean {
   states = ("(0.000, 0.1000]" "(0.0609, 0.1000]" );
   label = "smoothness_mean";
   ID = "smoothness_mean";
}

node compactness_mean {
   states = ("(0.000, 0.3000]" "(0.0199, 0.2000]" );
   label = "compactness_mean";
   ID = "compactness_mean";
}

node concavity_mean {
   states = ("(-0.0088, 0.4000]" );
   label = "concavity_mean";
   ID = "concavity_mean";
}

node concave points_mean {
   states = ("(-0.0059, 0.0000]" "(0.0000, 0.0900]" "(0.0000, 0.1000]" );
   label = "concave points_mean";
   ID = "concave points_mean";
}

node symmetry_mean {
   states = ("(0.00, 0.1000]" "(0.000, 0.2000]" );
   label = "symmetry_mean";
   ID = "symmetry_mean";
}

node fractal_dimension_mean {
   states = ("(0.00000, 0.0900]" "(0.0419, 0.0500]" );
   label = "fractal_dimension_mean";
   ID = "fractal_dimension_mean";
}

node radius_se {
   states = ("(0.000, 0.3000]" "(0.000, 2.8000]" );
   label = "radius_se";
   ID = "radius_se";
}

node texture_se {
   states = ("(0.000, 0.8000]" "(0.000, 2.2000]" "(2.000, 3.7000]" );
   label = "texture_se";
   ID = "texture_se";
}

node perimeter_se {
   states = ("(2.000, 8.3000]" "(2.0100, 2.4000]" "(8.0000, 21.8000]" );
   label = "perimeter_se";
   ID = "perimeter_se";
}

node area_se {
   states = ("(12.0000, 28.3000]" "(28.00000, 482.0000]" "(482.00000, 534.1000]" );
   label = "area_se";
   ID = "area_se";
}

node smoothness_se {
   states = ("(-0.0062, 0.0060]" "(0.0000, 0.0000]" "(0.0066, 0.0200]" );
   label = "smoothness_se";
   ID = "smoothness_se";
}

node compactness_se {
   states = ("(-0.0046, 0.0600]" "(0.0000, 0.1000]" );
   label = "compactness_se";
   ID = "compactness_se";
}

node concavity_se {
   states = ("(-0.0093, 0.2000]" );
   label = "concavity_se";
   ID = "concavity_se";
}

node concave points_se {
   states = ("(-0.0072, 0.0300]" );
   label = "concave points_se";
   ID = "concave points_se";
}

node symmetry_se {
   states = ("(-0.0017, 0.0000]" "(0.0000, 0.0200]" "(0.00000, 0.0500]" );
   label = "symmetry_se";
   ID = "symmetry_se";
}

node fractal_dimension_se {
   states = ("(-0.0090, 0.0060]" "(0.0064, 0.0090]" );
   label = "fractal_dimension_se";
   ID = "fractal_dimension_se";
}

node radius_worst {
   states = ("(11.0000, 13.7000]" "(13.0000, 33.4000]" "(33.0000, 35.2000]" );
   label = "radius_worst";
   ID = "radius_worst";
}

node texture_worst {
   states = ("(15.0000, 20.9000]" "(20.000, 31.0000]" "(31.000, 40.7000]" );
   label = "texture_worst";
   ID = "texture_worst";
}

node perimeter_worst {
   states = ("(144.00000, 236.5000]" "(86.00000, 144.5000]" );
   label = "perimeter_worst";
   ID = "perimeter_worst";
}

node area_worst {
   states = ("(257.00000, 585.5000]" "(585.000000, 3893.2000]" );
   label = "area_worst";
   ID = "area_worst";
}

node smoothness_worst {
   states = ("(0.00, 0.2000]" "(0.0750, 0.0000]" );
   label = "smoothness_worst";
   ID = "smoothness_worst";
}

node compactness_worst {
   states = ("(0.0000, 0.9000]" );
   label = "compactness_worst";
   ID = "compactness_worst";
}

node concavity_worst {
   states = ("(-0.0061, 1.1000]" );
   label = "concavity_worst";
   ID = "concavity_worst";
}

node concave points_worst {
   states = ("(0.000, 0.0000]" "(0.0009, 0.0100]" );
   label = "concave points_worst";
   ID = "concave points_worst";
}

node symmetry_worst {
   states = ("(0.000, 0.2000]" "(0.000, 0.6000]" );
   label = "symmetry_worst";
   ID = "symmetry_worst";
}

node fractal_dimension_worst {
   states = ("(0.0000, 0.1000]" );
   label = "fractal_dimension_worst";
   ID = "fractal_dimension_worst";
}

node diagnosis {
   states = (No Yes );
   label = "diagnosis";
   ID = "diagnosis";
}

potential ( radius_mean | texture_se   compactness_se   ) {
   data = 
   (((   1)   % texture_se="(0.000, 0.8000]"   compactness_se="(-0.0046, 0.0600]"   
   (   1)   % texture_se="(0.000, 2.2000]"   compactness_se="(-0.0046, 0.0600]"   
   (   1))   % texture_se="(2.000, 3.7000]"   compactness_se="(-0.0046, 0.0600]"   
   ((   1)   % texture_se="(0.000, 0.8000]"   compactness_se="(0.0000, 0.1000]"   
   (   1)   % texture_se="(0.000, 2.2000]"   compactness_se="(0.0000, 0.1000]"   
   (   1)));   % texture_se="(2.000, 3.7000]"   compactness_se="(0.0000, 0.1000]"   
}

potential ( texture_mean | concavity_worst   ) {
   data = 
   ((   0.995033   0.00496689));   % concavity_worst="(-0.0061, 1.1000]"   
}

potential ( perimeter_mean | concave points_mean   ) {
   data = 
   ((   0.0283843   0.971616)   % concave points_mean="(-0.0059, 0.0000]"   
   (   0.000749625   0.99925)   % concave points_mean="(0.0000, 0.0900]"   
   (   0.05   0.95));   % concave points_mean="(0.0000, 0.1000]"   
}

potential ( area_mean | concave points_mean   ) {
   data = 
   ((   0.0414847   0.958515)   % concave points_mean="(-0.0059, 0.0000]"   
   (   0.000749625   0.99925)   % concave points_mean="(0.0000, 0.0900]"   
   (   0.05   0.95));   % concave points_mean="(0.0000, 0.1000]"   
}

potential ( smoothness_mean | concave points_mean   ) {
   data = 
   ((   0.0676856   0.932314)   % concave points_mean="(-0.0059, 0.0000]"   
   (   0.000749625   0.99925)   % concave points_mean="(0.0000, 0.0900]"   
   (   0.05   0.95));   % concave points_mean="(0.0000, 0.1000]"   
}

potential ( compactness_mean | concave points_mean   ) {
   data = 
   ((   0.0545852   0.945415)   % concave points_mean="(-0.0059, 0.0000]"   
   (   0.000749625   0.99925)   % concave points_mean="(0.0000, 0.0900]"   
   (   0.05   0.95));   % concave points_mean="(0.0000, 0.1000]"   
}

potential ( concavity_mean | compactness_se   texture_se   ) {
   data = 
   (((   1)   % compactness_se="(-0.0046, 0.0600]"   texture_se="(0.000, 0.8000]"   
   (   1))   % compactness_se="(0.0000, 0.1000]"   texture_se="(0.000, 0.8000]"   
   ((   1)   % compactness_se="(-0.0046, 0.0600]"   texture_se="(0.000, 2.2000]"   
   (   1))   % compactness_se="(0.0000, 0.1000]"   texture_se="(0.000, 2.2000]"   
   ((   1)   % compactness_se="(-0.0046, 0.0600]"   texture_se="(2.000, 3.7000]"   
   (   1)));   % compactness_se="(0.0000, 0.1000]"   texture_se="(2.000, 3.7000]"   
}

potential ( concave points_mean | symmetry_mean   diagnosis   fractal_dimension_mean   radius_se   ) {
   data = 
   (((((   0.00258398   0.994832   0.00258398)   % symmetry_mean="(0.00, 0.1000]"   diagnosis=No   fractal_dimension_mean="(0.00000, 0.0900]"   radius_se="(0.000, 0.3000]"   
   (   0.333333   0.333333   0.333333))   % symmetry_mean="(0.000, 0.2000]"   diagnosis=No   fractal_dimension_mean="(0.00000, 0.0900]"   radius_se="(0.000, 0.3000]"   
   ((   0.333333   0.333333   0.333333)   % symmetry_mean="(0.00, 0.1000]"   diagnosis=Yes   fractal_dimension_mean="(0.00000, 0.0900]"   radius_se="(0.000, 0.3000]"   
   (   0.333333   0.333333   0.333333)))   % symmetry_mean="(0.000, 0.2000]"   diagnosis=Yes   fractal_dimension_mean="(0.00000, 0.0900]"   radius_se="(0.000, 0.3000]"   
   (((   0.893706   0.0942934   0.012001)   % symmetry_mean="(0.00, 0.1000]"   diagnosis=No   fractal_dimension_mean="(0.0419, 0.0500]"   radius_se="(0.000, 0.3000]"   
   (   0.00294985   0.9941   0.00294985))   % symmetry_mean="(0.000, 0.2000]"   diagnosis=No   fractal_dimension_mean="(0.0419, 0.0500]"   radius_se="(0.000, 0.3000]"   
   ((   0.010101   0.010101   0.979798)   % symmetry_mean="(0.00, 0.1000]"   diagnosis=Yes   fractal_dimension_mean="(0.0419, 0.0500]"   radius_se="(0.000, 0.3000]"   
   (   0.333333   0.333333   0.333333))))   % symmetry_mean="(0.000, 0.2000]"   diagnosis=Yes   fractal_dimension_mean="(0.0419, 0.0500]"   radius_se="(0.000, 0.3000]"   
   ((((   0.333333   0.333333   0.333333)   % symmetry_mean="(0.00, 0.1000]"   diagnosis=No   fractal_dimension_mean="(0.00000, 0.0900]"   radius_se="(0.000, 2.8000]"   
   (   0.333333   0.333333   0.333333))   % symmetry_mean="(0.000, 0.2000]"   diagnosis=No   fractal_dimension_mean="(0.00000, 0.0900]"   radius_se="(0.000, 2.8000]"   
   ((   0.333333   0.333333   0.333333)   % symmetry_mean="(0.00, 0.1000]"   diagnosis=Yes   fractal_dimension_mean="(0.00000, 0.0900]"   radius_se="(0.000, 2.8000]"   
   (   0.333333   0.333333   0.333333)))   % symmetry_mean="(0.000, 0.2000]"   diagnosis=Yes   fractal_dimension_mean="(0.00000, 0.0900]"   radius_se="(0.000, 2.8000]"   
   (((   0.333333   0.333333   0.333333)   % symmetry_mean="(0.00, 0.1000]"   diagnosis=No   fractal_dimension_mean="(0.0419, 0.0500]"   radius_se="(0.000, 2.8000]"   
   (   0.333333   0.333333   0.333333))   % symmetry_mean="(0.000, 0.2000]"   diagnosis=No   fractal_dimension_mean="(0.0419, 0.0500]"   radius_se="(0.000, 2.8000]"   
   ((   0.000104657   0.999791   0.000104657)   % symmetry_mean="(0.00, 0.1000]"   diagnosis=Yes   fractal_dimension_mean="(0.0419, 0.0500]"   radius_se="(0.000, 2.8000]"   
   (   0.333333   0.333333   0.333333)))));   % symmetry_mean="(0.000, 0.2000]"   diagnosis=Yes   fractal_dimension_mean="(0.0419, 0.0500]"   radius_se="(0.000, 2.8000]"   
}

potential ( symmetry_mean | diagnosis   ) {
   data = 
   ((   0.927861   0.0721393)   % diagnosis=No   
   (   0.998759   0.00124069));   % diagnosis=Yes   
}

potential ( fractal_dimension_mean | diagnosis   symmetry_mean   ) {
   data = 
   (((   0.0871314   0.912869)   % diagnosis=No   symmetry_mean="(0.00, 0.1000]"   
   (   0.000621118   0.999379))   % diagnosis=Yes   symmetry_mean="(0.00, 0.1000]"   
   ((   0.0172414   0.982759)   % diagnosis=No   symmetry_mean="(0.000, 0.2000]"   
   (   0.5   0.5)));   % diagnosis=Yes   symmetry_mean="(0.000, 0.2000]"   
}

potential ( radius_se | texture_worst   ) {
   data = 
   ((   0.481162   0.518838)   % texture_worst="(15.0000, 20.9000]"   
   (   0.00195312   0.998047)   % texture_worst="(20.000, 31.0000]"   
   (   0.0384615   0.961538));   % texture_worst="(31.000, 40.7000]"   
}

potential ( texture_se | radius_se   perimeter_se   ) {
   data = 
   (((   0.333333   0.333333   0.333333)   % radius_se="(0.000, 0.3000]"   perimeter_se="(2.000, 8.3000]"   
   (   0.00032457   0.999351   0.00032457))   % radius_se="(0.000, 2.8000]"   perimeter_se="(2.000, 8.3000]"   
   ((   0.998912   0.000543774   0.000543774)   % radius_se="(0.000, 0.3000]"   perimeter_se="(2.0100, 2.4000]"   
   (   0.548209   0.250689   0.201102))   % radius_se="(0.000, 2.8000]"   perimeter_se="(2.0100, 2.4000]"   
   ((   0.333333   0.333333   0.333333)   % radius_se="(0.000, 0.3000]"   perimeter_se="(8.0000, 21.8000]"   
   (   0.00680272   0.986395   0.00680272)));   % radius_se="(0.000, 2.8000]"   perimeter_se="(8.0000, 21.8000]"   
}

potential ( perimeter_se | radius_se   texture_worst   ) {
   data = 
   (((   0.000543774   0.998912   0.000543774)   % radius_se="(0.000, 0.3000]"   texture_worst="(15.0000, 20.9000]"   
   (   0.744831   0.182047   0.0731215))   % radius_se="(0.000, 2.8000]"   texture_worst="(15.0000, 20.9000]"   
   ((   0.333333   0.333333   0.333333)   % radius_se="(0.000, 0.3000]"   texture_worst="(20.000, 31.0000]"   
   (   0.998695   0.000652316   0.000652316))   % radius_se="(0.000, 2.8000]"   texture_worst="(20.000, 31.0000]"   
   ((   0.333333   0.333333   0.333333)   % radius_se="(0.000, 0.3000]"   texture_worst="(31.000, 40.7000]"   
   (   0.973333   0.0133333   0.0133333)));   % radius_se="(0.000, 2.8000]"   texture_worst="(31.000, 40.7000]"   
}

potential ( area_se | perimeter_se   area_worst   ) {
   data = 
   (((   0.0199246   0.969844   0.0102316)   % perimeter_se="(2.000, 8.3000]"   area_worst="(257.00000, 585.5000]"   
   (   0.99909   0.000454752   0.000454752)   % perimeter_se="(2.0100, 2.4000]"   area_worst="(257.00000, 585.5000]"   
   (   0.986395   0.00680272   0.00680272))   % perimeter_se="(8.0000, 21.8000]"   area_worst="(257.00000, 585.5000]"   
   ((   0.000814996   0.99837   0.000814996)   % perimeter_se="(2.000, 8.3000]"   area_worst="(585.000000, 3893.2000]"   
   (   0.333333   0.333333   0.333333)   % perimeter_se="(2.0100, 2.4000]"   area_worst="(585.000000, 3893.2000]"   
   (   0.333333   0.333333   0.333333)));   % perimeter_se="(8.0000, 21.8000]"   area_worst="(585.000000, 3893.2000]"   
}

potential ( smoothness_se | texture_worst   area_se   ) {
   data = 
   (((   0.999439   0.000280348   0.000280348)   % texture_worst="(15.0000, 20.9000]"   area_se="(12.0000, 28.3000]"   
   (   0.333333   0.333333   0.333333)   % texture_worst="(20.000, 31.0000]"   area_se="(12.0000, 28.3000]"   
   (   0.333333   0.333333   0.333333))   % texture_worst="(31.000, 40.7000]"   area_se="(12.0000, 28.3000]"   
   ((   0.139513   0.0131086   0.847378)   % texture_worst="(15.0000, 20.9000]"   area_se="(28.00000, 482.0000]"   
   (   0.000435161   0.000435161   0.99913)   % texture_worst="(20.000, 31.0000]"   area_se="(28.00000, 482.0000]"   
   (   0.00900901   0.00900901   0.981982))   % texture_worst="(31.000, 40.7000]"   area_se="(28.00000, 482.0000]"   
   ((   0.933333   0.0333333   0.0333333)   % texture_worst="(15.0000, 20.9000]"   area_se="(482.00000, 534.1000]"   
   (   0.333333   0.333333   0.333333)   % texture_worst="(20.000, 31.0000]"   area_se="(482.00000, 534.1000]"   
   (   0.333333   0.333333   0.333333)));   % texture_worst="(31.000, 40.7000]"   area_se="(482.00000, 534.1000]"   
}

potential ( compactness_se | symmetry_se   smoothness_se   ) {
   data = 
   (((   0.999614   0.000385505)   % symmetry_se="(-0.0017, 0.0000]"   smoothness_se="(-0.0062, 0.0060]"   
   (   0.5   0.5)   % symmetry_se="(0.0000, 0.0200]"   smoothness_se="(-0.0062, 0.0060]"   
   (   0.5   0.5))   % symmetry_se="(0.00000, 0.0500]"   smoothness_se="(-0.0062, 0.0060]"   
   ((   0.95   0.05)   % symmetry_se="(-0.0017, 0.0000]"   smoothness_se="(0.0000, 0.0000]"   
   (   0.5   0.5)   % symmetry_se="(0.0000, 0.0200]"   smoothness_se="(0.0000, 0.0000]"   
   (   0.5   0.5))   % symmetry_se="(0.00000, 0.0500]"   smoothness_se="(0.0000, 0.0000]"   
   ((   0.841108   0.158892)   % symmetry_se="(-0.0017, 0.0000]"   smoothness_se="(0.0066, 0.0200]"   
   (   0.9995   0.0005)   % symmetry_se="(0.0000, 0.0200]"   smoothness_se="(0.0066, 0.0200]"   
   (   0.992188   0.0078125)));   % symmetry_se="(0.00000, 0.0500]"   smoothness_se="(0.0066, 0.0200]"   
}

potential ( concavity_se | texture_se   compactness_se   ) {
   data = 
   (((   1)   % texture_se="(0.000, 0.8000]"   compactness_se="(-0.0046, 0.0600]"   
   (   1)   % texture_se="(0.000, 2.2000]"   compactness_se="(-0.0046, 0.0600]"   
   (   1))   % texture_se="(2.000, 3.7000]"   compactness_se="(-0.0046, 0.0600]"   
   ((   1)   % texture_se="(0.000, 0.8000]"   compactness_se="(0.0000, 0.1000]"   
   (   1)   % texture_se="(0.000, 2.2000]"   compactness_se="(0.0000, 0.1000]"   
   (   1)));   % texture_se="(2.000, 3.7000]"   compactness_se="(0.0000, 0.1000]"   
}

potential ( concave points_se | texture_se   compactness_se   ) {
   data = 
   (((   1)   % texture_se="(0.000, 0.8000]"   compactness_se="(-0.0046, 0.0600]"   
   (   1)   % texture_se="(0.000, 2.2000]"   compactness_se="(-0.0046, 0.0600]"   
   (   1))   % texture_se="(2.000, 3.7000]"   compactness_se="(-0.0046, 0.0600]"   
   ((   1)   % texture_se="(0.000, 0.8000]"   compactness_se="(0.0000, 0.1000]"   
   (   1)   % texture_se="(0.000, 2.2000]"   compactness_se="(0.0000, 0.1000]"   
   (   1)));   % texture_se="(2.000, 3.7000]"   compactness_se="(0.0000, 0.1000]"   
}

potential ( symmetry_se | radius_worst   smoothness_se   ) {
   data = 
   (((   0.999486   0.000257003   0.000257003)   % radius_worst="(11.0000, 13.7000]"   smoothness_se="(-0.0062, 0.0060]"   
   (   0.333333   0.333333   0.333333)   % radius_worst="(13.0000, 33.4000]"   smoothness_se="(-0.0062, 0.0060]"   
   (   0.333333   0.333333   0.333333))   % radius_worst="(33.0000, 35.2000]"   smoothness_se="(-0.0062, 0.0060]"   
   ((   0.933333   0.0333333   0.0333333)   % radius_worst="(11.0000, 13.7000]"   smoothness_se="(0.0000, 0.0000]"   
   (   0.333333   0.333333   0.333333)   % radius_worst="(13.0000, 33.4000]"   smoothness_se="(0.0000, 0.0000]"   
   (   0.333333   0.333333   0.333333))   % radius_worst="(33.0000, 35.2000]"   smoothness_se="(0.0000, 0.0000]"   
   ((   0.666018   0.210765   0.123217)   % radius_worst="(11.0000, 13.7000]"   smoothness_se="(0.0066, 0.0200]"   
   (   0.000377501   0.999245   0.000377501)   % radius_worst="(13.0000, 33.4000]"   smoothness_se="(0.0066, 0.0200]"   
   (   0.0333333   0.933333   0.0333333)));   % radius_worst="(33.0000, 35.2000]"   smoothness_se="(0.0066, 0.0200]"   
}

potential ( fractal_dimension_se | radius_worst   symmetry_se   ) {
   data = 
   (((   0.999697   0.000303398)   % radius_worst="(11.0000, 13.7000]"   symmetry_se="(-0.0017, 0.0000]"   
   (   0.5   0.5)   % radius_worst="(13.0000, 33.4000]"   symmetry_se="(-0.0017, 0.0000]"   
   (   0.5   0.5))   % radius_worst="(33.0000, 35.2000]"   symmetry_se="(-0.0017, 0.0000]"   
   ((   0.665138   0.334862)   % radius_worst="(11.0000, 13.7000]"   symmetry_se="(0.0000, 0.0200]"   
   (   0.999434   0.000566251)   % radius_worst="(13.0000, 33.4000]"   symmetry_se="(0.0000, 0.0200]"   
   (   0.95   0.05))   % radius_worst="(33.0000, 35.2000]"   symmetry_se="(0.0000, 0.0200]"   
   ((   0.992188   0.0078125)   % radius_worst="(11.0000, 13.7000]"   symmetry_se="(0.00000, 0.0500]"   
   (   0.5   0.5)   % radius_worst="(13.0000, 33.4000]"   symmetry_se="(0.00000, 0.0500]"   
   (   0.5   0.5)));   % radius_worst="(33.0000, 35.2000]"   symmetry_se="(0.00000, 0.0500]"   
}

potential ( radius_worst | texture_worst   smoothness_se   ) {
   data = 
   (((   0.999486   0.000257003   0.000257003)   % texture_worst="(15.0000, 20.9000]"   smoothness_se="(-0.0062, 0.0060]"   
   (   0.333333   0.333333   0.333333)   % texture_worst="(20.000, 31.0000]"   smoothness_se="(-0.0062, 0.0060]"   
   (   0.333333   0.333333   0.333333))   % texture_worst="(31.000, 40.7000]"   smoothness_se="(-0.0062, 0.0060]"   
   ((   0.933333   0.0333333   0.0333333)   % texture_worst="(15.0000, 20.9000]"   smoothness_se="(0.0000, 0.0000]"   
   (   0.333333   0.333333   0.333333)   % texture_worst="(20.000, 31.0000]"   smoothness_se="(0.0000, 0.0000]"   
   (   0.333333   0.333333   0.333333))   % texture_worst="(31.000, 40.7000]"   smoothness_se="(0.0000, 0.0000]"   
   ((   0.84989   0.134658   0.0154525)   % texture_worst="(15.0000, 20.9000]"   smoothness_se="(0.0066, 0.0200]"   
   (   0.000435161   0.99913   0.000435161)   % texture_worst="(20.000, 31.0000]"   smoothness_se="(0.0066, 0.0200]"   
   (   0.00900901   0.981982   0.00900901)));   % texture_worst="(31.000, 40.7000]"   smoothness_se="(0.0066, 0.0200]"   
}

potential ( texture_worst | area_worst   ) {
   data = 
   ((   0.908637   0.0735189   0.0178444)   % area_worst="(257.00000, 585.5000]"   
   (   0.00243309   0.995134   0.00243309));   % area_worst="(585.000000, 3893.2000]"   
}

potential ( perimeter_worst | area_worst   texture_worst   ) {
   data = 
   (((   0.000392773   0.999607)   % area_worst="(257.00000, 585.5000]"   texture_worst="(15.0000, 20.9000]"   
   (   0.5   0.5))   % area_worst="(585.000000, 3893.2000]"   texture_worst="(15.0000, 20.9000]"   
   ((   0.412621   0.587379)   % area_worst="(257.00000, 585.5000]"   texture_worst="(20.000, 31.0000]"   
   (   0.00122249   0.998778))   % area_worst="(585.000000, 3893.2000]"   texture_worst="(20.000, 31.0000]"   
   ((   0.02   0.98)   % area_worst="(257.00000, 585.5000]"   texture_worst="(31.000, 40.7000]"   
   (   0.5   0.5)));   % area_worst="(585.000000, 3893.2000]"   texture_worst="(31.000, 40.7000]"   
}

potential ( area_worst | smoothness_worst   ) {
   data = 
   ((   0.0042735   0.995726)   % smoothness_worst="(0.00, 0.2000]"   
   (   0.957906   0.0420945));   % smoothness_worst="(0.0750, 0.0000]"   
}

potential (smoothness_worst) {
   data = (  0.193709 0.806291);
}

potential ( compactness_worst | compactness_se   texture_se   ) {
   data = 
   (((   1)   % compactness_se="(-0.0046, 0.0600]"   texture_se="(0.000, 0.8000]"   
   (   1))   % compactness_se="(0.0000, 0.1000]"   texture_se="(0.000, 0.8000]"   
   ((   1)   % compactness_se="(-0.0046, 0.0600]"   texture_se="(0.000, 2.2000]"   
   (   1))   % compactness_se="(0.0000, 0.1000]"   texture_se="(0.000, 2.2000]"   
   ((   1)   % compactness_se="(-0.0046, 0.0600]"   texture_se="(2.000, 3.7000]"   
   (   1)));   % compactness_se="(0.0000, 0.1000]"   texture_se="(2.000, 3.7000]"   
}

potential ( concavity_worst | texture_se   compactness_se   ) {
   data = 
   (((   1)   % texture_se="(0.000, 0.8000]"   compactness_se="(-0.0046, 0.0600]"   
   (   1)   % texture_se="(0.000, 2.2000]"   compactness_se="(-0.0046, 0.0600]"   
   (   1))   % texture_se="(2.000, 3.7000]"   compactness_se="(-0.0046, 0.0600]"   
   ((   1)   % texture_se="(0.000, 0.8000]"   compactness_se="(0.0000, 0.1000]"   
   (   1)   % texture_se="(0.000, 2.2000]"   compactness_se="(0.0000, 0.1000]"   
   (   1)));   % texture_se="(2.000, 3.7000]"   compactness_se="(0.0000, 0.1000]"   
}

potential ( concave points_worst | smoothness_worst   ) {
   data = 
   ((   0.5   0.5)   % smoothness_worst="(0.00, 0.2000]"   
   (   0.00102669   0.998973));   % smoothness_worst="(0.0750, 0.0000]"   
}

potential ( symmetry_worst | concave points_worst   ) {
   data = 
   ((   0.347458   0.652542)   % concave points_worst="(0.000, 0.0000]"   
   (   0.999083   0.000917431));   % concave points_worst="(0.0009, 0.0100]"   
}

potential ( fractal_dimension_worst | texture_se   compactness_se   ) {
   data = 
   (((   1)   % texture_se="(0.000, 0.8000]"   compactness_se="(-0.0046, 0.0600]"   
   (   1)   % texture_se="(0.000, 2.2000]"   compactness_se="(-0.0046, 0.0600]"   
   (   1))   % texture_se="(2.000, 3.7000]"   compactness_se="(-0.0046, 0.0600]"   
   ((   1)   % texture_se="(0.000, 0.8000]"   compactness_se="(0.0000, 0.1000]"   
   (   1)   % texture_se="(0.000, 2.2000]"   compactness_se="(0.0000, 0.1000]"   
   (   1)));   % texture_se="(2.000, 3.7000]"   compactness_se="(0.0000, 0.1000]"   
}

potential ( diagnosis | radius_se   ) {
   data = 
   ((   0.978049   0.0219512)   % radius_se="(0.000, 0.3000]"   
   (   0.00125313   0.998747));   % radius_se="(0.000, 2.8000]"   
}


