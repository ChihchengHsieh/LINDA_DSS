
net {
  name = unnamedBN;
  software = "aGrUM 0.18.2";
  node_size = (50 50);
}

node radius_mean {
   states = ("(7.1400, 10.5000]" );
   label = "radius_mean";
   ID = "radius_mean";
}

node texture_mean {
   states = ("(11.0000, 15.8000]" "(15.0000, 16.7000]" );
   label = "texture_mean";
   ID = "texture_mean";
}

node perimeter_mean {
   states = ("(46.0000, 65.8000]" "(65.0000, 70.6000]" );
   label = "perimeter_mean";
   ID = "perimeter_mean";
}

node area_mean {
   states = ("(147.2600, 375.0000]" "(375.00000, 430.6000]" );
   label = "area_mean";
   ID = "area_mean";
}

node smoothness_mean {
   states = ("(0.00000, 0.1200]" "(0.00000, 0.1300]" );
   label = "smoothness_mean";
   ID = "smoothness_mean";
}

node compactness_mean {
   states = ("(0.000, 0.1000]" "(0.0000, 0.1000]" );
   label = "compactness_mean";
   ID = "compactness_mean";
}

node concavity_mean {
   states = ("(-0.0013, 0.0700]" );
   label = "concavity_mean";
   ID = "concavity_mean";
}

node concave points_mean {
   states = ("(-0.0051, 0.0200]" "(0.00000, 0.0300]" );
   label = "concave points_mean";
   ID = "concave points_mean";
}

node symmetry_mean {
   states = ("(0.000, 0.2000]" );
   label = "symmetry_mean";
   ID = "symmetry_mean";
}

node fractal_dimension_mean {
   states = ("(0.00000, 0.0700]" "(0.00000, 0.0800]" );
   label = "fractal_dimension_mean";
   ID = "fractal_dimension_mean";
}

node radius_se {
   states = ("(0.000, 0.3000]" "(0.000, 0.6000]" );
   label = "radius_se";
   ID = "radius_se";
}

node texture_se {
   states = ("(0.000, 1.1000]" "(1.000, 1.1000]" "(1.000, 1.5000]" );
   label = "texture_se";
   ID = "texture_se";
}

node perimeter_se {
   states = ("(0.000, 2.1000]" "(2.0, 4.0000]" "(2.00, 2.0000]" );
   label = "perimeter_se";
   ID = "perimeter_se";
}

node area_se {
   states = ("(19.0000, 65.7000]" "(65.0000, 72.1000]" "(7.0000, 19.6000]" );
   label = "area_se";
   ID = "area_se";
}

node smoothness_se {
   states = ("(0.00000, 0.0100]" "(0.0029, 0.0100]" );
   label = "smoothness_se";
   ID = "smoothness_se";
}

node compactness_se {
   states = ("(0.00000, 0.0200]" "(0.00000, 0.0300]" "(0.0049, 0.0200]" );
   label = "compactness_se";
   ID = "compactness_se";
}

node concavity_se {
   states = ("(-0.0049, 0.0100]" "(0.00000, 0.0400]" );
   label = "concavity_se";
   ID = "concavity_se";
}

node concave points_se {
   states = ("(0.000, 0.0100]" "(0.00000, 0.0100]" );
   label = "concave points_se";
   ID = "concave points_se";
}

node symmetry_se {
   states = ("(0.0000, 0.0000]" "(0.0000, 0.0400]" "(0.00000, 0.0300]" );
   label = "symmetry_se";
   ID = "symmetry_se";
}

node fractal_dimension_se {
   states = ("(-0.0088, 0.0020]" "(0.0029, 0.0030]" "(0.0031, 0.0030]" );
   label = "fractal_dimension_se";
   ID = "fractal_dimension_se";
}

node radius_worst {
   states = ("(12.0000, 12.5000]" "(8.000, 9.8000]" "(9.0000, 12.2000]" );
   label = "radius_worst";
   ID = "radius_worst";
}

node texture_worst {
   states = ("(14.0000, 17.8000]" "(17.0000, 18.0000]" "(18.0000, 19.8000]" );
   label = "texture_worst";
   ID = "texture_worst";
}

node perimeter_worst {
   states = ("(61.8000, 64.0000]" "(64.0000, 65.8000]" "(65.0000, 81.6000]" );
   label = "perimeter_worst";
   ID = "perimeter_worst";
}

node area_worst {
   states = ("(189.6700, 289.3000]" "(289.00000, 650.6000]" );
   label = "area_worst";
   ID = "area_worst";
}

node smoothness_worst {
   states = ("(0.00, 0.0000]" "(0.000, 0.1000]" );
   label = "smoothness_worst";
   ID = "smoothness_worst";
}

node compactness_worst {
   states = ("(0.000, 0.2000]" "(0.1200, 0.2000]" );
   label = "compactness_worst";
   ID = "compactness_worst";
}

node concavity_worst {
   states = ("(-0.0076, 0.1000]" "(0.000, 0.2000]" );
   label = "concavity_worst";
   ID = "concavity_worst";
}

node concave points_worst {
   states = ("(0.00000, 0.0700]" "(0.00000, 0.0800]" );
   label = "concave points_worst";
   ID = "concave points_worst";
}

node symmetry_worst {
   states = ("(0.000, 0.3000]" "(0.000, 0.4000]" );
   label = "symmetry_worst";
   ID = "symmetry_worst";
}

node fractal_dimension_worst {
   states = ("(0.00, 0.0000]" "(0.0000, 0.0000]" );
   label = "fractal_dimension_worst";
   ID = "fractal_dimension_worst";
}

node diagnosis {
   states = (No );
   label = "diagnosis";
   ID = "diagnosis";
}

potential ( radius_mean | symmetry_se   fractal_dimension_worst   radius_worst   ) {
   data = 
   ((((   1)   % radius_worst="(12.0000, 12.5000]"   fractal_dimension_worst="(0.00, 0.0000]"   symmetry_se="(0.0000, 0.0000]"   
   (   1)   % radius_worst="(8.000, 9.8000]"   fractal_dimension_worst="(0.00, 0.0000]"   symmetry_se="(0.0000, 0.0000]"   
   (   1))   % radius_worst="(9.0000, 12.2000]"   fractal_dimension_worst="(0.00, 0.0000]"   symmetry_se="(0.0000, 0.0000]"   
   ((   1)   % radius_worst="(12.0000, 12.5000]"   fractal_dimension_worst="(0.0000, 0.0000]"   symmetry_se="(0.0000, 0.0000]"   
   (   1)   % radius_worst="(8.000, 9.8000]"   fractal_dimension_worst="(0.0000, 0.0000]"   symmetry_se="(0.0000, 0.0000]"   
   (   1)))   % radius_worst="(9.0000, 12.2000]"   fractal_dimension_worst="(0.0000, 0.0000]"   symmetry_se="(0.0000, 0.0000]"   
   (((   1)   % radius_worst="(12.0000, 12.5000]"   fractal_dimension_worst="(0.00, 0.0000]"   symmetry_se="(0.0000, 0.0400]"   
   (   1)   % radius_worst="(8.000, 9.8000]"   fractal_dimension_worst="(0.00, 0.0000]"   symmetry_se="(0.0000, 0.0400]"   
   (   1))   % radius_worst="(9.0000, 12.2000]"   fractal_dimension_worst="(0.00, 0.0000]"   symmetry_se="(0.0000, 0.0400]"   
   ((   1)   % radius_worst="(12.0000, 12.5000]"   fractal_dimension_worst="(0.0000, 0.0000]"   symmetry_se="(0.0000, 0.0400]"   
   (   1)   % radius_worst="(8.000, 9.8000]"   fractal_dimension_worst="(0.0000, 0.0000]"   symmetry_se="(0.0000, 0.0400]"   
   (   1)))   % radius_worst="(9.0000, 12.2000]"   fractal_dimension_worst="(0.0000, 0.0000]"   symmetry_se="(0.0000, 0.0400]"   
   (((   1)   % radius_worst="(12.0000, 12.5000]"   fractal_dimension_worst="(0.00, 0.0000]"   symmetry_se="(0.00000, 0.0300]"   
   (   1)   % radius_worst="(8.000, 9.8000]"   fractal_dimension_worst="(0.00, 0.0000]"   symmetry_se="(0.00000, 0.0300]"   
   (   1))   % radius_worst="(9.0000, 12.2000]"   fractal_dimension_worst="(0.00, 0.0000]"   symmetry_se="(0.00000, 0.0300]"   
   ((   1)   % radius_worst="(12.0000, 12.5000]"   fractal_dimension_worst="(0.0000, 0.0000]"   symmetry_se="(0.00000, 0.0300]"   
   (   1)   % radius_worst="(8.000, 9.8000]"   fractal_dimension_worst="(0.0000, 0.0000]"   symmetry_se="(0.00000, 0.0300]"   
   (   1))));   % radius_worst="(9.0000, 12.2000]"   fractal_dimension_worst="(0.0000, 0.0000]"   symmetry_se="(0.00000, 0.0300]"   
}

potential ( texture_mean | concave points_mean   ) {
   data = 
   ((   0.998901   0.0010989)   % concave points_mean="(-0.0051, 0.0200]"   
   (   0.983221   0.0167785));   % concave points_mean="(0.00000, 0.0300]"   
}

potential ( perimeter_mean | concave points_mean   ) {
   data = 
   ((   0.998901   0.0010989)   % concave points_mean="(-0.0051, 0.0200]"   
   (   0.969799   0.0302013));   % concave points_mean="(0.00000, 0.0300]"   
}

potential ( area_mean | concave points_mean   ) {
   data = 
   ((   0.998901   0.0010989)   % concave points_mean="(-0.0051, 0.0200]"   
   (   0.956376   0.0436242));   % concave points_mean="(0.00000, 0.0300]"   
}

potential ( smoothness_mean | concave points_mean   ) {
   data = 
   ((   0.998901   0.0010989)   % concave points_mean="(-0.0051, 0.0200]"   
   (   0.92953   0.0704698));   % concave points_mean="(0.00000, 0.0300]"   
}

potential ( compactness_mean | concave points_mean   ) {
   data = 
   ((   0.0010989   0.998901)   % concave points_mean="(-0.0051, 0.0200]"   
   (   0.057047   0.942953));   % concave points_mean="(0.00000, 0.0300]"   
}

potential ( concavity_mean | symmetry_se   fractal_dimension_worst   radius_worst   ) {
   data = 
   ((((   1)   % radius_worst="(12.0000, 12.5000]"   fractal_dimension_worst="(0.00, 0.0000]"   symmetry_se="(0.0000, 0.0000]"   
   (   1)   % radius_worst="(8.000, 9.8000]"   fractal_dimension_worst="(0.00, 0.0000]"   symmetry_se="(0.0000, 0.0000]"   
   (   1))   % radius_worst="(9.0000, 12.2000]"   fractal_dimension_worst="(0.00, 0.0000]"   symmetry_se="(0.0000, 0.0000]"   
   ((   1)   % radius_worst="(12.0000, 12.5000]"   fractal_dimension_worst="(0.0000, 0.0000]"   symmetry_se="(0.0000, 0.0000]"   
   (   1)   % radius_worst="(8.000, 9.8000]"   fractal_dimension_worst="(0.0000, 0.0000]"   symmetry_se="(0.0000, 0.0000]"   
   (   1)))   % radius_worst="(9.0000, 12.2000]"   fractal_dimension_worst="(0.0000, 0.0000]"   symmetry_se="(0.0000, 0.0000]"   
   (((   1)   % radius_worst="(12.0000, 12.5000]"   fractal_dimension_worst="(0.00, 0.0000]"   symmetry_se="(0.0000, 0.0400]"   
   (   1)   % radius_worst="(8.000, 9.8000]"   fractal_dimension_worst="(0.00, 0.0000]"   symmetry_se="(0.0000, 0.0400]"   
   (   1))   % radius_worst="(9.0000, 12.2000]"   fractal_dimension_worst="(0.00, 0.0000]"   symmetry_se="(0.0000, 0.0400]"   
   ((   1)   % radius_worst="(12.0000, 12.5000]"   fractal_dimension_worst="(0.0000, 0.0000]"   symmetry_se="(0.0000, 0.0400]"   
   (   1)   % radius_worst="(8.000, 9.8000]"   fractal_dimension_worst="(0.0000, 0.0000]"   symmetry_se="(0.0000, 0.0400]"   
   (   1)))   % radius_worst="(9.0000, 12.2000]"   fractal_dimension_worst="(0.0000, 0.0000]"   symmetry_se="(0.0000, 0.0400]"   
   (((   1)   % radius_worst="(12.0000, 12.5000]"   fractal_dimension_worst="(0.00, 0.0000]"   symmetry_se="(0.00000, 0.0300]"   
   (   1)   % radius_worst="(8.000, 9.8000]"   fractal_dimension_worst="(0.00, 0.0000]"   symmetry_se="(0.00000, 0.0300]"   
   (   1))   % radius_worst="(9.0000, 12.2000]"   fractal_dimension_worst="(0.00, 0.0000]"   symmetry_se="(0.00000, 0.0300]"   
   ((   1)   % radius_worst="(12.0000, 12.5000]"   fractal_dimension_worst="(0.0000, 0.0000]"   symmetry_se="(0.00000, 0.0300]"   
   (   1)   % radius_worst="(8.000, 9.8000]"   fractal_dimension_worst="(0.0000, 0.0000]"   symmetry_se="(0.00000, 0.0300]"   
   (   1))));   % radius_worst="(9.0000, 12.2000]"   fractal_dimension_worst="(0.0000, 0.0000]"   symmetry_se="(0.00000, 0.0300]"   
}

potential ( concave points_mean | radius_se   ) {
   data = 
   ((   0.27561   0.72439)   % radius_se="(0.000, 0.3000]"   
   (   0.998747   0.00125313));   % radius_se="(0.000, 0.6000]"   
}

potential ( symmetry_mean | symmetry_se   fractal_dimension_worst   radius_worst   ) {
   data = 
   ((((   1)   % radius_worst="(12.0000, 12.5000]"   fractal_dimension_worst="(0.00, 0.0000]"   symmetry_se="(0.0000, 0.0000]"   
   (   1)   % radius_worst="(8.000, 9.8000]"   fractal_dimension_worst="(0.00, 0.0000]"   symmetry_se="(0.0000, 0.0000]"   
   (   1))   % radius_worst="(9.0000, 12.2000]"   fractal_dimension_worst="(0.00, 0.0000]"   symmetry_se="(0.0000, 0.0000]"   
   ((   1)   % radius_worst="(12.0000, 12.5000]"   fractal_dimension_worst="(0.0000, 0.0000]"   symmetry_se="(0.0000, 0.0000]"   
   (   1)   % radius_worst="(8.000, 9.8000]"   fractal_dimension_worst="(0.0000, 0.0000]"   symmetry_se="(0.0000, 0.0000]"   
   (   1)))   % radius_worst="(9.0000, 12.2000]"   fractal_dimension_worst="(0.0000, 0.0000]"   symmetry_se="(0.0000, 0.0000]"   
   (((   1)   % radius_worst="(12.0000, 12.5000]"   fractal_dimension_worst="(0.00, 0.0000]"   symmetry_se="(0.0000, 0.0400]"   
   (   1)   % radius_worst="(8.000, 9.8000]"   fractal_dimension_worst="(0.00, 0.0000]"   symmetry_se="(0.0000, 0.0400]"   
   (   1))   % radius_worst="(9.0000, 12.2000]"   fractal_dimension_worst="(0.00, 0.0000]"   symmetry_se="(0.0000, 0.0400]"   
   ((   1)   % radius_worst="(12.0000, 12.5000]"   fractal_dimension_worst="(0.0000, 0.0000]"   symmetry_se="(0.0000, 0.0400]"   
   (   1)   % radius_worst="(8.000, 9.8000]"   fractal_dimension_worst="(0.0000, 0.0000]"   symmetry_se="(0.0000, 0.0400]"   
   (   1)))   % radius_worst="(9.0000, 12.2000]"   fractal_dimension_worst="(0.0000, 0.0000]"   symmetry_se="(0.0000, 0.0400]"   
   (((   1)   % radius_worst="(12.0000, 12.5000]"   fractal_dimension_worst="(0.00, 0.0000]"   symmetry_se="(0.00000, 0.0300]"   
   (   1)   % radius_worst="(8.000, 9.8000]"   fractal_dimension_worst="(0.00, 0.0000]"   symmetry_se="(0.00000, 0.0300]"   
   (   1))   % radius_worst="(9.0000, 12.2000]"   fractal_dimension_worst="(0.00, 0.0000]"   symmetry_se="(0.00000, 0.0300]"   
   ((   1)   % radius_worst="(12.0000, 12.5000]"   fractal_dimension_worst="(0.0000, 0.0000]"   symmetry_se="(0.00000, 0.0300]"   
   (   1)   % radius_worst="(8.000, 9.8000]"   fractal_dimension_worst="(0.0000, 0.0000]"   symmetry_se="(0.00000, 0.0300]"   
   (   1))));   % radius_worst="(9.0000, 12.2000]"   fractal_dimension_worst="(0.0000, 0.0000]"   symmetry_se="(0.00000, 0.0300]"   
}

potential ( fractal_dimension_mean | radius_se   concave points_mean   ) {
   data = 
   (((   0.747788   0.252212)   % concave points_mean="(-0.0051, 0.0200]"   radius_se="(0.000, 0.3000]"   
   (   0.998316   0.0016835))   % concave points_mean="(0.00000, 0.0300]"   radius_se="(0.000, 0.3000]"   
   ((   0.999373   0.000627353)   % concave points_mean="(-0.0051, 0.0200]"   radius_se="(0.000, 0.6000]"   
   (   0.5   0.5)));   % concave points_mean="(0.00000, 0.0300]"   radius_se="(0.000, 0.6000]"   
}

potential (radius_se) {
   data = (  0.339404 0.660596);
}

potential ( texture_se | radius_se   ) {
   data = 
   ((   0.996748   0.00162602   0.00162602)   % radius_se="(0.000, 0.3000]"   
   (   0.0710109   0.908104   0.0208855));   % radius_se="(0.000, 0.6000]"   
}

potential ( perimeter_se | texture_se   ) {
   data = 
   ((   0.00095511   0.00095511   0.99809)   % texture_se="(0.000, 1.1000]"   
   (   0.949142   0.0392157   0.0116422)   % texture_se="(1.000, 1.1000]"   
   (   0.025641   0.025641   0.948718));   % texture_se="(1.000, 1.5000]"   
}

potential ( area_se | perimeter_se   ) {
   data = 
   ((   0.9755   0.00644745   0.0180529)   % perimeter_se="(0.000, 2.1000]"   
   (   0.0151515   0.0151515   0.969697)   % perimeter_se="(2.0, 4.0000]"   
   (   0.000908265   0.000908265   0.998183));   % perimeter_se="(2.00, 2.0000]"   
}

potential ( smoothness_se | area_se   ) {
   data = 
   ((   0.921782   0.0782178)   % area_se="(19.0000, 65.7000]"   
   (   0.125   0.875)   % area_se="(65.0000, 72.1000]"   
   (   0.00125945   0.998741));   % area_se="(7.0000, 19.6000]"   
}

potential ( compactness_se | smoothness_se   ) {
   data = 
   ((   0.039657   0.0332262   0.927117)   % smoothness_se="(0.00000, 0.0100]"   
   (   0.997725   0.00113766   0.00113766));   % smoothness_se="(0.0029, 0.0100]"   
}

potential ( concavity_se | compactness_se   ) {
   data = 
   ((   0.998906   0.00109409)   % compactness_se="(0.00000, 0.0200]"   
   (   0.96875   0.03125)   % compactness_se="(0.00000, 0.0300]"   
   (   0.0704388   0.929561));   % compactness_se="(0.0049, 0.0200]"   
}

potential ( concave points_se | concavity_se   ) {
   data = 
   ((   0.998507   0.00149254)   % concavity_se="(-0.0049, 0.0100]"   
   (   0.0687732   0.931227));   % concavity_se="(0.00000, 0.0400]"   
}

potential ( symmetry_se | concave points_se   ) {
   data = 
   ((   0.998111   0.000944287   0.000944287)   % concave points_se="(0.000, 0.0100]"   
   (   0.0730412   0.0252324   0.901726));   % concave points_se="(0.00000, 0.0100]"   
}

potential ( fractal_dimension_se | symmetry_se   ) {
   data = 
   ((   0.00059952   0.998801   0.00059952)   % symmetry_se="(0.0000, 0.0000]"   
   (   0.0333333   0.933333   0.0333333)   % symmetry_se="(0.0000, 0.0400]"   
   (   0.936275   0.0362745   0.027451));   % symmetry_se="(0.00000, 0.0300]"   
}

potential ( radius_worst | fractal_dimension_se   ) {
   data = 
   ((   0.0104493   0.0668757   0.922675)   % fractal_dimension_se="(-0.0088, 0.0020]"   
   (   0.000577701   0.998845   0.000577701)   % fractal_dimension_se="(0.0029, 0.0030]"   
   (   0.0333333   0.933333   0.0333333));   % fractal_dimension_se="(0.0031, 0.0030]"   
}

potential ( texture_worst | radius_worst   ) {
   data = 
   ((   0.833333   0.0833333   0.0833333)   % radius_worst="(12.0000, 12.5000]"   
   (   0.998902   0.000549149   0.000549149)   % radius_worst="(8.000, 9.8000]"   
   (   0.123164   0.835028   0.0418079));   % radius_worst="(9.0000, 12.2000]"   
}

potential ( perimeter_worst | texture_worst   ) {
   data = 
   ((   0.998968   0.000515996   0.000515996)   % texture_worst="(14.0000, 17.8000]"   
   (   0.0499325   0.863698   0.0863698)   % texture_worst="(17.0000, 18.0000]"   
   (   0.948718   0.025641   0.025641));   % texture_worst="(18.0000, 19.8000]"   
}

potential ( area_worst | perimeter_worst   ) {
   data = 
   ((   0.999254   0.000746269)   % perimeter_worst="(61.8000, 64.0000]"   
   (   0.0443925   0.955607)   % perimeter_worst="(64.0000, 65.8000]"   
   (   0.977273   0.0227273));   % perimeter_worst="(65.0000, 81.6000]"   
}

potential ( smoothness_worst | area_worst   ) {
   data = 
   ((   0.00107066   0.998929)   % area_worst="(189.6700, 289.3000]"   
   (   0.821168   0.178832));   % area_worst="(289.00000, 650.6000]"   
}

potential ( compactness_worst | smoothness_worst   ) {
   data = 
   ((   0.818584   0.181416)   % smoothness_worst="(0.00, 0.0000]"   
   (   0.00101833   0.998982));   % smoothness_worst="(0.000, 0.1000]"   
}

potential ( concavity_worst | compactness_worst   ) {
   data = 
   ((   0.284946   0.715054)   % compactness_worst="(0.000, 0.2000]"   
   (   0.999022   0.000978474));   % compactness_worst="(0.1200, 0.2000]"   
}

potential ( concave points_worst | concavity_worst   ) {
   data = 
   ((   0.999069   0.000931099)   % concavity_worst="(-0.0076, 0.1000]"   
   (   0.932836   0.0671642));   % concavity_worst="(0.000, 0.2000]"   
}

potential ( symmetry_worst | fractal_dimension_worst   concavity_worst   ) {
   data = 
   (((   0.5   0.5)   % concavity_worst="(-0.0076, 0.1000]"   fractal_dimension_worst="(0.00, 0.0000]"   
   (   0.97619   0.0238095))   % concavity_worst="(0.000, 0.2000]"   fractal_dimension_worst="(0.00, 0.0000]"   
   ((   0.999534   0.000465983)   % concavity_worst="(-0.0076, 0.1000]"   fractal_dimension_worst="(0.0000, 0.0000]"   
   (   0.853982   0.146018)));   % concavity_worst="(0.000, 0.2000]"   fractal_dimension_worst="(0.0000, 0.0000]"   
}

potential ( fractal_dimension_worst | concavity_worst   ) {
   data = 
   ((   0.000931099   0.999069)   % concavity_worst="(-0.0076, 0.1000]"   
   (   0.156716   0.843284));   % concavity_worst="(0.000, 0.2000]"   
}

potential ( diagnosis | symmetry_se   fractal_dimension_worst   radius_worst   ) {
   data = 
   ((((   1)   % radius_worst="(12.0000, 12.5000]"   fractal_dimension_worst="(0.00, 0.0000]"   symmetry_se="(0.0000, 0.0000]"   
   (   1)   % radius_worst="(8.000, 9.8000]"   fractal_dimension_worst="(0.00, 0.0000]"   symmetry_se="(0.0000, 0.0000]"   
   (   1))   % radius_worst="(9.0000, 12.2000]"   fractal_dimension_worst="(0.00, 0.0000]"   symmetry_se="(0.0000, 0.0000]"   
   ((   1)   % radius_worst="(12.0000, 12.5000]"   fractal_dimension_worst="(0.0000, 0.0000]"   symmetry_se="(0.0000, 0.0000]"   
   (   1)   % radius_worst="(8.000, 9.8000]"   fractal_dimension_worst="(0.0000, 0.0000]"   symmetry_se="(0.0000, 0.0000]"   
   (   1)))   % radius_worst="(9.0000, 12.2000]"   fractal_dimension_worst="(0.0000, 0.0000]"   symmetry_se="(0.0000, 0.0000]"   
   (((   1)   % radius_worst="(12.0000, 12.5000]"   fractal_dimension_worst="(0.00, 0.0000]"   symmetry_se="(0.0000, 0.0400]"   
   (   1)   % radius_worst="(8.000, 9.8000]"   fractal_dimension_worst="(0.00, 0.0000]"   symmetry_se="(0.0000, 0.0400]"   
   (   1))   % radius_worst="(9.0000, 12.2000]"   fractal_dimension_worst="(0.00, 0.0000]"   symmetry_se="(0.0000, 0.0400]"   
   ((   1)   % radius_worst="(12.0000, 12.5000]"   fractal_dimension_worst="(0.0000, 0.0000]"   symmetry_se="(0.0000, 0.0400]"   
   (   1)   % radius_worst="(8.000, 9.8000]"   fractal_dimension_worst="(0.0000, 0.0000]"   symmetry_se="(0.0000, 0.0400]"   
   (   1)))   % radius_worst="(9.0000, 12.2000]"   fractal_dimension_worst="(0.0000, 0.0000]"   symmetry_se="(0.0000, 0.0400]"   
   (((   1)   % radius_worst="(12.0000, 12.5000]"   fractal_dimension_worst="(0.00, 0.0000]"   symmetry_se="(0.00000, 0.0300]"   
   (   1)   % radius_worst="(8.000, 9.8000]"   fractal_dimension_worst="(0.00, 0.0000]"   symmetry_se="(0.00000, 0.0300]"   
   (   1))   % radius_worst="(9.0000, 12.2000]"   fractal_dimension_worst="(0.00, 0.0000]"   symmetry_se="(0.00000, 0.0300]"   
   ((   1)   % radius_worst="(12.0000, 12.5000]"   fractal_dimension_worst="(0.0000, 0.0000]"   symmetry_se="(0.00000, 0.0300]"   
   (   1)   % radius_worst="(8.000, 9.8000]"   fractal_dimension_worst="(0.0000, 0.0000]"   symmetry_se="(0.00000, 0.0300]"   
   (   1))));   % radius_worst="(9.0000, 12.2000]"   fractal_dimension_worst="(0.0000, 0.0000]"   symmetry_se="(0.00000, 0.0300]"   
}


