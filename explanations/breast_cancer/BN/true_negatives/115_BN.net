
net {
  name = unnamedBN;
  software = "aGrUM 0.17.0";
  node_size = (50 50);
}

node radius_mean {
   states = ("(8.0000, 27.2000]" );
   label = "radius_mean";
   ID = "radius_mean";
}

node texture_mean {
   states = ("(14.000, 34.0000]" "(34.000, 38.8000]" );
   label = "texture_mean";
   ID = "texture_mean";
}

node perimeter_mean {
   states = ("(163.00000, 188.4000]" "(62.00000, 163.4000]" );
   label = "perimeter_mean";
   ID = "perimeter_mean";
}

node area_mean {
   states = ("(1835.000000, 2235.5000]" "(197.8900, 1835.3000]" );
   label = "area_mean";
   ID = "area_mean";
}

node smoothness_mean {
   states = ("(0.000, 0.1000]" "(0.0000, 0.1000]" );
   label = "smoothness_mean";
   ID = "smoothness_mean";
}

node compactness_mean {
   states = ("(0.000, 0.3000]" "(0.0000, 0.2000]" );
   label = "compactness_mean";
   ID = "compactness_mean";
}

node concavity_mean {
   states = ("(-0.0085, 0.4000]" );
   label = "concavity_mean";
   ID = "concavity_mean";
}

node concave points_mean {
   states = ("(-0.0059, 0.0000]" "(0.0000, 0.0900]" "(0.0000, 0.1000]" );
   label = "concave points_mean";
   ID = "concave points_mean";
}

node symmetry_mean {
   states = ("(0.00, 0.1000]" "(0.000, 0.2000]" );
   label = "symmetry_mean";
   ID = "symmetry_mean";
}

node fractal_dimension_mean {
   states = ("(0.00000, 0.0600]" "(0.00000, 0.0900]" "(0.0419, 0.0500]" );
   label = "fractal_dimension_mean";
   ID = "fractal_dimension_mean";
}

node radius_se {
   states = ("(0.000, 0.2000]" "(0.000, 2.8000]" );
   label = "radius_se";
   ID = "radius_se";
}

node texture_se {
   states = ("(0.000, 0.7000]" "(0.000, 2.2000]" "(2.000, 3.7000]" );
   label = "texture_se";
   ID = "texture_se";
}

node perimeter_se {
   states = ("(1.000, 8.3000]" "(8.0000, 21.8000]" );
   label = "perimeter_se";
   ID = "perimeter_se";
}

node area_se {
   states = ("(12.0000, 16.9000]" "(16.00000, 482.0000]" "(482.00000, 534.1000]" );
   label = "area_se";
   ID = "area_se";
}

node smoothness_se {
   states = ("(-0.0062, 0.0050]" "(0.0000, 0.0000]" "(0.0056, 0.0200]" );
   label = "smoothness_se";
   ID = "smoothness_se";
}

node compactness_se {
   states = ("(-0.0024, 0.0600]" "(0.0000, 0.1000]" );
   label = "compactness_se";
   ID = "compactness_se";
}

node concavity_se {
   states = ("(-0.0090, 0.2000]" );
   label = "concavity_se";
   ID = "concavity_se";
}

node concave points_se {
   states = ("(-0.0069, 0.0300]" );
   label = "concave points_se";
   ID = "concave points_se";
}

node symmetry_se {
   states = ("(-0.0017, 0.0100]" "(0.00000, 0.0200]" "(0.00000, 0.0500]" );
   label = "symmetry_se";
   ID = "symmetry_se";
}

node fractal_dimension_se {
   states = ("(-0.0088, 0.0010]" "(0.0013, 0.0060]" "(0.0064, 0.0090]" );
   label = "fractal_dimension_se";
   ID = "fractal_dimension_se";
}

node radius_worst {
   states = ("(11.0000, 13.0000]" "(13.0000, 33.4000]" "(33.0000, 35.2000]" );
   label = "radius_worst";
   ID = "radius_worst";
}

node texture_worst {
   states = ("(15.0000, 22.2000]" "(22.000, 31.0000]" "(31.000, 40.7000]" );
   label = "texture_worst";
   ID = "texture_worst";
}

node perimeter_worst {
   states = ("(144.00000, 236.5000]" "(82.7299, 144.5000]" );
   label = "perimeter_worst";
   ID = "perimeter_worst";
}

node area_worst {
   states = ("(257.00000, 523.4000]" "(523.000000, 3893.2000]" );
   label = "area_worst";
   ID = "area_worst";
}

node smoothness_worst {
   states = ("(0.000, 0.2000]" "(0.0750, 0.1000]" );
   label = "smoothness_worst";
   ID = "smoothness_worst";
}

node compactness_worst {
   states = ("(0.0000, 0.9000]" );
   label = "compactness_worst";
   ID = "compactness_worst";
}

node concavity_worst {
   states = ("(-0.0017, 1.1000]" );
   label = "concavity_worst";
   ID = "concavity_worst";
}

node concave points_worst {
   states = ("(0.000, 0.0000]" "(0.0009, 0.0200]" );
   label = "concave points_worst";
   ID = "concave points_worst";
}

node symmetry_worst {
   states = ("(0.000, 0.2000]" "(0.000, 0.6000]" );
   label = "symmetry_worst";
   ID = "symmetry_worst";
}

node fractal_dimension_worst {
   states = ("(0.0600, 0.1000]" );
   label = "fractal_dimension_worst";
   ID = "fractal_dimension_worst";
}

node diagnosis {
   states = (No Yes );
   label = "diagnosis";
   ID = "diagnosis";
}

potential ( radius_mean | compactness_se   fractal_dimension_mean   ) {
   data = 
   (((   1)   % compactness_se="(-0.0024, 0.0600]"   fractal_dimension_mean="(0.00000, 0.0600]"   
   (   1))   % compactness_se="(0.0000, 0.1000]"   fractal_dimension_mean="(0.00000, 0.0600]"   
   ((   1)   % compactness_se="(-0.0024, 0.0600]"   fractal_dimension_mean="(0.00000, 0.0900]"   
   (   1))   % compactness_se="(0.0000, 0.1000]"   fractal_dimension_mean="(0.00000, 0.0900]"   
   ((   1)   % compactness_se="(-0.0024, 0.0600]"   fractal_dimension_mean="(0.0419, 0.0500]"   
   (   1)));   % compactness_se="(0.0000, 0.1000]"   fractal_dimension_mean="(0.0419, 0.0500]"   
}

potential ( texture_mean | concavity_worst   ) {
   data = 
   ((   0.995033   0.00496689));   % concavity_worst="(-0.0017, 1.1000]"   
}

potential ( perimeter_mean | concave points_mean   ) {
   data = 
   ((   0.0283843   0.971616)   % concave points_mean="(-0.0059, 0.0000]"   
   (   0.000749625   0.99925)   % concave points_mean="(0.0000, 0.0900]"   
   (   0.05   0.95));   % concave points_mean="(0.0000, 0.1000]"   
}

potential ( area_mean | concave points_mean   ) {
   data = 
   ((   0.0414847   0.958515)   % concave points_mean="(-0.0059, 0.0000]"   
   (   0.000749625   0.99925)   % concave points_mean="(0.0000, 0.0900]"   
   (   0.05   0.95));   % concave points_mean="(0.0000, 0.1000]"   
}

potential ( smoothness_mean | concave points_mean   ) {
   data = 
   ((   0.0676856   0.932314)   % concave points_mean="(-0.0059, 0.0000]"   
   (   0.000749625   0.99925)   % concave points_mean="(0.0000, 0.0900]"   
   (   0.05   0.95));   % concave points_mean="(0.0000, 0.1000]"   
}

potential ( compactness_mean | concave points_mean   ) {
   data = 
   ((   0.0545852   0.945415)   % concave points_mean="(-0.0059, 0.0000]"   
   (   0.000749625   0.99925)   % concave points_mean="(0.0000, 0.0900]"   
   (   0.05   0.95));   % concave points_mean="(0.0000, 0.1000]"   
}

potential ( concavity_mean | fractal_dimension_mean   compactness_se   ) {
   data = 
   (((   1)   % fractal_dimension_mean="(0.00000, 0.0600]"   compactness_se="(-0.0024, 0.0600]"   
   (   1)   % fractal_dimension_mean="(0.00000, 0.0900]"   compactness_se="(-0.0024, 0.0600]"   
   (   1))   % fractal_dimension_mean="(0.0419, 0.0500]"   compactness_se="(-0.0024, 0.0600]"   
   ((   1)   % fractal_dimension_mean="(0.00000, 0.0600]"   compactness_se="(0.0000, 0.1000]"   
   (   1)   % fractal_dimension_mean="(0.00000, 0.0900]"   compactness_se="(0.0000, 0.1000]"   
   (   1)));   % fractal_dimension_mean="(0.0419, 0.0500]"   compactness_se="(0.0000, 0.1000]"   
}

potential ( concave points_mean | fractal_dimension_mean   symmetry_mean   ) {
   data = 
   (((   0.914496   0.0487642   0.0367401)   % fractal_dimension_mean="(0.00000, 0.0600]"   symmetry_mean="(0.00, 0.1000]"   
   (   0.00680272   0.986395   0.00680272)   % fractal_dimension_mean="(0.00000, 0.0900]"   symmetry_mean="(0.00, 0.1000]"   
   (   0.000274801   0.99945   0.000274801))   % fractal_dimension_mean="(0.0419, 0.0500]"   symmetry_mean="(0.00, 0.1000]"   
   ((   0.00680272   0.986395   0.00680272)   % fractal_dimension_mean="(0.00000, 0.0600]"   symmetry_mean="(0.000, 0.2000]"   
   (   0.333333   0.333333   0.333333)   % fractal_dimension_mean="(0.00000, 0.0900]"   symmetry_mean="(0.000, 0.2000]"   
   (   0.333333   0.333333   0.333333)));   % fractal_dimension_mean="(0.0419, 0.0500]"   symmetry_mean="(0.000, 0.2000]"   
}

potential ( symmetry_mean | fractal_dimension_mean   ) {
   data = 
   ((   0.910584   0.0894161)   % fractal_dimension_mean="(0.00000, 0.0600]"   
   (   0.98   0.02)   % fractal_dimension_mean="(0.00000, 0.0900]"   
   (   0.999176   0.000823723));   % fractal_dimension_mean="(0.0419, 0.0500]"   
}

potential ( fractal_dimension_mean | radius_se   ) {
   data = 
   ((   0.889431   0.0796748   0.0308943)   % radius_se="(0.000, 0.2000]"   
   (   0.000835422   0.000835422   0.998329));   % radius_se="(0.000, 2.8000]"   
}

potential ( radius_se | area_se   ) {
   data = 
   ((   0.77204   0.22796)   % area_se="(12.0000, 16.9000]"   
   (   0.000990099   0.99901)   % area_se="(16.00000, 482.0000]"   
   (   0.125   0.875));   % area_se="(482.00000, 534.1000]"   
}

potential ( texture_se | radius_se   area_se   ) {
   data = 
   (((   0.998912   0.000543774   0.000543774)   % radius_se="(0.000, 0.2000]"   area_se="(12.0000, 16.9000]"   
   (   0.366483   0.499079   0.134438))   % radius_se="(0.000, 2.8000]"   area_se="(12.0000, 16.9000]"   
   ((   0.333333   0.333333   0.333333)   % radius_se="(0.000, 0.2000]"   area_se="(16.00000, 482.0000]"   
   (   0.00033036   0.999339   0.00033036))   % radius_se="(0.000, 2.8000]"   area_se="(16.00000, 482.0000]"   
   ((   0.333333   0.333333   0.333333)   % radius_se="(0.000, 0.2000]"   area_se="(482.00000, 534.1000]"   
   (   0.047619   0.904762   0.047619)));   % radius_se="(0.000, 2.8000]"   area_se="(482.00000, 534.1000]"   
}

potential ( perimeter_se | area_se   texture_se   ) {
   data = 
   (((   0.999509   0.000491159)   % area_se="(12.0000, 16.9000]"   texture_se="(0.000, 0.7000]"   
   (   0.5   0.5)   % area_se="(16.00000, 482.0000]"   texture_se="(0.000, 0.7000]"   
   (   0.5   0.5))   % area_se="(482.00000, 534.1000]"   texture_se="(0.000, 0.7000]"   
   ((   0.466912   0.533088)   % area_se="(12.0000, 16.9000]"   texture_se="(0.000, 2.2000]"   
   (   0.99967   0.000330469)   % area_se="(16.00000, 482.0000]"   texture_se="(0.000, 2.2000]"   
   (   0.95   0.05))   % area_se="(482.00000, 534.1000]"   texture_se="(0.000, 2.2000]"   
   ((   0.986486   0.0135135)   % area_se="(12.0000, 16.9000]"   texture_se="(2.000, 3.7000]"   
   (   0.5   0.5)   % area_se="(16.00000, 482.0000]"   texture_se="(2.000, 3.7000]"   
   (   0.5   0.5)));   % area_se="(482.00000, 534.1000]"   texture_se="(2.000, 3.7000]"   
}

potential ( area_se | smoothness_se   ) {
   data = 
   ((   0.921705   0.0705426   0.00775194)   % smoothness_se="(-0.0062, 0.0050]"   
   (   0.0833333   0.833333   0.0833333)   % smoothness_se="(0.0000, 0.0000]"   
   (   0.000706215   0.998588   0.000706215));   % smoothness_se="(0.0056, 0.0200]"   
}

potential ( smoothness_se | symmetry_se   compactness_se   ) {
   data = 
   (((   0.812047   0.0059918   0.181962)   % symmetry_se="(-0.0017, 0.0100]"   compactness_se="(-0.0024, 0.0600]"   
   (   0.000495295   0.000495295   0.999009)   % symmetry_se="(0.00000, 0.0200]"   compactness_se="(-0.0024, 0.0600]"   
   (   0.00775194   0.00775194   0.984496))   % symmetry_se="(0.00000, 0.0500]"   compactness_se="(-0.0024, 0.0600]"   
   ((   0.00900901   0.00900901   0.981982)   % symmetry_se="(-0.0017, 0.0100]"   compactness_se="(0.0000, 0.1000]"   
   (   0.333333   0.333333   0.333333)   % symmetry_se="(0.00000, 0.0200]"   compactness_se="(0.0000, 0.1000]"   
   (   0.333333   0.333333   0.333333)));   % symmetry_se="(0.00000, 0.0500]"   compactness_se="(0.0000, 0.1000]"   
}

potential ( compactness_se | symmetry_se   ) {
   data = 
   ((   0.966179   0.0338208)   % symmetry_se="(-0.0017, 0.0100]"   
   (   0.998516   0.00148368)   % symmetry_se="(0.00000, 0.0200]"   
   (   0.977273   0.0227273));   % symmetry_se="(0.00000, 0.0500]"   
}

potential ( concavity_se | compactness_se   fractal_dimension_mean   ) {
   data = 
   (((   1)   % compactness_se="(-0.0024, 0.0600]"   fractal_dimension_mean="(0.00000, 0.0600]"   
   (   1))   % compactness_se="(0.0000, 0.1000]"   fractal_dimension_mean="(0.00000, 0.0600]"   
   ((   1)   % compactness_se="(-0.0024, 0.0600]"   fractal_dimension_mean="(0.00000, 0.0900]"   
   (   1))   % compactness_se="(0.0000, 0.1000]"   fractal_dimension_mean="(0.00000, 0.0900]"   
   ((   1)   % compactness_se="(-0.0024, 0.0600]"   fractal_dimension_mean="(0.0419, 0.0500]"   
   (   1)));   % compactness_se="(0.0000, 0.1000]"   fractal_dimension_mean="(0.0419, 0.0500]"   
}

potential ( concave points_se | fractal_dimension_mean   compactness_se   ) {
   data = 
   (((   1)   % fractal_dimension_mean="(0.00000, 0.0600]"   compactness_se="(-0.0024, 0.0600]"   
   (   1)   % fractal_dimension_mean="(0.00000, 0.0900]"   compactness_se="(-0.0024, 0.0600]"   
   (   1))   % fractal_dimension_mean="(0.0419, 0.0500]"   compactness_se="(-0.0024, 0.0600]"   
   ((   1)   % fractal_dimension_mean="(0.00000, 0.0600]"   compactness_se="(0.0000, 0.1000]"   
   (   1)   % fractal_dimension_mean="(0.00000, 0.0900]"   compactness_se="(0.0000, 0.1000]"   
   (   1)));   % fractal_dimension_mean="(0.0419, 0.0500]"   compactness_se="(0.0000, 0.1000]"   
}

potential ( symmetry_se | fractal_dimension_se   ) {
   data = 
   ((   0.946852   0.0161756   0.0369728)   % fractal_dimension_se="(-0.0088, 0.0010]"   
   (   0.00105485   0.99789   0.00105485)   % fractal_dimension_se="(0.0013, 0.0060]"   
   (   0.025641   0.948718   0.025641));   % fractal_dimension_se="(0.0064, 0.0090]"   
}

potential ( fractal_dimension_se | radius_worst   ) {
   data = 
   ((   0.949478   0.0302032   0.0203185)   % radius_worst="(11.0000, 13.0000]"   
   (   0.00112994   0.99774   0.00112994)   % radius_worst="(13.0000, 33.4000]"   
   (   0.0833333   0.833333   0.0833333));   % radius_worst="(33.0000, 35.2000]"   
}

potential (radius_worst) {
   data = (  0.669978 0.325607 0.00441501);
}

potential ( texture_worst | radius_worst   radius_mean   ) {
   data = 
   (((   0.998902   0.000549149   0.000549149)   % radius_worst="(11.0000, 13.0000]"   radius_mean="(8.0000, 27.2000]"   
   (   0.0926554   0.865537   0.0418079)   % radius_worst="(13.0000, 33.4000]"   radius_mean="(8.0000, 27.2000]"   
   (   0.833333   0.0833333   0.0833333)));   % radius_worst="(33.0000, 35.2000]"   radius_mean="(8.0000, 27.2000]"   
}

potential ( perimeter_worst | texture_worst   area_worst   ) {
   data = 
   (((   0.000392773   0.999607)   % texture_worst="(15.0000, 22.2000]"   area_worst="(257.00000, 523.4000]"   
   (   0.412621   0.587379)   % texture_worst="(22.000, 31.0000]"   area_worst="(257.00000, 523.4000]"   
   (   0.02   0.98))   % texture_worst="(31.000, 40.7000]"   area_worst="(257.00000, 523.4000]"   
   ((   0.5   0.5)   % texture_worst="(15.0000, 22.2000]"   area_worst="(523.000000, 3893.2000]"   
   (   0.00122249   0.998778)   % texture_worst="(22.000, 31.0000]"   area_worst="(523.000000, 3893.2000]"   
   (   0.5   0.5)));   % texture_worst="(31.000, 40.7000]"   area_worst="(523.000000, 3893.2000]"   
}

potential ( area_worst | texture_worst   smoothness_worst   ) {
   data = 
   (((   0.5   0.5)   % texture_worst="(15.0000, 22.2000]"   smoothness_worst="(0.000, 0.2000]"   
   (   0.00143266   0.998567)   % texture_worst="(22.000, 31.0000]"   smoothness_worst="(0.000, 0.2000]"   
   (   0.5   0.5))   % texture_worst="(31.000, 40.7000]"   smoothness_worst="(0.000, 0.2000]"   
   ((   0.999607   0.000392773)   % texture_worst="(15.0000, 22.2000]"   smoothness_worst="(0.0750, 0.1000]"   
   (   0.628834   0.371166)   % texture_worst="(22.000, 31.0000]"   smoothness_worst="(0.0750, 0.1000]"   
   (   0.98   0.02)));   % texture_worst="(31.000, 40.7000]"   smoothness_worst="(0.0750, 0.1000]"   
}

potential ( smoothness_worst | texture_worst   ) {
   data = 
   ((   0.000784929   0.999215)   % texture_worst="(15.0000, 22.2000]"   
   (   0.681641   0.318359)   % texture_worst="(22.000, 31.0000]"   
   (   0.0384615   0.961538));   % texture_worst="(31.000, 40.7000]"   
}

potential ( compactness_worst | fractal_dimension_mean   compactness_se   ) {
   data = 
   (((   1)   % fractal_dimension_mean="(0.00000, 0.0600]"   compactness_se="(-0.0024, 0.0600]"   
   (   1)   % fractal_dimension_mean="(0.00000, 0.0900]"   compactness_se="(-0.0024, 0.0600]"   
   (   1))   % fractal_dimension_mean="(0.0419, 0.0500]"   compactness_se="(-0.0024, 0.0600]"   
   ((   1)   % fractal_dimension_mean="(0.00000, 0.0600]"   compactness_se="(0.0000, 0.1000]"   
   (   1)   % fractal_dimension_mean="(0.00000, 0.0900]"   compactness_se="(0.0000, 0.1000]"   
   (   1)));   % fractal_dimension_mean="(0.0419, 0.0500]"   compactness_se="(0.0000, 0.1000]"   
}

potential ( concavity_worst | compactness_se   fractal_dimension_mean   ) {
   data = 
   (((   1)   % compactness_se="(-0.0024, 0.0600]"   fractal_dimension_mean="(0.00000, 0.0600]"   
   (   1))   % compactness_se="(0.0000, 0.1000]"   fractal_dimension_mean="(0.00000, 0.0600]"   
   ((   1)   % compactness_se="(-0.0024, 0.0600]"   fractal_dimension_mean="(0.00000, 0.0900]"   
   (   1))   % compactness_se="(0.0000, 0.1000]"   fractal_dimension_mean="(0.00000, 0.0900]"   
   ((   1)   % compactness_se="(-0.0024, 0.0600]"   fractal_dimension_mean="(0.0419, 0.0500]"   
   (   1)));   % compactness_se="(0.0000, 0.1000]"   fractal_dimension_mean="(0.0419, 0.0500]"   
}

potential ( concave points_worst | smoothness_worst   ) {
   data = 
   ((   0.5   0.5)   % smoothness_worst="(0.000, 0.2000]"   
   (   0.00102669   0.998973));   % smoothness_worst="(0.0750, 0.1000]"   
}

potential ( symmetry_worst | concave points_worst   ) {
   data = 
   ((   0.347458   0.652542)   % concave points_worst="(0.000, 0.0000]"   
   (   0.999083   0.000917431));   % concave points_worst="(0.0009, 0.0200]"   
}

potential ( fractal_dimension_worst | compactness_se   fractal_dimension_mean   ) {
   data = 
   (((   1)   % compactness_se="(-0.0024, 0.0600]"   fractal_dimension_mean="(0.00000, 0.0600]"   
   (   1))   % compactness_se="(0.0000, 0.1000]"   fractal_dimension_mean="(0.00000, 0.0600]"   
   ((   1)   % compactness_se="(-0.0024, 0.0600]"   fractal_dimension_mean="(0.00000, 0.0900]"   
   (   1))   % compactness_se="(0.0000, 0.1000]"   fractal_dimension_mean="(0.00000, 0.0900]"   
   ((   1)   % compactness_se="(-0.0024, 0.0600]"   fractal_dimension_mean="(0.0419, 0.0500]"   
   (   1)));   % compactness_se="(0.0000, 0.1000]"   fractal_dimension_mean="(0.0419, 0.0500]"   
}

potential ( diagnosis | radius_se   concave points_mean   ) {
   data = 
   (((   0.998906   0.00109409)   % radius_se="(0.000, 0.2000]"   concave points_mean="(-0.0059, 0.0000]"   
   (   0.5   0.5))   % radius_se="(0.000, 2.8000]"   concave points_mean="(-0.0059, 0.0000]"   
   ((   0.996403   0.00359712)   % radius_se="(0.000, 0.2000]"   concave points_mean="(0.0000, 0.0900]"   
   (   0.00041841   0.999582))   % radius_se="(0.000, 2.8000]"   concave points_mean="(0.0000, 0.0900]"   
   ((   0.657895   0.342105)   % radius_se="(0.000, 0.2000]"   concave points_mean="(0.0000, 0.1000]"   
   (   0.5   0.5)));   % radius_se="(0.000, 2.8000]"   concave points_mean="(0.0000, 0.1000]"   
}


